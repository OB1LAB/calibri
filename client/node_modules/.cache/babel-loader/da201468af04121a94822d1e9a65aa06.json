{"ast":null,"code":"import axios from \"axios\";\nexport const API_URL = process.env.REACT_APP_SERVER_URL;\nconst $api = axios.create({\n  withCredentials: true,\n  baseURL: API_URL\n});\n$api.interceptors.request.use(config => {\n  config.headers.Authorization = `Bearer ${localStorage.getItem(\"token\")}`;\n  return config;\n});\n$api.interceptors.response.use(config => {\n  return config;\n}, async error => {\n  const originalRequest = error.config;\n  if (error.response.status === 401 && originalRequest && !originalRequest._isRetry) {\n    originalRequest._isRetry = true;\n    try {\n      const response = await axios.get(`${API_URL}/refreshToken`, {\n        withCredentials: true\n      });\n      localStorage.setItem(\"token\", response.data.accessToken);\n      return $api.request(originalRequest);\n    } catch (e) {\n      // return \"Not authorized\"\n      console.log(\"Not authorized \");\n    }\n  }\n  throw error;\n});\nexport default $api;","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_SERVER_URL","$api","create","withCredentials","baseURL","interceptors","request","use","config","headers","Authorization","localStorage","getItem","response","error","originalRequest","status","_isRetry","get","setItem","data","accessToken","e","console","log"],"sources":["C:/Users/OB1CHAM/Desktop/OB1LAB/React/calibri/client/src/http/index.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport const API_URL = process.env.REACT_APP_SERVER_URL;\r\n\r\nconst $api = axios.create({\r\n  withCredentials: true,\r\n  baseURL: API_URL,\r\n});\r\n\r\n$api.interceptors.request.use((config) => {\r\n  config.headers.Authorization = `Bearer ${localStorage.getItem(\"token\")}`;\r\n  return config;\r\n});\r\n\r\n$api.interceptors.response.use(\r\n  (config) => {\r\n    return config;\r\n  },\r\n  async (error) => {\r\n    const originalRequest = error.config;\r\n    if (\r\n      error.response.status === 401 &&\r\n      originalRequest &&\r\n      !originalRequest._isRetry\r\n    ) {\r\n      originalRequest._isRetry = true;\r\n      try {\r\n        const response = await axios.get(`${API_URL}/refreshToken`, {\r\n          withCredentials: true,\r\n        });\r\n        localStorage.setItem(\"token\", response.data.accessToken);\r\n        return $api.request(originalRequest);\r\n      } catch (e) {\r\n        // return \"Not authorized\"\r\n        console.log(\"Not authorized \");\r\n      }\r\n    }\r\n    throw error;\r\n  }\r\n);\r\n\r\nexport default $api;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,oBAAoB;AAEvD,MAAMC,IAAI,GAAGL,KAAK,CAACM,MAAM,CAAC;EACxBC,eAAe,EAAE,IAAI;EACrBC,OAAO,EAAEP;AACX,CAAC,CAAC;AAEFI,IAAI,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACxCA,MAAM,CAACC,OAAO,CAACC,aAAa,GAAI,UAASC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAE,EAAC;EACxE,OAAOJ,MAAM;AACf,CAAC,CAAC;AAEFP,IAAI,CAACI,YAAY,CAACQ,QAAQ,CAACN,GAAG,CAC3BC,MAAM,IAAK;EACV,OAAOA,MAAM;AACf,CAAC,EACD,MAAOM,KAAK,IAAK;EACf,MAAMC,eAAe,GAAGD,KAAK,CAACN,MAAM;EACpC,IACEM,KAAK,CAACD,QAAQ,CAACG,MAAM,KAAK,GAAG,IAC7BD,eAAe,IACf,CAACA,eAAe,CAACE,QAAQ,EACzB;IACAF,eAAe,CAACE,QAAQ,GAAG,IAAI;IAC/B,IAAI;MACF,MAAMJ,QAAQ,GAAG,MAAMjB,KAAK,CAACsB,GAAG,CAAE,GAAErB,OAAQ,eAAc,EAAE;QAC1DM,eAAe,EAAE;MACnB,CAAC,CAAC;MACFQ,YAAY,CAACQ,OAAO,CAAC,OAAO,EAAEN,QAAQ,CAACO,IAAI,CAACC,WAAW,CAAC;MACxD,OAAOpB,IAAI,CAACK,OAAO,CAACS,eAAe,CAAC;IACtC,CAAC,CAAC,OAAOO,CAAC,EAAE;MACV;MACAC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;IAChC;EACF;EACA,MAAMV,KAAK;AACb,CAAC,CACF;AAED,eAAeb,IAAI"},"metadata":{},"sourceType":"module"}