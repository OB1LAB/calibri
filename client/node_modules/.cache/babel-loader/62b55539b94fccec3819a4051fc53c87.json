{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\OB1CHAM\\\\Desktop\\\\OB1LAB\\\\React\\\\calibri\\\\client\\\\src\\\\pages\\\\AdminPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext } from \"react\";\nimport SelectServer from \"../components/Selectors/SelectServer\";\nimport StaffList from \"../components/admin/StaffList\";\nimport SelectAction from \"../components/Selectors/SelectAction\";\nimport UserService from \"../services/UserService\";\nimport { Context } from \"..\";\nimport Logs from \"../components/admin/Logs\";\nimport ReportEdit from \"../components/admin/ReportEdit\";\nimport \"../styles/Admin.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AdminPage() {\n  _s();\n  const {\n    store\n  } = useContext(Context);\n  const [staff, setStaff] = useState([]);\n  const [action, setAction] = useState(\"appointment\");\n  const [selectedServer, setselectedServer] = useState({\n    value: \"dt\",\n    label: \"DraconicTech\"\n  });\n  useEffect(() => {\n    document.title = \"Админ панель\";\n    const getUsers = async () => {\n      const response = await UserService.fetchUsers();\n      response && setStaff(response.data);\n    };\n    getUsers();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"adminPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selectAction\",\n      children: /*#__PURE__*/_jsxDEV(SelectAction, {\n        onChange: setAction\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), action === \"appointment\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"1400px\"\n      },\n      children: [store.user[\"dt\"][\"lvl\"] > 1 && store.user[\"tmrpg\"][\"lvl\"] > 1 && /*#__PURE__*/_jsxDEV(SelectServer, {\n        onChange: _ref => {\n          let {\n            value\n          } = _ref;\n          setselectedServer(value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(SelectServer, {\n        value: selectedServer,\n        onChange: value => {\n          setselectedServer(value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(StaffList, {\n        staffData: staff,\n        user: store.user,\n        selectedServer: selectedServer.value,\n        setStaff: setStaff\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this) || action === \"logs\" && /*#__PURE__*/_jsxDEV(Logs, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 31\n    }, this) || action === \"reportEdit\" && /*#__PURE__*/_jsxDEV(ReportEdit, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 37\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminPage, \"m2OjF53UANn6AkJ2EWkeVRSDjSc=\");\n_c = AdminPage;\nvar _c;\n$RefreshReg$(_c, \"AdminPage\");","map":{"version":3,"names":["React","useEffect","useState","useContext","SelectServer","StaffList","SelectAction","UserService","Context","Logs","ReportEdit","AdminPage","store","staff","setStaff","action","setAction","selectedServer","setselectedServer","value","label","document","title","getUsers","response","fetchUsers","data","width","user"],"sources":["C:/Users/OB1CHAM/Desktop/OB1LAB/React/calibri/client/src/pages/AdminPage.jsx"],"sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport SelectServer from \"../components/Selectors/SelectServer\";\r\nimport StaffList from \"../components/admin/StaffList\";\r\nimport SelectAction from \"../components/Selectors/SelectAction\";\r\nimport UserService from \"../services/UserService\";\r\nimport { Context } from \"..\";\r\nimport Logs from \"../components/admin/Logs\";\r\nimport ReportEdit from \"../components/admin/ReportEdit\";\r\nimport \"../styles/Admin.css\";\r\n\r\nexport default function AdminPage() {\r\n  const { store } = useContext(Context);\r\n  const [staff, setStaff] = useState([]);\r\n  const [action, setAction] = useState(\"appointment\");\r\n  const [selectedServer, setselectedServer] = useState({\r\n    value: \"dt\",\r\n    label: \"DraconicTech\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    document.title = \"Админ панель\";\r\n    const getUsers = async () => {\r\n      const response = await UserService.fetchUsers();\r\n      response && setStaff(response.data);\r\n    };\r\n    getUsers();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"adminPage\">\r\n      <div className=\"selectAction\">\r\n        <SelectAction onChange={setAction} />\r\n      </div>\r\n      {(action === \"appointment\" && (\r\n        <div style={{ width: \"1400px\" }}>\r\n          {store.user[\"dt\"][\"lvl\"] > 1 && store.user[\"tmrpg\"][\"lvl\"] > 1 && (\r\n            <SelectServer\r\n              onChange={({ value }) => {\r\n                setselectedServer(value);\r\n              }}\r\n            />\r\n          )}\r\n          <SelectServer\r\n            value={selectedServer}\r\n            onChange={(value) => {\r\n              setselectedServer(value);\r\n            }}\r\n          />\r\n          <StaffList\r\n            staffData={staff}\r\n            user={store.user}\r\n            selectedServer={selectedServer.value}\r\n            setStaff={setStaff}\r\n          />\r\n        </div>\r\n      )) ||\r\n        (action === \"logs\" && <Logs />) ||\r\n        (action === \"reportEdit\" && <ReportEdit />)}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAC9D,OAAOC,YAAY,MAAM,sCAAsC;AAC/D,OAAOC,SAAS,MAAM,+BAA+B;AACrD,OAAOC,YAAY,MAAM,sCAAsC;AAC/D,OAAOC,WAAW,MAAM,yBAAyB;AACjD,SAASC,OAAO,QAAQ,IAAI;AAC5B,OAAOC,IAAI,MAAM,0BAA0B;AAC3C,OAAOC,UAAU,MAAM,gCAAgC;AACvD,OAAO,qBAAqB;AAAC;AAE7B,eAAe,SAASC,SAAS,GAAG;EAAA;EAClC,MAAM;IAAEC;EAAM,CAAC,GAAGT,UAAU,CAACK,OAAO,CAAC;EACrC,MAAM,CAACK,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,aAAa,CAAC;EACnD,MAAM,CAACe,cAAc,EAAEC,iBAAiB,CAAC,GAAGhB,QAAQ,CAAC;IACnDiB,KAAK,EAAE,IAAI;IACXC,KAAK,EAAE;EACT,CAAC,CAAC;EAEFnB,SAAS,CAAC,MAAM;IACdoB,QAAQ,CAACC,KAAK,GAAG,cAAc;IAC/B,MAAMC,QAAQ,GAAG,YAAY;MAC3B,MAAMC,QAAQ,GAAG,MAAMjB,WAAW,CAACkB,UAAU,EAAE;MAC/CD,QAAQ,IAAIV,QAAQ,CAACU,QAAQ,CAACE,IAAI,CAAC;IACrC,CAAC;IACDH,QAAQ,EAAE;EACZ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE;IAAK,SAAS,EAAC,WAAW;IAAA,wBACxB;MAAK,SAAS,EAAC,cAAc;MAAA,uBAC3B,QAAC,YAAY;QAAC,QAAQ,EAAEP;MAAU;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACjC,EACJD,MAAM,KAAK,aAAa,iBACxB;MAAK,KAAK,EAAE;QAAEY,KAAK,EAAE;MAAS,CAAE;MAAA,WAC7Bf,KAAK,CAACgB,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,IAAIhB,KAAK,CAACgB,IAAI,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,iBAC5D,QAAC,YAAY;QACX,QAAQ,EAAE,QAAe;UAAA,IAAd;YAAET;UAAM,CAAC;UAClBD,iBAAiB,CAACC,KAAK,CAAC;QAC1B;MAAE;QAAA;QAAA;QAAA;MAAA,QAEL,eACD,QAAC,YAAY;QACX,KAAK,EAAEF,cAAe;QACtB,QAAQ,EAAGE,KAAK,IAAK;UACnBD,iBAAiB,CAACC,KAAK,CAAC;QAC1B;MAAE;QAAA;QAAA;QAAA;MAAA,QACF,eACF,QAAC,SAAS;QACR,SAAS,EAAEN,KAAM;QACjB,IAAI,EAAED,KAAK,CAACgB,IAAK;QACjB,cAAc,EAAEX,cAAc,CAACE,KAAM;QACrC,QAAQ,EAAEL;MAAS;QAAA;QAAA;QAAA;MAAA,QACnB;IAAA;MAAA;MAAA;MAAA;IAAA,QAEL,IACEC,MAAM,KAAK,MAAM,iBAAI,QAAC,IAAI;MAAA;MAAA;MAAA;IAAA,QAAI,IAC9BA,MAAM,KAAK,YAAY,iBAAI,QAAC,UAAU;MAAA;MAAA;MAAA;IAAA,QAAI;EAAA;IAAA;IAAA;IAAA;EAAA,QACzC;AAEV;AAAC,GAlDuBJ,SAAS;AAAA,KAATA,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module"}