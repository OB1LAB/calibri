{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\OB1CHAM\\\\Desktop\\\\OB1LAB\\\\React\\\\calibri\\\\client\\\\src\\\\components\\\\activity\\\\PlayerList.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useMemo } from \"react\";\nimport Player from \"./Player\";\nimport classes from \"./Activity.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PlayerList(_ref) {\n  _s();\n  let {\n    players,\n    activityPlayers\n  } = _ref;\n  const [find, setFind] = useState(\"\");\n  // const sortedPlayers = useMemo(() => {\n  //   if (!find) {\n  //     return players;\n  //   }\n  //   players\n  //     .filter((player) => !activityPlayers.includes(player.name))\n  //     .sort((a, b) => a.name.localeCompare(b.name))\n  //     .sort((a, b) => b[\"lvl\"] - a[\"lvl\"])\n  //     .map((player) => {\n  //       return <Player key={player.name} player={player} />;\n  //     });\n  //   return items[typeItem];\n  // }, [categoriesFilter, items, selectedServer, typeItem]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.players,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.find,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        value: find,\n        onChange: e => setFind(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.playerList,\n      children: players.filter(player => !activityPlayers.includes(player.name) && player.name.toLowerCase().includes(find.toLowerCase())).sort((a, b) => a.name.localeCompare(b.name)).sort((a, b) => b[\"lvl\"] - a[\"lvl\"]).slice(0, 25).map(player => {\n        return /*#__PURE__*/_jsxDEV(Player, {\n          player: player\n        }, player.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 20\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(PlayerList, \"Dp3elCrps5Gbel4YROKDcaL56S0=\");\n_c = PlayerList;\nvar _c;\n$RefreshReg$(_c, \"PlayerList\");","map":{"version":3,"names":["useState","useMemo","Player","classes","PlayerList","players","activityPlayers","find","setFind","e","target","value","playerList","filter","player","includes","name","toLowerCase","sort","a","b","localeCompare","slice","map"],"sources":["C:/Users/OB1CHAM/Desktop/OB1LAB/React/calibri/client/src/components/activity/PlayerList.jsx"],"sourcesContent":["import { useState, useMemo } from \"react\";\r\nimport Player from \"./Player\";\r\nimport classes from \"./Activity.module.css\";\r\n\r\nexport default function PlayerList({ players, activityPlayers }) {\r\n  const [find, setFind] = useState(\"\");\r\n  // const sortedPlayers = useMemo(() => {\r\n  //   if (!find) {\r\n  //     return players;\r\n  //   }\r\n  //   players\r\n  //     .filter((player) => !activityPlayers.includes(player.name))\r\n  //     .sort((a, b) => a.name.localeCompare(b.name))\r\n  //     .sort((a, b) => b[\"lvl\"] - a[\"lvl\"])\r\n  //     .map((player) => {\r\n  //       return <Player key={player.name} player={player} />;\r\n  //     });\r\n  //   return items[typeItem];\r\n  // }, [categoriesFilter, items, selectedServer, typeItem]);\r\n  return (\r\n    <div className={classes.players}>\r\n      <div className={classes.find}>\r\n        <input value={find} onChange={(e) => setFind(e.target.value)}></input>\r\n      </div>\r\n      <div className={classes.playerList}>\r\n        {players\r\n          .filter(\r\n            (player) =>\r\n              !activityPlayers.includes(player.name) &&\r\n              player.name.toLowerCase().includes(find.toLowerCase())\r\n          )\r\n          .sort((a, b) => a.name.localeCompare(b.name))\r\n          .sort((a, b) => b[\"lvl\"] - a[\"lvl\"])\r\n          .slice(0, 25)\r\n          .map((player) => {\r\n            return <Player key={player.name} player={player} />;\r\n          })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,OAAO,QAAQ,OAAO;AACzC,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,OAAO,MAAM,uBAAuB;AAAC;AAE5C,eAAe,SAASC,UAAU,OAA+B;EAAA;EAAA,IAA9B;IAAEC,OAAO;IAAEC;EAAgB,CAAC;EAC7D,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,oBACE;IAAK,SAAS,EAAEG,OAAO,CAACE,OAAQ;IAAA,wBAC9B;MAAK,SAAS,EAAEF,OAAO,CAACI,IAAK;MAAA,uBAC3B;QAAO,KAAK,EAAEA,IAAK;QAAC,QAAQ,EAAGE,CAAC,IAAKD,OAAO,CAACC,CAAC,CAACC,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA;IAAS;MAAA;MAAA;MAAA;IAAA,QAClE,eACN;MAAK,SAAS,EAAER,OAAO,CAACS,UAAW;MAAA,UAChCP,OAAO,CACLQ,MAAM,CACJC,MAAM,IACL,CAACR,eAAe,CAACS,QAAQ,CAACD,MAAM,CAACE,IAAI,CAAC,IACtCF,MAAM,CAACE,IAAI,CAACC,WAAW,EAAE,CAACF,QAAQ,CAACR,IAAI,CAACU,WAAW,EAAE,CAAC,CACzD,CACAC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACH,IAAI,CAACK,aAAa,CAACD,CAAC,CAACJ,IAAI,CAAC,CAAC,CAC5CE,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAAC,KAAK,CAAC,GAAGD,CAAC,CAAC,KAAK,CAAC,CAAC,CACnCG,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CACZC,GAAG,CAAET,MAAM,IAAK;QACf,oBAAO,QAAC,MAAM;UAAmB,MAAM,EAAEA;QAAO,GAA5BA,MAAM,CAACE,IAAI;UAAA;UAAA;UAAA;QAAA,QAAoB;MACrD,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QACA;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,GApCuBZ,UAAU;AAAA,KAAVA,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module"}