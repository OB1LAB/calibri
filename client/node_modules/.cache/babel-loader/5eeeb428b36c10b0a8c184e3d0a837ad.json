{"ast":null,"code":"// TinyColor v1.4.2\n// https://github.com/bgrins/TinyColor\n// Brian Grinstead, MIT License\n\nvar tinycolor = function (Math) {\n  var trimLeft = /^\\s+/,\n    trimRight = /\\s+$/,\n    mathRound = Math.round,\n    mathMin = Math.min,\n    mathMax = Math.max,\n    mathRandom = Math.random;\n  function tinycolor(color, opts) {\n    color = color ? color : '';\n    opts = opts || {};\n\n    // If input is already a tinycolor, return itself\n    if (color instanceof tinycolor) {\n      return color;\n    }\n    // If we are called as a function, call using new instead\n    if (!(this instanceof tinycolor)) {\n      return new tinycolor(color, opts);\n    }\n    var rgb = inputToRGB(color);\n    this._originalInput = color, this._r = rgb.r, this._g = rgb.g, this._b = rgb.b, this._a = rgb.a, this._roundA = mathRound(100 * this._a) / 100, this._format = opts.format || rgb.format;\n    this._gradientType = opts.gradientType;\n\n    // Don't let the range of [0,255] come back in [0,1].\n    // Potentially lose a little bit of precision here, but will fix issues where\n    // .5 gets interpreted as half of the total, instead of half of 1\n    // If it was supposed to be 128, this was already taken care of by `inputToRgb`\n    if (this._r < 1) {\n      this._r = mathRound(this._r);\n    }\n    if (this._g < 1) {\n      this._g = mathRound(this._g);\n    }\n    if (this._b < 1) {\n      this._b = mathRound(this._b);\n    }\n    this._ok = rgb.ok;\n  }\n  tinycolor.prototype = {\n    isDark: function () {\n      return this.getBrightness() < 128;\n    },\n    isLight: function () {\n      return !this.isDark();\n    },\n    isValid: function () {\n      return this._ok;\n    },\n    getOriginalInput: function () {\n      return this._originalInput;\n    },\n    getFormat: function () {\n      return this._format;\n    },\n    getAlpha: function () {\n      return this._a;\n    },\n    getBrightness: function () {\n      //http://www.w3.org/TR/AERT#color-contrast\n      var rgb = this.toRgb();\n      return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;\n    },\n    getLuminance: function () {\n      //http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n      var rgb = this.toRgb();\n      var RsRGB, GsRGB, BsRGB, R, G, B;\n      RsRGB = rgb.r / 255;\n      GsRGB = rgb.g / 255;\n      BsRGB = rgb.b / 255;\n      if (RsRGB <= 0.03928) {\n        R = RsRGB / 12.92;\n      } else {\n        R = Math.pow((RsRGB + 0.055) / 1.055, 2.4);\n      }\n      if (GsRGB <= 0.03928) {\n        G = GsRGB / 12.92;\n      } else {\n        G = Math.pow((GsRGB + 0.055) / 1.055, 2.4);\n      }\n      if (BsRGB <= 0.03928) {\n        B = BsRGB / 12.92;\n      } else {\n        B = Math.pow((BsRGB + 0.055) / 1.055, 2.4);\n      }\n      return 0.2126 * R + 0.7152 * G + 0.0722 * B;\n    },\n    setAlpha: function (value) {\n      this._a = boundAlpha(value);\n      this._roundA = mathRound(100 * this._a) / 100;\n      return this;\n    },\n    toHsv: function () {\n      var hsv = rgbToHsv(this._r, this._g, this._b);\n      return {\n        h: hsv.h * 360,\n        s: hsv.s,\n        v: hsv.v,\n        a: this._a\n      };\n    },\n    toHsvString: function () {\n      var hsv = rgbToHsv(this._r, this._g, this._b);\n      var h = mathRound(hsv.h * 360),\n        s = mathRound(hsv.s * 100),\n        v = mathRound(hsv.v * 100);\n      return this._a == 1 ? 'hsv(' + h + ', ' + s + '%, ' + v + '%)' : 'hsva(' + h + ', ' + s + '%, ' + v + '%, ' + this._roundA + ')';\n    },\n    toHsl: function () {\n      var hsl = rgbToHsl(this._r, this._g, this._b);\n      return {\n        h: hsl.h * 360,\n        s: hsl.s,\n        l: hsl.l,\n        a: this._a\n      };\n    },\n    toHslString: function () {\n      var hsl = rgbToHsl(this._r, this._g, this._b);\n      var h = mathRound(hsl.h * 360),\n        s = mathRound(hsl.s * 100),\n        l = mathRound(hsl.l * 100);\n      return this._a == 1 ? 'hsl(' + h + ', ' + s + '%, ' + l + '%)' : 'hsla(' + h + ', ' + s + '%, ' + l + '%, ' + this._roundA + ')';\n    },\n    toHex: function (allow3Char) {\n      return rgbToHex(this._r, this._g, this._b, allow3Char);\n    },\n    toHexString: function (allow3Char) {\n      return '#' + this.toHex(allow3Char);\n    },\n    toHex8: function (allow4Char) {\n      return rgbaToHex(this._r, this._g, this._b, this._a, allow4Char);\n    },\n    toHex8String: function (allow4Char) {\n      return '#' + this.toHex8(allow4Char);\n    },\n    toRgb: function () {\n      return {\n        r: mathRound(this._r),\n        g: mathRound(this._g),\n        b: mathRound(this._b),\n        a: this._a\n      };\n    },\n    toRgbString: function () {\n      return this._a == 1 ? 'rgb(' + mathRound(this._r) + ', ' + mathRound(this._g) + ', ' + mathRound(this._b) + ')' : 'rgba(' + mathRound(this._r) + ', ' + mathRound(this._g) + ', ' + mathRound(this._b) + ', ' + this._roundA + ')';\n    },\n    toPercentageRgb: function () {\n      return {\n        r: mathRound(bound01(this._r, 255) * 100) + '%',\n        g: mathRound(bound01(this._g, 255) * 100) + '%',\n        b: mathRound(bound01(this._b, 255) * 100) + '%',\n        a: this._a\n      };\n    },\n    toPercentageRgbString: function () {\n      return this._a == 1 ? 'rgb(' + mathRound(bound01(this._r, 255) * 100) + '%, ' + mathRound(bound01(this._g, 255) * 100) + '%, ' + mathRound(bound01(this._b, 255) * 100) + '%)' : 'rgba(' + mathRound(bound01(this._r, 255) * 100) + '%, ' + mathRound(bound01(this._g, 255) * 100) + '%, ' + mathRound(bound01(this._b, 255) * 100) + '%, ' + this._roundA + ')';\n    },\n    toName: function () {\n      if (this._a === 0) {\n        return 'transparent';\n      }\n      if (this._a < 1) {\n        return false;\n      }\n      return hexNames[rgbToHex(this._r, this._g, this._b, true)] || false;\n    },\n    toFilter: function (secondColor) {\n      var hex8String = '#' + rgbaToArgbHex(this._r, this._g, this._b, this._a);\n      var secondHex8String = hex8String;\n      var gradientType = this._gradientType ? 'GradientType = 1, ' : '';\n      if (secondColor) {\n        var s = tinycolor(secondColor);\n        secondHex8String = '#' + rgbaToArgbHex(s._r, s._g, s._b, s._a);\n      }\n      return 'progid:DXImageTransform.Microsoft.gradient(' + gradientType + 'startColorstr=' + hex8String + ',endColorstr=' + secondHex8String + ')';\n    },\n    toString: function (format) {\n      var formatSet = !!format;\n      format = format || this._format;\n      var formattedString = false;\n      var hasAlpha = this._a < 1 && this._a >= 0;\n      var needsAlphaFormat = !formatSet && hasAlpha && (format === 'hex' || format === 'hex6' || format === 'hex3' || format === 'hex4' || format === 'hex8' || format === 'name');\n      if (needsAlphaFormat) {\n        // Special case for \"transparent\", all other non-alpha formats\n        // will return rgba when there is transparency.\n        if (format === 'name' && this._a === 0) {\n          return this.toName();\n        }\n        return this.toRgbString();\n      }\n      if (format === 'rgb') {\n        formattedString = this.toRgbString();\n      }\n      if (format === 'prgb') {\n        formattedString = this.toPercentageRgbString();\n      }\n      if (format === 'hex' || format === 'hex6') {\n        formattedString = this.toHexString();\n      }\n      if (format === 'hex3') {\n        formattedString = this.toHexString(true);\n      }\n      if (format === 'hex4') {\n        formattedString = this.toHex8String(true);\n      }\n      if (format === 'hex8') {\n        formattedString = this.toHex8String();\n      }\n      if (format === 'name') {\n        formattedString = this.toName();\n      }\n      if (format === 'hsl') {\n        formattedString = this.toHslString();\n      }\n      if (format === 'hsv') {\n        formattedString = this.toHsvString();\n      }\n      return formattedString || this.toHexString();\n    },\n    clone: function () {\n      return tinycolor(this.toString());\n    },\n    _applyModification: function (fn, args) {\n      var color = fn.apply(null, [this].concat([].slice.call(args)));\n      this._r = color._r;\n      this._g = color._g;\n      this._b = color._b;\n      this.setAlpha(color._a);\n      return this;\n    },\n    lighten: function () {\n      return this._applyModification(lighten, arguments);\n    },\n    brighten: function () {\n      return this._applyModification(brighten, arguments);\n    },\n    darken: function () {\n      return this._applyModification(darken, arguments);\n    },\n    desaturate: function () {\n      return this._applyModification(desaturate, arguments);\n    },\n    saturate: function () {\n      return this._applyModification(saturate, arguments);\n    },\n    greyscale: function () {\n      return this._applyModification(greyscale, arguments);\n    },\n    spin: function () {\n      return this._applyModification(spin, arguments);\n    },\n    _applyCombination: function (fn, args) {\n      return fn.apply(null, [this].concat([].slice.call(args)));\n    },\n    analogous: function () {\n      return this._applyCombination(analogous, arguments);\n    },\n    complement: function () {\n      return this._applyCombination(complement, arguments);\n    },\n    monochromatic: function () {\n      return this._applyCombination(monochromatic, arguments);\n    },\n    splitcomplement: function () {\n      return this._applyCombination(splitcomplement, arguments);\n    },\n    triad: function () {\n      return this._applyCombination(triad, arguments);\n    },\n    tetrad: function () {\n      return this._applyCombination(tetrad, arguments);\n    }\n  };\n\n  // If input is an object, force 1 into \"1.0\" to handle ratios properly\n  // String input requires \"1.0\" as input, so 1 will be treated as 1\n  tinycolor.fromRatio = function (color, opts) {\n    if (typeof color == 'object') {\n      var newColor = {};\n      for (var i in color) {\n        if (color.hasOwnProperty(i)) {\n          if (i === 'a') {\n            newColor[i] = color[i];\n          } else {\n            newColor[i] = convertToPercentage(color[i]);\n          }\n        }\n      }\n      color = newColor;\n    }\n    return tinycolor(color, opts);\n  };\n\n  // Given a string or object, convert that input to RGB\n  // Possible string inputs:\n  //\n  //     \"red\"\n  //     \"#f00\" or \"f00\"\n  //     \"#ff0000\" or \"ff0000\"\n  //     \"#ff000000\" or \"ff000000\"\n  //     \"rgb 255 0 0\" or \"rgb (255, 0, 0)\"\n  //     \"rgb 1.0 0 0\" or \"rgb (1, 0, 0)\"\n  //     \"rgba (255, 0, 0, 1)\" or \"rgba 255, 0, 0, 1\"\n  //     \"rgba (1.0, 0, 0, 1)\" or \"rgba 1.0, 0, 0, 1\"\n  //     \"hsl(0, 100%, 50%)\" or \"hsl 0 100% 50%\"\n  //     \"hsla(0, 100%, 50%, 1)\" or \"hsla 0 100% 50%, 1\"\n  //     \"hsv(0, 100%, 100%)\" or \"hsv 0 100% 100%\"\n  //\n  function inputToRGB(color) {\n    var rgb = {\n      r: 0,\n      g: 0,\n      b: 0\n    };\n    var a = 1;\n    var s = null;\n    var v = null;\n    var l = null;\n    var ok = false;\n    var format = false;\n    if (typeof color == 'string') {\n      color = stringInputToObject(color);\n    }\n    if (typeof color == 'object') {\n      if (isValidCSSUnit(color.r) && isValidCSSUnit(color.g) && isValidCSSUnit(color.b)) {\n        rgb = rgbToRgb(color.r, color.g, color.b);\n        ok = true;\n        format = String(color.r).substr(-1) === '%' ? 'prgb' : 'rgb';\n      } else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.v)) {\n        s = convertToPercentage(color.s);\n        v = convertToPercentage(color.v);\n        rgb = hsvToRgb(color.h, s, v);\n        ok = true;\n        format = 'hsv';\n      } else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.l)) {\n        s = convertToPercentage(color.s);\n        l = convertToPercentage(color.l);\n        rgb = hslToRgb(color.h, s, l);\n        ok = true;\n        format = 'hsl';\n      }\n      if (color.hasOwnProperty('a')) {\n        a = color.a;\n      }\n    }\n    a = boundAlpha(a);\n    return {\n      ok: ok,\n      format: color.format || format,\n      r: mathMin(255, mathMax(rgb.r, 0)),\n      g: mathMin(255, mathMax(rgb.g, 0)),\n      b: mathMin(255, mathMax(rgb.b, 0)),\n      a: a\n    };\n  }\n\n  // Conversion Functions\n  // --------------------\n\n  // `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:\n  // <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>\n\n  // `rgbToRgb`\n  // Handle bounds / percentage checking to conform to CSS color spec\n  // <http://www.w3.org/TR/css3-color/>\n  // *Assumes:* r, g, b in [0, 255] or [0, 1]\n  // *Returns:* { r, g, b } in [0, 255]\n  function rgbToRgb(r, g, b) {\n    return {\n      r: bound01(r, 255) * 255,\n      g: bound01(g, 255) * 255,\n      b: bound01(b, 255) * 255\n    };\n  }\n\n  // `rgbToHsl`\n  // Converts an RGB color value to HSL.\n  // *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]\n  // *Returns:* { h, s, l } in [0,1]\n  function rgbToHsl(r, g, b) {\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n    var max = mathMax(r, g, b),\n      min = mathMin(r, g, b);\n    var h,\n      s,\n      l = (max + min) / 2;\n    if (max == min) {\n      h = s = 0; // achromatic\n    } else {\n      var d = max - min;\n      s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n      switch (max) {\n        case r:\n          h = (g - b) / d + (g < b ? 6 : 0);\n          break;\n        case g:\n          h = (b - r) / d + 2;\n          break;\n        case b:\n          h = (r - g) / d + 4;\n          break;\n      }\n      h /= 6;\n    }\n    return {\n      h: h,\n      s: s,\n      l: l\n    };\n  }\n\n  // `hslToRgb`\n  // Converts an HSL color value to RGB.\n  // *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]\n  // *Returns:* { r, g, b } in the set [0, 255]\n  function hslToRgb(h, s, l) {\n    var r, g, b;\n    h = bound01(h, 360);\n    s = bound01(s, 100);\n    l = bound01(l, 100);\n    function hue2rgb(p, q, t) {\n      if (t < 0) t += 1;\n      if (t > 1) t -= 1;\n      if (t < 1 / 6) return p + (q - p) * 6 * t;\n      if (t < 1 / 2) return q;\n      if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n      return p;\n    }\n    if (s === 0) {\n      r = g = b = l; // achromatic\n    } else {\n      var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n      var p = 2 * l - q;\n      r = hue2rgb(p, q, h + 1 / 3);\n      g = hue2rgb(p, q, h);\n      b = hue2rgb(p, q, h - 1 / 3);\n    }\n    return {\n      r: r * 255,\n      g: g * 255,\n      b: b * 255\n    };\n  }\n\n  // `rgbToHsv`\n  // Converts an RGB color value to HSV\n  // *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]\n  // *Returns:* { h, s, v } in [0,1]\n  function rgbToHsv(r, g, b) {\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n    var max = mathMax(r, g, b),\n      min = mathMin(r, g, b);\n    var h,\n      s,\n      v = max;\n    var d = max - min;\n    s = max === 0 ? 0 : d / max;\n    if (max == min) {\n      h = 0; // achromatic\n    } else {\n      switch (max) {\n        case r:\n          h = (g - b) / d + (g < b ? 6 : 0);\n          break;\n        case g:\n          h = (b - r) / d + 2;\n          break;\n        case b:\n          h = (r - g) / d + 4;\n          break;\n      }\n      h /= 6;\n    }\n    return {\n      h: h,\n      s: s,\n      v: v\n    };\n  }\n\n  // `hsvToRgb`\n  // Converts an HSV color value to RGB.\n  // *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]\n  // *Returns:* { r, g, b } in the set [0, 255]\n  function hsvToRgb(h, s, v) {\n    h = bound01(h, 360) * 6;\n    s = bound01(s, 100);\n    v = bound01(v, 100);\n    var i = Math.floor(h),\n      f = h - i,\n      p = v * (1 - s),\n      q = v * (1 - f * s),\n      t = v * (1 - (1 - f) * s),\n      mod = i % 6,\n      r = [v, q, p, p, t, v][mod],\n      g = [t, v, v, q, p, p][mod],\n      b = [p, p, t, v, v, q][mod];\n    return {\n      r: r * 255,\n      g: g * 255,\n      b: b * 255\n    };\n  }\n\n  // `rgbToHex`\n  // Converts an RGB color to hex\n  // Assumes r, g, and b are contained in the set [0, 255]\n  // Returns a 3 or 6 character hex\n  function rgbToHex(r, g, b, allow3Char) {\n    var hex = [pad2(mathRound(r).toString(16)), pad2(mathRound(g).toString(16)), pad2(mathRound(b).toString(16))];\n\n    // Return a 3 character hex if possible\n    if (allow3Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1)) {\n      return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);\n    }\n    return hex.join('');\n  }\n\n  // `rgbaToHex`\n  // Converts an RGBA color plus alpha transparency to hex\n  // Assumes r, g, b are contained in the set [0, 255] and\n  // a in [0, 1]. Returns a 4 or 8 character rgba hex\n  function rgbaToHex(r, g, b, a, allow4Char) {\n    var hex = [pad2(mathRound(r).toString(16)), pad2(mathRound(g).toString(16)), pad2(mathRound(b).toString(16)), pad2(convertDecimalToHex(a))];\n\n    // Return a 4 character hex if possible\n    if (allow4Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1) && hex[3].charAt(0) == hex[3].charAt(1)) {\n      return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0);\n    }\n    return hex.join('');\n  }\n\n  // `rgbaToArgbHex`\n  // Converts an RGBA color to an ARGB Hex8 string\n  // Rarely used, but required for \"toFilter()\"\n  function rgbaToArgbHex(r, g, b, a) {\n    var hex = [pad2(convertDecimalToHex(a)), pad2(mathRound(r).toString(16)), pad2(mathRound(g).toString(16)), pad2(mathRound(b).toString(16))];\n    return hex.join('');\n  }\n\n  // `equals`\n  // Can be called with any tinycolor input\n  tinycolor.equals = function (color1, color2) {\n    if (!color1 || !color2) {\n      return false;\n    }\n    return tinycolor(color1).toRgbString() == tinycolor(color2).toRgbString();\n  };\n  tinycolor.random = function () {\n    return tinycolor.fromRatio({\n      r: mathRandom(),\n      g: mathRandom(),\n      b: mathRandom()\n    });\n  };\n\n  // Modification Functions\n  // ----------------------\n  // Thanks to less.js for some of the basics here\n  // <https://github.com/cloudhead/less.js/blob/master/lib/less/functions.js>\n\n  function desaturate(color, amount) {\n    amount = amount === 0 ? 0 : amount || 10;\n    var hsl = tinycolor(color).toHsl();\n    hsl.s -= amount / 100;\n    hsl.s = clamp01(hsl.s);\n    return tinycolor(hsl);\n  }\n  function saturate(color, amount) {\n    amount = amount === 0 ? 0 : amount || 10;\n    var hsl = tinycolor(color).toHsl();\n    hsl.s += amount / 100;\n    hsl.s = clamp01(hsl.s);\n    return tinycolor(hsl);\n  }\n  function greyscale(color) {\n    return tinycolor(color).desaturate(100);\n  }\n  function lighten(color, amount) {\n    amount = amount === 0 ? 0 : amount || 10;\n    var hsl = tinycolor(color).toHsl();\n    hsl.l += amount / 100;\n    hsl.l = clamp01(hsl.l);\n    return tinycolor(hsl);\n  }\n  function brighten(color, amount) {\n    amount = amount === 0 ? 0 : amount || 10;\n    var rgb = tinycolor(color).toRgb();\n    rgb.r = mathMax(0, mathMin(255, rgb.r - mathRound(255 * -(amount / 100))));\n    rgb.g = mathMax(0, mathMin(255, rgb.g - mathRound(255 * -(amount / 100))));\n    rgb.b = mathMax(0, mathMin(255, rgb.b - mathRound(255 * -(amount / 100))));\n    return tinycolor(rgb);\n  }\n  function darken(color, amount) {\n    amount = amount === 0 ? 0 : amount || 10;\n    var hsl = tinycolor(color).toHsl();\n    hsl.l -= amount / 100;\n    hsl.l = clamp01(hsl.l);\n    return tinycolor(hsl);\n  }\n\n  // Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.\n  // Values outside of this range will be wrapped into this range.\n  function spin(color, amount) {\n    var hsl = tinycolor(color).toHsl();\n    var hue = (hsl.h + amount) % 360;\n    hsl.h = hue < 0 ? 360 + hue : hue;\n    return tinycolor(hsl);\n  }\n\n  // Combination Functions\n  // ---------------------\n  // Thanks to jQuery xColor for some of the ideas behind these\n  // <https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js>\n\n  function complement(color) {\n    var hsl = tinycolor(color).toHsl();\n    hsl.h = (hsl.h + 180) % 360;\n    return tinycolor(hsl);\n  }\n  function triad(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [tinycolor(color), tinycolor({\n      h: (h + 120) % 360,\n      s: hsl.s,\n      l: hsl.l\n    }), tinycolor({\n      h: (h + 240) % 360,\n      s: hsl.s,\n      l: hsl.l\n    })];\n  }\n  function tetrad(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [tinycolor(color), tinycolor({\n      h: (h + 90) % 360,\n      s: hsl.s,\n      l: hsl.l\n    }), tinycolor({\n      h: (h + 180) % 360,\n      s: hsl.s,\n      l: hsl.l\n    }), tinycolor({\n      h: (h + 270) % 360,\n      s: hsl.s,\n      l: hsl.l\n    })];\n  }\n  function splitcomplement(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [tinycolor(color), tinycolor({\n      h: (h + 72) % 360,\n      s: hsl.s,\n      l: hsl.l\n    }), tinycolor({\n      h: (h + 216) % 360,\n      s: hsl.s,\n      l: hsl.l\n    })];\n  }\n  function analogous(color, results, slices) {\n    results = results || 6;\n    slices = slices || 30;\n    var hsl = tinycolor(color).toHsl();\n    var part = 360 / slices;\n    var ret = [tinycolor(color)];\n    for (hsl.h = (hsl.h - (part * results >> 1) + 720) % 360; --results;) {\n      hsl.h = (hsl.h + part) % 360;\n      ret.push(tinycolor(hsl));\n    }\n    return ret;\n  }\n  function monochromatic(color, results) {\n    results = results || 6;\n    var hsv = tinycolor(color).toHsv();\n    var h = hsv.h,\n      s = hsv.s,\n      v = hsv.v;\n    var ret = [];\n    var modification = 1 / results;\n    while (results--) {\n      ret.push(tinycolor({\n        h: h,\n        s: s,\n        v: v\n      }));\n      v = (v + modification) % 1;\n    }\n    return ret;\n  }\n\n  // Utility Functions\n  // ---------------------\n\n  tinycolor.mix = function (color1, color2, amount) {\n    amount = amount === 0 ? 0 : amount || 50;\n    var rgb1 = tinycolor(color1).toRgb();\n    var rgb2 = tinycolor(color2).toRgb();\n    var p = amount / 100;\n    var rgba = {\n      r: (rgb2.r - rgb1.r) * p + rgb1.r,\n      g: (rgb2.g - rgb1.g) * p + rgb1.g,\n      b: (rgb2.b - rgb1.b) * p + rgb1.b,\n      a: (rgb2.a - rgb1.a) * p + rgb1.a\n    };\n    return tinycolor(rgba);\n  };\n\n  // Readability Functions\n  // ---------------------\n  // <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef (WCAG Version 2)\n\n  // `contrast`\n  // Analyze the 2 colors and returns the color contrast defined by (WCAG Version 2)\n  tinycolor.readability = function (color1, color2) {\n    var c1 = tinycolor(color1);\n    var c2 = tinycolor(color2);\n    return (Math.max(c1.getLuminance(), c2.getLuminance()) + 0.05) / (Math.min(c1.getLuminance(), c2.getLuminance()) + 0.05);\n  };\n\n  // `isReadable`\n  // Ensure that foreground and background color combinations meet WCAG2 guidelines.\n  // The third argument is an optional Object.\n  //      the 'level' property states 'AA' or 'AAA' - if missing or invalid, it defaults to 'AA';\n  //      the 'size' property states 'large' or 'small' - if missing or invalid, it defaults to 'small'.\n  // If the entire object is absent, isReadable defaults to {level:\"AA\",size:\"small\"}.\n\n  // *Example*\n  //    tinycolor.isReadable(\"#000\", \"#111\") => false\n  //    tinycolor.isReadable(\"#000\", \"#111\",{level:\"AA\",size:\"large\"}) => false\n  tinycolor.isReadable = function (color1, color2, wcag2) {\n    var readability = tinycolor.readability(color1, color2);\n    var wcag2Parms, out;\n    out = false;\n    wcag2Parms = validateWCAG2Parms(wcag2);\n    switch (wcag2Parms.level + wcag2Parms.size) {\n      case 'AAsmall':\n      case 'AAAlarge':\n        out = readability >= 4.5;\n        break;\n      case 'AAlarge':\n        out = readability >= 3;\n        break;\n      case 'AAAsmall':\n        out = readability >= 7;\n        break;\n    }\n    return out;\n  };\n\n  // `mostReadable`\n  // Given a base color and a list of possible foreground or background\n  // colors for that base, returns the most readable color.\n  // Optionally returns Black or White if the most readable color is unreadable.\n  // *Example*\n  //    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:false}).toHexString(); // \"#112255\"\n  //    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:true}).toHexString();  // \"#ffffff\"\n  //    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"large\"}).toHexString(); // \"#faf3f3\"\n  //    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"small\"}).toHexString(); // \"#ffffff\"\n  tinycolor.mostReadable = function (baseColor, colorList, args) {\n    var bestColor = null;\n    var bestScore = 0;\n    var readability;\n    var includeFallbackColors, level, size;\n    args = args || {};\n    includeFallbackColors = args.includeFallbackColors;\n    level = args.level;\n    size = args.size;\n    for (var i = 0; i < colorList.length; i++) {\n      readability = tinycolor.readability(baseColor, colorList[i]);\n      if (readability > bestScore) {\n        bestScore = readability;\n        bestColor = tinycolor(colorList[i]);\n      }\n    }\n    if (tinycolor.isReadable(baseColor, bestColor, {\n      level: level,\n      size: size\n    }) || !includeFallbackColors) {\n      return bestColor;\n    } else {\n      args.includeFallbackColors = false;\n      return tinycolor.mostReadable(baseColor, ['#fff', '#000'], args);\n    }\n  };\n\n  // Big List of Colors\n  // ------------------\n  // <http://www.w3.org/TR/css3-color/#svg-color>\n  var names = tinycolor.names = {\n    aliceblue: 'f0f8ff',\n    antiquewhite: 'faebd7',\n    aqua: '0ff',\n    aquamarine: '7fffd4',\n    azure: 'f0ffff',\n    beige: 'f5f5dc',\n    bisque: 'ffe4c4',\n    black: '000',\n    blanchedalmond: 'ffebcd',\n    blue: '00f',\n    blueviolet: '8a2be2',\n    brown: 'a52a2a',\n    burlywood: 'deb887',\n    burntsienna: 'ea7e5d',\n    cadetblue: '5f9ea0',\n    chartreuse: '7fff00',\n    chocolate: 'd2691e',\n    coral: 'ff7f50',\n    cornflowerblue: '6495ed',\n    cornsilk: 'fff8dc',\n    crimson: 'dc143c',\n    cyan: '0ff',\n    darkblue: '00008b',\n    darkcyan: '008b8b',\n    darkgoldenrod: 'b8860b',\n    darkgray: 'a9a9a9',\n    darkgreen: '006400',\n    darkgrey: 'a9a9a9',\n    darkkhaki: 'bdb76b',\n    darkmagenta: '8b008b',\n    darkolivegreen: '556b2f',\n    darkorange: 'ff8c00',\n    darkorchid: '9932cc',\n    darkred: '8b0000',\n    darksalmon: 'e9967a',\n    darkseagreen: '8fbc8f',\n    darkslateblue: '483d8b',\n    darkslategray: '2f4f4f',\n    darkslategrey: '2f4f4f',\n    darkturquoise: '00ced1',\n    darkviolet: '9400d3',\n    deeppink: 'ff1493',\n    deepskyblue: '00bfff',\n    dimgray: '696969',\n    dimgrey: '696969',\n    dodgerblue: '1e90ff',\n    firebrick: 'b22222',\n    floralwhite: 'fffaf0',\n    forestgreen: '228b22',\n    fuchsia: 'f0f',\n    gainsboro: 'dcdcdc',\n    ghostwhite: 'f8f8ff',\n    gold: 'ffd700',\n    goldenrod: 'daa520',\n    gray: '808080',\n    green: '008000',\n    greenyellow: 'adff2f',\n    grey: '808080',\n    honeydew: 'f0fff0',\n    hotpink: 'ff69b4',\n    indianred: 'cd5c5c',\n    indigo: '4b0082',\n    ivory: 'fffff0',\n    khaki: 'f0e68c',\n    lavender: 'e6e6fa',\n    lavenderblush: 'fff0f5',\n    lawngreen: '7cfc00',\n    lemonchiffon: 'fffacd',\n    lightblue: 'add8e6',\n    lightcoral: 'f08080',\n    lightcyan: 'e0ffff',\n    lightgoldenrodyellow: 'fafad2',\n    lightgray: 'd3d3d3',\n    lightgreen: '90ee90',\n    lightgrey: 'd3d3d3',\n    lightpink: 'ffb6c1',\n    lightsalmon: 'ffa07a',\n    lightseagreen: '20b2aa',\n    lightskyblue: '87cefa',\n    lightslategray: '789',\n    lightslategrey: '789',\n    lightsteelblue: 'b0c4de',\n    lightyellow: 'ffffe0',\n    lime: '0f0',\n    limegreen: '32cd32',\n    linen: 'faf0e6',\n    magenta: 'f0f',\n    maroon: '800000',\n    mediumaquamarine: '66cdaa',\n    mediumblue: '0000cd',\n    mediumorchid: 'ba55d3',\n    mediumpurple: '9370db',\n    mediumseagreen: '3cb371',\n    mediumslateblue: '7b68ee',\n    mediumspringgreen: '00fa9a',\n    mediumturquoise: '48d1cc',\n    mediumvioletred: 'c71585',\n    midnightblue: '191970',\n    mintcream: 'f5fffa',\n    mistyrose: 'ffe4e1',\n    moccasin: 'ffe4b5',\n    navajowhite: 'ffdead',\n    navy: '000080',\n    oldlace: 'fdf5e6',\n    olive: '808000',\n    olivedrab: '6b8e23',\n    orange: 'ffa500',\n    orangered: 'ff4500',\n    orchid: 'da70d6',\n    palegoldenrod: 'eee8aa',\n    palegreen: '98fb98',\n    paleturquoise: 'afeeee',\n    palevioletred: 'db7093',\n    papayawhip: 'ffefd5',\n    peachpuff: 'ffdab9',\n    peru: 'cd853f',\n    pink: 'ffc0cb',\n    plum: 'dda0dd',\n    powderblue: 'b0e0e6',\n    purple: '800080',\n    rebeccapurple: '663399',\n    red: 'f00',\n    rosybrown: 'bc8f8f',\n    royalblue: '4169e1',\n    saddlebrown: '8b4513',\n    salmon: 'fa8072',\n    sandybrown: 'f4a460',\n    seagreen: '2e8b57',\n    seashell: 'fff5ee',\n    sienna: 'a0522d',\n    silver: 'c0c0c0',\n    skyblue: '87ceeb',\n    slateblue: '6a5acd',\n    slategray: '708090',\n    slategrey: '708090',\n    snow: 'fffafa',\n    springgreen: '00ff7f',\n    steelblue: '4682b4',\n    tan: 'd2b48c',\n    teal: '008080',\n    thistle: 'd8bfd8',\n    tomato: 'ff6347',\n    turquoise: '40e0d0',\n    violet: 'ee82ee',\n    wheat: 'f5deb3',\n    white: 'fff',\n    whitesmoke: 'f5f5f5',\n    yellow: 'ff0',\n    yellowgreen: '9acd32'\n  };\n\n  // Make it easy to access colors via `hexNames[hex]`\n  var hexNames = tinycolor.hexNames = flip(names);\n\n  // Utilities\n  // ---------\n\n  // `{ 'name1': 'val1' }` becomes `{ 'val1': 'name1' }`\n  function flip(o) {\n    var flipped = {};\n    for (var i in o) {\n      if (o.hasOwnProperty(i)) {\n        flipped[o[i]] = i;\n      }\n    }\n    return flipped;\n  }\n\n  // Return a valid alpha value [0,1] with all invalid values being set to 1\n  function boundAlpha(a) {\n    a = parseFloat(a);\n    if (isNaN(a) || a < 0 || a > 1) {\n      a = 1;\n    }\n    return a;\n  }\n\n  // Take input from [0, n] and return it as [0, 1]\n  function bound01(n, max) {\n    if (isOnePointZero(n)) {\n      n = '100%';\n    }\n    var processPercent = isPercentage(n);\n    n = mathMin(max, mathMax(0, parseFloat(n)));\n\n    // Automatically convert percentage into number\n    if (processPercent) {\n      n = parseInt(n * max, 10) / 100;\n    }\n\n    // Handle floating point rounding errors\n    if (Math.abs(n - max) < 0.000001) {\n      return 1;\n    }\n\n    // Convert into [0, 1] range if it isn't already\n    return n % max / parseFloat(max);\n  }\n\n  // Force a number between 0 and 1\n  function clamp01(val) {\n    return mathMin(1, mathMax(0, val));\n  }\n\n  // Parse a base-16 hex value into a base-10 integer\n  function parseIntFromHex(val) {\n    return parseInt(val, 16);\n  }\n\n  // Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1\n  // <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>\n  function isOnePointZero(n) {\n    return typeof n == 'string' && n.indexOf('.') != -1 && parseFloat(n) === 1;\n  }\n\n  // Check to see if string passed in is a percentage\n  function isPercentage(n) {\n    return typeof n === 'string' && n.indexOf('%') != -1;\n  }\n\n  // Force a hex value to have 2 characters\n  function pad2(c) {\n    return c.length == 1 ? '0' + c : '' + c;\n  }\n\n  // Replace a decimal with it's percentage value\n  function convertToPercentage(n) {\n    if (n <= 1) {\n      n = n * 100 + '%';\n    }\n    return n;\n  }\n\n  // Converts a decimal to a hex value\n  function convertDecimalToHex(d) {\n    return Math.round(parseFloat(d) * 255).toString(16);\n  }\n  // Converts a hex value to a decimal\n  function convertHexToDecimal(h) {\n    return parseIntFromHex(h) / 255;\n  }\n  var matchers = function () {\n    // <http://www.w3.org/TR/css3-values/#integers>\n    var CSS_INTEGER = '[-\\\\+]?\\\\d+%?';\n\n    // <http://www.w3.org/TR/css3-values/#number-value>\n    var CSS_NUMBER = '[-\\\\+]?\\\\d*\\\\.\\\\d+%?';\n\n    // Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.\n    var CSS_UNIT = '(?:' + CSS_NUMBER + ')|(?:' + CSS_INTEGER + ')';\n\n    // Actual matching.\n    // Parentheses and commas are optional, but not required.\n    // Whitespace can take the place of commas or opening paren\n    var PERMISSIVE_MATCH3 = '[\\\\s|\\\\(]+(' + CSS_UNIT + ')[,|\\\\s]+(' + CSS_UNIT + ')[,|\\\\s]+(' + CSS_UNIT + ')\\\\s*\\\\)?';\n    var PERMISSIVE_MATCH4 = '[\\\\s|\\\\(]+(' + CSS_UNIT + ')[,|\\\\s]+(' + CSS_UNIT + ')[,|\\\\s]+(' + CSS_UNIT + ')[,|\\\\s]+(' + CSS_UNIT + ')\\\\s*\\\\)?';\n    return {\n      CSS_UNIT: new RegExp(CSS_UNIT),\n      rgb: new RegExp('rgb' + PERMISSIVE_MATCH3),\n      rgba: new RegExp('rgba' + PERMISSIVE_MATCH4),\n      hsl: new RegExp('hsl' + PERMISSIVE_MATCH3),\n      hsla: new RegExp('hsla' + PERMISSIVE_MATCH4),\n      hsv: new RegExp('hsv' + PERMISSIVE_MATCH3),\n      hsva: new RegExp('hsva' + PERMISSIVE_MATCH4),\n      hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n      hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n      hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n      hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/\n    };\n  }();\n\n  // `isValidCSSUnit`\n  // Take in a single string / number and check to see if it looks like a CSS unit\n  // (see `matchers` above for definition).\n  function isValidCSSUnit(color) {\n    return !!matchers.CSS_UNIT.exec(color);\n  }\n\n  // `stringInputToObject`\n  // Permissive string parsing.  Take in a number of formats, and output an object\n  // based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`\n  function stringInputToObject(color) {\n    color = color.replace(trimLeft, '').replace(trimRight, '').toLowerCase();\n    var named = false;\n    if (names[color]) {\n      color = names[color];\n      named = true;\n    } else if (color == 'transparent') {\n      return {\n        r: 0,\n        g: 0,\n        b: 0,\n        a: 0,\n        format: 'name'\n      };\n    }\n\n    // Try to match string input using regular expressions.\n    // Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]\n    // Just return an object and let the conversion functions handle that.\n    // This way the result will be the same whether the tinycolor is initialized with string or object.\n    var match;\n    if (match = matchers.rgb.exec(color)) {\n      return {\n        r: match[1],\n        g: match[2],\n        b: match[3]\n      };\n    }\n    if (match = matchers.rgba.exec(color)) {\n      return {\n        r: match[1],\n        g: match[2],\n        b: match[3],\n        a: match[4]\n      };\n    }\n    if (match = matchers.hsl.exec(color)) {\n      return {\n        h: match[1],\n        s: match[2],\n        l: match[3]\n      };\n    }\n    if (match = matchers.hsla.exec(color)) {\n      return {\n        h: match[1],\n        s: match[2],\n        l: match[3],\n        a: match[4]\n      };\n    }\n    if (match = matchers.hsv.exec(color)) {\n      return {\n        h: match[1],\n        s: match[2],\n        v: match[3]\n      };\n    }\n    if (match = matchers.hsva.exec(color)) {\n      return {\n        h: match[1],\n        s: match[2],\n        v: match[3],\n        a: match[4]\n      };\n    }\n    if (match = matchers.hex8.exec(color)) {\n      return {\n        r: parseIntFromHex(match[1]),\n        g: parseIntFromHex(match[2]),\n        b: parseIntFromHex(match[3]),\n        a: convertHexToDecimal(match[4]),\n        format: named ? 'name' : 'hex8'\n      };\n    }\n    if (match = matchers.hex6.exec(color)) {\n      return {\n        r: parseIntFromHex(match[1]),\n        g: parseIntFromHex(match[2]),\n        b: parseIntFromHex(match[3]),\n        format: named ? 'name' : 'hex'\n      };\n    }\n    if (match = matchers.hex4.exec(color)) {\n      return {\n        r: parseIntFromHex(match[1] + '' + match[1]),\n        g: parseIntFromHex(match[2] + '' + match[2]),\n        b: parseIntFromHex(match[3] + '' + match[3]),\n        a: convertHexToDecimal(match[4] + '' + match[4]),\n        format: named ? 'name' : 'hex8'\n      };\n    }\n    if (match = matchers.hex3.exec(color)) {\n      return {\n        r: parseIntFromHex(match[1] + '' + match[1]),\n        g: parseIntFromHex(match[2] + '' + match[2]),\n        b: parseIntFromHex(match[3] + '' + match[3]),\n        format: named ? 'name' : 'hex'\n      };\n    }\n    return false;\n  }\n  function validateWCAG2Parms(parms) {\n    // return valid WCAG2 parms for isReadable.\n    // If input parms are invalid, return {\"level\":\"AA\", \"size\":\"small\"}\n    var level, size;\n    parms = parms || {\n      level: 'AA',\n      size: 'small'\n    };\n    level = (parms.level || 'AA').toUpperCase();\n    size = (parms.size || 'small').toLowerCase();\n    if (level !== 'AA' && level !== 'AAA') {\n      level = 'AA';\n    }\n    if (size !== 'small' && size !== 'large') {\n      size = 'small';\n    }\n    return {\n      level: level,\n      size: size\n    };\n  }\n  return tinycolor;\n}(Math);\n\n// Primary color number.\nvar PRIMARY_INDEX = 5;\nvar HUE_MAX = 360;\nvar SATURATION_MIN = 5;\nvar SATURATION_MAX = 100;\nvar BRIGHTNESS_MIN = 20;\nvar BRIGHTNESS_MAX = 100;\nvar COLOR_NUMBER_SET = ['50', '100', '200', '300', '400', '500', '600', '700', '800', '900'];\nfunction calculateHue(originalHue, index) {\n  originalHue = Math.round(originalHue) || 360;\n  // Dark color increase , light color reduction\n  const step = index - PRIMARY_INDEX;\n  const gap = 1;\n  const hue = originalHue + step * gap;\n\n  // The value of hue is [0,360).\n  // If it is greater than 360, the absolute value of the difference is taken.\n  return hue >= HUE_MAX ? Math.abs(hue - HUE_MAX) : hue;\n}\nfunction calculateSaturation(originalSaturation, index) {\n  originalSaturation = Math.round(originalSaturation * 100);\n  //  Dark color increase , light color reduction\n  const step = index - PRIMARY_INDEX;\n  const gap = Math.round(step > 0 && (100 - originalSaturation) / 4 || originalSaturation > SATURATION_MIN && (originalSaturation - 5) / 5 || 1);\n  const saturation = originalSaturation + step * gap;\n  return (\n    // The value range of saturation is [5,100]\n    (saturation < SATURATION_MIN && SATURATION_MIN || saturation > SATURATION_MAX && SATURATION_MAX || saturation) / 100\n  );\n}\nfunction calculateBrightnessAdjustValue(brightness, step) {\n  if (step < 0) {\n    if (brightness > 40) {\n      // BasicGap rounded up to avoid a situation of 0.\n      let basicGap = Math.ceil((brightness - 40) / 4 / 4);\n      const levels = Math.abs(step);\n      // Less than 40, the brightness is smaller.\n      // n is a multiple of the reduction base (increased by the arithmetic progression)\n      const n = (1 + levels) * levels / 2;\n      return -1 * basicGap * n;\n    }\n    return Math.round(step * ((brightness - 20) / 4));\n  }\n  return Math.round(step * ((100 - brightness) / 5));\n}\nfunction calculateBrightness(originalBrightness, index) {\n  originalBrightness = Math.round(originalBrightness * 100);\n  // Light color reduction , dark color increase.\n  const step = PRIMARY_INDEX - index;\n  // When originalBrightness is less than 20, no adjustment.\n  if (step < 0 && originalBrightness < BRIGHTNESS_MIN) {\n    return originalBrightness / 100;\n  }\n  const adjustValue = calculateBrightnessAdjustValue(originalBrightness, step);\n  const brightness = originalBrightness + adjustValue;\n  return (\n    // The range of brightness is [20,100]\n    (brightness < BRIGHTNESS_MIN && BRIGHTNESS_MIN || brightness > BRIGHTNESS_MAX && BRIGHTNESS_MAX || brightness) / 100\n  );\n}\nmodule.exports = {\n  install: function (less, pluginManager, functions) {\n    /**\n     * Calculate color\n     * @param color\n     * @param colorNumber\n     */\n    functions.add('palette', function (color, colorNumber) {\n      const {\n        rgb: [r, g, b],\n        alpha: a\n      } = color;\n      const hsv = tinycolor({\n        r,\n        g,\n        b,\n        a\n      }).toHsv();\n      const index = COLOR_NUMBER_SET.indexOf('' + colorNumber.value);\n      if (index === -1 || index === PRIMARY_INDEX) {\n        return less.color(color.rgb);\n      }\n      return less.color(tinycolor({\n        h: calculateHue(hsv.h, index),\n        s: calculateSaturation(hsv.s, index),\n        v: calculateBrightness(hsv.v, index)\n      }).toHex());\n    });\n  }\n};","map":{"version":3,"names":["tinycolor","Math","trimLeft","trimRight","mathRound","round","mathMin","min","mathMax","max","mathRandom","random","color","opts","rgb","inputToRGB","_originalInput","_r","r","_g","g","_b","b","_a","a","_roundA","_format","format","_gradientType","gradientType","_ok","ok","prototype","isDark","getBrightness","isLight","isValid","getOriginalInput","getFormat","getAlpha","toRgb","getLuminance","RsRGB","GsRGB","BsRGB","R","G","B","pow","setAlpha","value","boundAlpha","toHsv","hsv","rgbToHsv","h","s","v","toHsvString","toHsl","hsl","rgbToHsl","l","toHslString","toHex","allow3Char","rgbToHex","toHexString","toHex8","allow4Char","rgbaToHex","toHex8String","toRgbString","toPercentageRgb","bound01","toPercentageRgbString","toName","hexNames","toFilter","secondColor","hex8String","rgbaToArgbHex","secondHex8String","toString","formatSet","formattedString","hasAlpha","needsAlphaFormat","clone","_applyModification","fn","args","apply","concat","slice","call","lighten","arguments","brighten","darken","desaturate","saturate","greyscale","spin","_applyCombination","analogous","complement","monochromatic","splitcomplement","triad","tetrad","fromRatio","newColor","i","hasOwnProperty","convertToPercentage","stringInputToObject","isValidCSSUnit","rgbToRgb","String","substr","hsvToRgb","hslToRgb","d","hue2rgb","p","q","t","floor","f","mod","hex","pad2","charAt","join","convertDecimalToHex","equals","color1","color2","amount","clamp01","hue","results","slices","part","ret","push","modification","mix","rgb1","rgb2","rgba","readability","c1","c2","isReadable","wcag2","wcag2Parms","out","validateWCAG2Parms","level","size","mostReadable","baseColor","colorList","bestColor","bestScore","includeFallbackColors","length","names","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","burntsienna","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","flip","o","flipped","parseFloat","isNaN","n","isOnePointZero","processPercent","isPercentage","parseInt","abs","val","parseIntFromHex","indexOf","c","convertHexToDecimal","matchers","CSS_INTEGER","CSS_NUMBER","CSS_UNIT","PERMISSIVE_MATCH3","PERMISSIVE_MATCH4","RegExp","hsla","hsva","hex3","hex6","hex4","hex8","exec","replace","toLowerCase","named","match","parms","toUpperCase","PRIMARY_INDEX","HUE_MAX","SATURATION_MIN","SATURATION_MAX","BRIGHTNESS_MIN","BRIGHTNESS_MAX","COLOR_NUMBER_SET","calculateHue","originalHue","index","step","gap","calculateSaturation","originalSaturation","saturation","calculateBrightnessAdjustValue","brightness","basicGap","ceil","levels","calculateBrightness","originalBrightness","adjustValue","module","exports","install","less","pluginManager","functions","add","colorNumber","alpha"],"sources":["C:/Users/OB1CHAM/Desktop/OB1LAB/React/calibri/client/node_modules/rsuite/styles/plugins/palette.js"],"sourcesContent":["// TinyColor v1.4.2\n// https://github.com/bgrins/TinyColor\n// Brian Grinstead, MIT License\n\nvar tinycolor = (function (Math) {\n  var trimLeft = /^\\s+/,\n    trimRight = /\\s+$/,\n    mathRound = Math.round,\n    mathMin = Math.min,\n    mathMax = Math.max,\n    mathRandom = Math.random;\n\n  function tinycolor(color, opts) {\n    color = color ? color : '';\n    opts = opts || {};\n\n    // If input is already a tinycolor, return itself\n    if (color instanceof tinycolor) {\n      return color;\n    }\n    // If we are called as a function, call using new instead\n    if (!(this instanceof tinycolor)) {\n      return new tinycolor(color, opts);\n    }\n\n    var rgb = inputToRGB(color);\n    (this._originalInput = color),\n      (this._r = rgb.r),\n      (this._g = rgb.g),\n      (this._b = rgb.b),\n      (this._a = rgb.a),\n      (this._roundA = mathRound(100 * this._a) / 100),\n      (this._format = opts.format || rgb.format);\n    this._gradientType = opts.gradientType;\n\n    // Don't let the range of [0,255] come back in [0,1].\n    // Potentially lose a little bit of precision here, but will fix issues where\n    // .5 gets interpreted as half of the total, instead of half of 1\n    // If it was supposed to be 128, this was already taken care of by `inputToRgb`\n    if (this._r < 1) {\n      this._r = mathRound(this._r);\n    }\n    if (this._g < 1) {\n      this._g = mathRound(this._g);\n    }\n    if (this._b < 1) {\n      this._b = mathRound(this._b);\n    }\n\n    this._ok = rgb.ok;\n  }\n\n  tinycolor.prototype = {\n    isDark: function () {\n      return this.getBrightness() < 128;\n    },\n    isLight: function () {\n      return !this.isDark();\n    },\n    isValid: function () {\n      return this._ok;\n    },\n    getOriginalInput: function () {\n      return this._originalInput;\n    },\n    getFormat: function () {\n      return this._format;\n    },\n    getAlpha: function () {\n      return this._a;\n    },\n    getBrightness: function () {\n      //http://www.w3.org/TR/AERT#color-contrast\n      var rgb = this.toRgb();\n      return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;\n    },\n    getLuminance: function () {\n      //http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n      var rgb = this.toRgb();\n      var RsRGB, GsRGB, BsRGB, R, G, B;\n      RsRGB = rgb.r / 255;\n      GsRGB = rgb.g / 255;\n      BsRGB = rgb.b / 255;\n\n      if (RsRGB <= 0.03928) {\n        R = RsRGB / 12.92;\n      } else {\n        R = Math.pow((RsRGB + 0.055) / 1.055, 2.4);\n      }\n      if (GsRGB <= 0.03928) {\n        G = GsRGB / 12.92;\n      } else {\n        G = Math.pow((GsRGB + 0.055) / 1.055, 2.4);\n      }\n      if (BsRGB <= 0.03928) {\n        B = BsRGB / 12.92;\n      } else {\n        B = Math.pow((BsRGB + 0.055) / 1.055, 2.4);\n      }\n      return 0.2126 * R + 0.7152 * G + 0.0722 * B;\n    },\n    setAlpha: function (value) {\n      this._a = boundAlpha(value);\n      this._roundA = mathRound(100 * this._a) / 100;\n      return this;\n    },\n    toHsv: function () {\n      var hsv = rgbToHsv(this._r, this._g, this._b);\n      return { h: hsv.h * 360, s: hsv.s, v: hsv.v, a: this._a };\n    },\n    toHsvString: function () {\n      var hsv = rgbToHsv(this._r, this._g, this._b);\n      var h = mathRound(hsv.h * 360),\n        s = mathRound(hsv.s * 100),\n        v = mathRound(hsv.v * 100);\n      return this._a == 1\n        ? 'hsv(' + h + ', ' + s + '%, ' + v + '%)'\n        : 'hsva(' + h + ', ' + s + '%, ' + v + '%, ' + this._roundA + ')';\n    },\n    toHsl: function () {\n      var hsl = rgbToHsl(this._r, this._g, this._b);\n      return { h: hsl.h * 360, s: hsl.s, l: hsl.l, a: this._a };\n    },\n    toHslString: function () {\n      var hsl = rgbToHsl(this._r, this._g, this._b);\n      var h = mathRound(hsl.h * 360),\n        s = mathRound(hsl.s * 100),\n        l = mathRound(hsl.l * 100);\n      return this._a == 1\n        ? 'hsl(' + h + ', ' + s + '%, ' + l + '%)'\n        : 'hsla(' + h + ', ' + s + '%, ' + l + '%, ' + this._roundA + ')';\n    },\n    toHex: function (allow3Char) {\n      return rgbToHex(this._r, this._g, this._b, allow3Char);\n    },\n    toHexString: function (allow3Char) {\n      return '#' + this.toHex(allow3Char);\n    },\n    toHex8: function (allow4Char) {\n      return rgbaToHex(this._r, this._g, this._b, this._a, allow4Char);\n    },\n    toHex8String: function (allow4Char) {\n      return '#' + this.toHex8(allow4Char);\n    },\n    toRgb: function () {\n      return { r: mathRound(this._r), g: mathRound(this._g), b: mathRound(this._b), a: this._a };\n    },\n    toRgbString: function () {\n      return this._a == 1\n        ? 'rgb(' + mathRound(this._r) + ', ' + mathRound(this._g) + ', ' + mathRound(this._b) + ')'\n        : 'rgba(' +\n            mathRound(this._r) +\n            ', ' +\n            mathRound(this._g) +\n            ', ' +\n            mathRound(this._b) +\n            ', ' +\n            this._roundA +\n            ')';\n    },\n    toPercentageRgb: function () {\n      return {\n        r: mathRound(bound01(this._r, 255) * 100) + '%',\n        g: mathRound(bound01(this._g, 255) * 100) + '%',\n        b: mathRound(bound01(this._b, 255) * 100) + '%',\n        a: this._a\n      };\n    },\n    toPercentageRgbString: function () {\n      return this._a == 1\n        ? 'rgb(' +\n            mathRound(bound01(this._r, 255) * 100) +\n            '%, ' +\n            mathRound(bound01(this._g, 255) * 100) +\n            '%, ' +\n            mathRound(bound01(this._b, 255) * 100) +\n            '%)'\n        : 'rgba(' +\n            mathRound(bound01(this._r, 255) * 100) +\n            '%, ' +\n            mathRound(bound01(this._g, 255) * 100) +\n            '%, ' +\n            mathRound(bound01(this._b, 255) * 100) +\n            '%, ' +\n            this._roundA +\n            ')';\n    },\n    toName: function () {\n      if (this._a === 0) {\n        return 'transparent';\n      }\n\n      if (this._a < 1) {\n        return false;\n      }\n\n      return hexNames[rgbToHex(this._r, this._g, this._b, true)] || false;\n    },\n    toFilter: function (secondColor) {\n      var hex8String = '#' + rgbaToArgbHex(this._r, this._g, this._b, this._a);\n      var secondHex8String = hex8String;\n      var gradientType = this._gradientType ? 'GradientType = 1, ' : '';\n\n      if (secondColor) {\n        var s = tinycolor(secondColor);\n        secondHex8String = '#' + rgbaToArgbHex(s._r, s._g, s._b, s._a);\n      }\n\n      return (\n        'progid:DXImageTransform.Microsoft.gradient(' +\n        gradientType +\n        'startColorstr=' +\n        hex8String +\n        ',endColorstr=' +\n        secondHex8String +\n        ')'\n      );\n    },\n    toString: function (format) {\n      var formatSet = !!format;\n      format = format || this._format;\n\n      var formattedString = false;\n      var hasAlpha = this._a < 1 && this._a >= 0;\n      var needsAlphaFormat =\n        !formatSet &&\n        hasAlpha &&\n        (format === 'hex' ||\n          format === 'hex6' ||\n          format === 'hex3' ||\n          format === 'hex4' ||\n          format === 'hex8' ||\n          format === 'name');\n\n      if (needsAlphaFormat) {\n        // Special case for \"transparent\", all other non-alpha formats\n        // will return rgba when there is transparency.\n        if (format === 'name' && this._a === 0) {\n          return this.toName();\n        }\n        return this.toRgbString();\n      }\n      if (format === 'rgb') {\n        formattedString = this.toRgbString();\n      }\n      if (format === 'prgb') {\n        formattedString = this.toPercentageRgbString();\n      }\n      if (format === 'hex' || format === 'hex6') {\n        formattedString = this.toHexString();\n      }\n      if (format === 'hex3') {\n        formattedString = this.toHexString(true);\n      }\n      if (format === 'hex4') {\n        formattedString = this.toHex8String(true);\n      }\n      if (format === 'hex8') {\n        formattedString = this.toHex8String();\n      }\n      if (format === 'name') {\n        formattedString = this.toName();\n      }\n      if (format === 'hsl') {\n        formattedString = this.toHslString();\n      }\n      if (format === 'hsv') {\n        formattedString = this.toHsvString();\n      }\n\n      return formattedString || this.toHexString();\n    },\n    clone: function () {\n      return tinycolor(this.toString());\n    },\n\n    _applyModification: function (fn, args) {\n      var color = fn.apply(null, [this].concat([].slice.call(args)));\n      this._r = color._r;\n      this._g = color._g;\n      this._b = color._b;\n      this.setAlpha(color._a);\n      return this;\n    },\n    lighten: function () {\n      return this._applyModification(lighten, arguments);\n    },\n    brighten: function () {\n      return this._applyModification(brighten, arguments);\n    },\n    darken: function () {\n      return this._applyModification(darken, arguments);\n    },\n    desaturate: function () {\n      return this._applyModification(desaturate, arguments);\n    },\n    saturate: function () {\n      return this._applyModification(saturate, arguments);\n    },\n    greyscale: function () {\n      return this._applyModification(greyscale, arguments);\n    },\n    spin: function () {\n      return this._applyModification(spin, arguments);\n    },\n\n    _applyCombination: function (fn, args) {\n      return fn.apply(null, [this].concat([].slice.call(args)));\n    },\n    analogous: function () {\n      return this._applyCombination(analogous, arguments);\n    },\n    complement: function () {\n      return this._applyCombination(complement, arguments);\n    },\n    monochromatic: function () {\n      return this._applyCombination(monochromatic, arguments);\n    },\n    splitcomplement: function () {\n      return this._applyCombination(splitcomplement, arguments);\n    },\n    triad: function () {\n      return this._applyCombination(triad, arguments);\n    },\n    tetrad: function () {\n      return this._applyCombination(tetrad, arguments);\n    }\n  };\n\n  // If input is an object, force 1 into \"1.0\" to handle ratios properly\n  // String input requires \"1.0\" as input, so 1 will be treated as 1\n  tinycolor.fromRatio = function (color, opts) {\n    if (typeof color == 'object') {\n      var newColor = {};\n      for (var i in color) {\n        if (color.hasOwnProperty(i)) {\n          if (i === 'a') {\n            newColor[i] = color[i];\n          } else {\n            newColor[i] = convertToPercentage(color[i]);\n          }\n        }\n      }\n      color = newColor;\n    }\n\n    return tinycolor(color, opts);\n  };\n\n  // Given a string or object, convert that input to RGB\n  // Possible string inputs:\n  //\n  //     \"red\"\n  //     \"#f00\" or \"f00\"\n  //     \"#ff0000\" or \"ff0000\"\n  //     \"#ff000000\" or \"ff000000\"\n  //     \"rgb 255 0 0\" or \"rgb (255, 0, 0)\"\n  //     \"rgb 1.0 0 0\" or \"rgb (1, 0, 0)\"\n  //     \"rgba (255, 0, 0, 1)\" or \"rgba 255, 0, 0, 1\"\n  //     \"rgba (1.0, 0, 0, 1)\" or \"rgba 1.0, 0, 0, 1\"\n  //     \"hsl(0, 100%, 50%)\" or \"hsl 0 100% 50%\"\n  //     \"hsla(0, 100%, 50%, 1)\" or \"hsla 0 100% 50%, 1\"\n  //     \"hsv(0, 100%, 100%)\" or \"hsv 0 100% 100%\"\n  //\n  function inputToRGB(color) {\n    var rgb = { r: 0, g: 0, b: 0 };\n    var a = 1;\n    var s = null;\n    var v = null;\n    var l = null;\n    var ok = false;\n    var format = false;\n\n    if (typeof color == 'string') {\n      color = stringInputToObject(color);\n    }\n\n    if (typeof color == 'object') {\n      if (isValidCSSUnit(color.r) && isValidCSSUnit(color.g) && isValidCSSUnit(color.b)) {\n        rgb = rgbToRgb(color.r, color.g, color.b);\n        ok = true;\n        format = String(color.r).substr(-1) === '%' ? 'prgb' : 'rgb';\n      } else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.v)) {\n        s = convertToPercentage(color.s);\n        v = convertToPercentage(color.v);\n        rgb = hsvToRgb(color.h, s, v);\n        ok = true;\n        format = 'hsv';\n      } else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.l)) {\n        s = convertToPercentage(color.s);\n        l = convertToPercentage(color.l);\n        rgb = hslToRgb(color.h, s, l);\n        ok = true;\n        format = 'hsl';\n      }\n\n      if (color.hasOwnProperty('a')) {\n        a = color.a;\n      }\n    }\n\n    a = boundAlpha(a);\n\n    return {\n      ok: ok,\n      format: color.format || format,\n      r: mathMin(255, mathMax(rgb.r, 0)),\n      g: mathMin(255, mathMax(rgb.g, 0)),\n      b: mathMin(255, mathMax(rgb.b, 0)),\n      a: a\n    };\n  }\n\n  // Conversion Functions\n  // --------------------\n\n  // `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:\n  // <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>\n\n  // `rgbToRgb`\n  // Handle bounds / percentage checking to conform to CSS color spec\n  // <http://www.w3.org/TR/css3-color/>\n  // *Assumes:* r, g, b in [0, 255] or [0, 1]\n  // *Returns:* { r, g, b } in [0, 255]\n  function rgbToRgb(r, g, b) {\n    return {\n      r: bound01(r, 255) * 255,\n      g: bound01(g, 255) * 255,\n      b: bound01(b, 255) * 255\n    };\n  }\n\n  // `rgbToHsl`\n  // Converts an RGB color value to HSL.\n  // *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]\n  // *Returns:* { h, s, l } in [0,1]\n  function rgbToHsl(r, g, b) {\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n\n    var max = mathMax(r, g, b),\n      min = mathMin(r, g, b);\n    var h,\n      s,\n      l = (max + min) / 2;\n\n    if (max == min) {\n      h = s = 0; // achromatic\n    } else {\n      var d = max - min;\n      s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n      switch (max) {\n        case r:\n          h = (g - b) / d + (g < b ? 6 : 0);\n          break;\n        case g:\n          h = (b - r) / d + 2;\n          break;\n        case b:\n          h = (r - g) / d + 4;\n          break;\n      }\n\n      h /= 6;\n    }\n\n    return { h: h, s: s, l: l };\n  }\n\n  // `hslToRgb`\n  // Converts an HSL color value to RGB.\n  // *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]\n  // *Returns:* { r, g, b } in the set [0, 255]\n  function hslToRgb(h, s, l) {\n    var r, g, b;\n\n    h = bound01(h, 360);\n    s = bound01(s, 100);\n    l = bound01(l, 100);\n\n    function hue2rgb(p, q, t) {\n      if (t < 0) t += 1;\n      if (t > 1) t -= 1;\n      if (t < 1 / 6) return p + (q - p) * 6 * t;\n      if (t < 1 / 2) return q;\n      if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n      return p;\n    }\n\n    if (s === 0) {\n      r = g = b = l; // achromatic\n    } else {\n      var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n      var p = 2 * l - q;\n      r = hue2rgb(p, q, h + 1 / 3);\n      g = hue2rgb(p, q, h);\n      b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    return { r: r * 255, g: g * 255, b: b * 255 };\n  }\n\n  // `rgbToHsv`\n  // Converts an RGB color value to HSV\n  // *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]\n  // *Returns:* { h, s, v } in [0,1]\n  function rgbToHsv(r, g, b) {\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n\n    var max = mathMax(r, g, b),\n      min = mathMin(r, g, b);\n    var h,\n      s,\n      v = max;\n\n    var d = max - min;\n    s = max === 0 ? 0 : d / max;\n\n    if (max == min) {\n      h = 0; // achromatic\n    } else {\n      switch (max) {\n        case r:\n          h = (g - b) / d + (g < b ? 6 : 0);\n          break;\n        case g:\n          h = (b - r) / d + 2;\n          break;\n        case b:\n          h = (r - g) / d + 4;\n          break;\n      }\n      h /= 6;\n    }\n    return { h: h, s: s, v: v };\n  }\n\n  // `hsvToRgb`\n  // Converts an HSV color value to RGB.\n  // *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]\n  // *Returns:* { r, g, b } in the set [0, 255]\n  function hsvToRgb(h, s, v) {\n    h = bound01(h, 360) * 6;\n    s = bound01(s, 100);\n    v = bound01(v, 100);\n\n    var i = Math.floor(h),\n      f = h - i,\n      p = v * (1 - s),\n      q = v * (1 - f * s),\n      t = v * (1 - (1 - f) * s),\n      mod = i % 6,\n      r = [v, q, p, p, t, v][mod],\n      g = [t, v, v, q, p, p][mod],\n      b = [p, p, t, v, v, q][mod];\n\n    return { r: r * 255, g: g * 255, b: b * 255 };\n  }\n\n  // `rgbToHex`\n  // Converts an RGB color to hex\n  // Assumes r, g, and b are contained in the set [0, 255]\n  // Returns a 3 or 6 character hex\n  function rgbToHex(r, g, b, allow3Char) {\n    var hex = [\n      pad2(mathRound(r).toString(16)),\n      pad2(mathRound(g).toString(16)),\n      pad2(mathRound(b).toString(16))\n    ];\n\n    // Return a 3 character hex if possible\n    if (\n      allow3Char &&\n      hex[0].charAt(0) == hex[0].charAt(1) &&\n      hex[1].charAt(0) == hex[1].charAt(1) &&\n      hex[2].charAt(0) == hex[2].charAt(1)\n    ) {\n      return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);\n    }\n\n    return hex.join('');\n  }\n\n  // `rgbaToHex`\n  // Converts an RGBA color plus alpha transparency to hex\n  // Assumes r, g, b are contained in the set [0, 255] and\n  // a in [0, 1]. Returns a 4 or 8 character rgba hex\n  function rgbaToHex(r, g, b, a, allow4Char) {\n    var hex = [\n      pad2(mathRound(r).toString(16)),\n      pad2(mathRound(g).toString(16)),\n      pad2(mathRound(b).toString(16)),\n      pad2(convertDecimalToHex(a))\n    ];\n\n    // Return a 4 character hex if possible\n    if (\n      allow4Char &&\n      hex[0].charAt(0) == hex[0].charAt(1) &&\n      hex[1].charAt(0) == hex[1].charAt(1) &&\n      hex[2].charAt(0) == hex[2].charAt(1) &&\n      hex[3].charAt(0) == hex[3].charAt(1)\n    ) {\n      return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0);\n    }\n\n    return hex.join('');\n  }\n\n  // `rgbaToArgbHex`\n  // Converts an RGBA color to an ARGB Hex8 string\n  // Rarely used, but required for \"toFilter()\"\n  function rgbaToArgbHex(r, g, b, a) {\n    var hex = [\n      pad2(convertDecimalToHex(a)),\n      pad2(mathRound(r).toString(16)),\n      pad2(mathRound(g).toString(16)),\n      pad2(mathRound(b).toString(16))\n    ];\n\n    return hex.join('');\n  }\n\n  // `equals`\n  // Can be called with any tinycolor input\n  tinycolor.equals = function (color1, color2) {\n    if (!color1 || !color2) {\n      return false;\n    }\n    return tinycolor(color1).toRgbString() == tinycolor(color2).toRgbString();\n  };\n\n  tinycolor.random = function () {\n    return tinycolor.fromRatio({\n      r: mathRandom(),\n      g: mathRandom(),\n      b: mathRandom()\n    });\n  };\n\n  // Modification Functions\n  // ----------------------\n  // Thanks to less.js for some of the basics here\n  // <https://github.com/cloudhead/less.js/blob/master/lib/less/functions.js>\n\n  function desaturate(color, amount) {\n    amount = amount === 0 ? 0 : amount || 10;\n    var hsl = tinycolor(color).toHsl();\n    hsl.s -= amount / 100;\n    hsl.s = clamp01(hsl.s);\n    return tinycolor(hsl);\n  }\n\n  function saturate(color, amount) {\n    amount = amount === 0 ? 0 : amount || 10;\n    var hsl = tinycolor(color).toHsl();\n    hsl.s += amount / 100;\n    hsl.s = clamp01(hsl.s);\n    return tinycolor(hsl);\n  }\n\n  function greyscale(color) {\n    return tinycolor(color).desaturate(100);\n  }\n\n  function lighten(color, amount) {\n    amount = amount === 0 ? 0 : amount || 10;\n    var hsl = tinycolor(color).toHsl();\n    hsl.l += amount / 100;\n    hsl.l = clamp01(hsl.l);\n    return tinycolor(hsl);\n  }\n\n  function brighten(color, amount) {\n    amount = amount === 0 ? 0 : amount || 10;\n    var rgb = tinycolor(color).toRgb();\n    rgb.r = mathMax(0, mathMin(255, rgb.r - mathRound(255 * -(amount / 100))));\n    rgb.g = mathMax(0, mathMin(255, rgb.g - mathRound(255 * -(amount / 100))));\n    rgb.b = mathMax(0, mathMin(255, rgb.b - mathRound(255 * -(amount / 100))));\n    return tinycolor(rgb);\n  }\n\n  function darken(color, amount) {\n    amount = amount === 0 ? 0 : amount || 10;\n    var hsl = tinycolor(color).toHsl();\n    hsl.l -= amount / 100;\n    hsl.l = clamp01(hsl.l);\n    return tinycolor(hsl);\n  }\n\n  // Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.\n  // Values outside of this range will be wrapped into this range.\n  function spin(color, amount) {\n    var hsl = tinycolor(color).toHsl();\n    var hue = (hsl.h + amount) % 360;\n    hsl.h = hue < 0 ? 360 + hue : hue;\n    return tinycolor(hsl);\n  }\n\n  // Combination Functions\n  // ---------------------\n  // Thanks to jQuery xColor for some of the ideas behind these\n  // <https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js>\n\n  function complement(color) {\n    var hsl = tinycolor(color).toHsl();\n    hsl.h = (hsl.h + 180) % 360;\n    return tinycolor(hsl);\n  }\n\n  function triad(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n      tinycolor(color),\n      tinycolor({ h: (h + 120) % 360, s: hsl.s, l: hsl.l }),\n      tinycolor({ h: (h + 240) % 360, s: hsl.s, l: hsl.l })\n    ];\n  }\n\n  function tetrad(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n      tinycolor(color),\n      tinycolor({ h: (h + 90) % 360, s: hsl.s, l: hsl.l }),\n      tinycolor({ h: (h + 180) % 360, s: hsl.s, l: hsl.l }),\n      tinycolor({ h: (h + 270) % 360, s: hsl.s, l: hsl.l })\n    ];\n  }\n\n  function splitcomplement(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n      tinycolor(color),\n      tinycolor({ h: (h + 72) % 360, s: hsl.s, l: hsl.l }),\n      tinycolor({ h: (h + 216) % 360, s: hsl.s, l: hsl.l })\n    ];\n  }\n\n  function analogous(color, results, slices) {\n    results = results || 6;\n    slices = slices || 30;\n\n    var hsl = tinycolor(color).toHsl();\n    var part = 360 / slices;\n    var ret = [tinycolor(color)];\n\n    for (hsl.h = (hsl.h - ((part * results) >> 1) + 720) % 360; --results; ) {\n      hsl.h = (hsl.h + part) % 360;\n      ret.push(tinycolor(hsl));\n    }\n    return ret;\n  }\n\n  function monochromatic(color, results) {\n    results = results || 6;\n    var hsv = tinycolor(color).toHsv();\n    var h = hsv.h,\n      s = hsv.s,\n      v = hsv.v;\n    var ret = [];\n    var modification = 1 / results;\n\n    while (results--) {\n      ret.push(tinycolor({ h: h, s: s, v: v }));\n      v = (v + modification) % 1;\n    }\n\n    return ret;\n  }\n\n  // Utility Functions\n  // ---------------------\n\n  tinycolor.mix = function (color1, color2, amount) {\n    amount = amount === 0 ? 0 : amount || 50;\n\n    var rgb1 = tinycolor(color1).toRgb();\n    var rgb2 = tinycolor(color2).toRgb();\n\n    var p = amount / 100;\n\n    var rgba = {\n      r: (rgb2.r - rgb1.r) * p + rgb1.r,\n      g: (rgb2.g - rgb1.g) * p + rgb1.g,\n      b: (rgb2.b - rgb1.b) * p + rgb1.b,\n      a: (rgb2.a - rgb1.a) * p + rgb1.a\n    };\n\n    return tinycolor(rgba);\n  };\n\n  // Readability Functions\n  // ---------------------\n  // <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef (WCAG Version 2)\n\n  // `contrast`\n  // Analyze the 2 colors and returns the color contrast defined by (WCAG Version 2)\n  tinycolor.readability = function (color1, color2) {\n    var c1 = tinycolor(color1);\n    var c2 = tinycolor(color2);\n    return (\n      (Math.max(c1.getLuminance(), c2.getLuminance()) + 0.05) /\n      (Math.min(c1.getLuminance(), c2.getLuminance()) + 0.05)\n    );\n  };\n\n  // `isReadable`\n  // Ensure that foreground and background color combinations meet WCAG2 guidelines.\n  // The third argument is an optional Object.\n  //      the 'level' property states 'AA' or 'AAA' - if missing or invalid, it defaults to 'AA';\n  //      the 'size' property states 'large' or 'small' - if missing or invalid, it defaults to 'small'.\n  // If the entire object is absent, isReadable defaults to {level:\"AA\",size:\"small\"}.\n\n  // *Example*\n  //    tinycolor.isReadable(\"#000\", \"#111\") => false\n  //    tinycolor.isReadable(\"#000\", \"#111\",{level:\"AA\",size:\"large\"}) => false\n  tinycolor.isReadable = function (color1, color2, wcag2) {\n    var readability = tinycolor.readability(color1, color2);\n    var wcag2Parms, out;\n\n    out = false;\n\n    wcag2Parms = validateWCAG2Parms(wcag2);\n    switch (wcag2Parms.level + wcag2Parms.size) {\n      case 'AAsmall':\n      case 'AAAlarge':\n        out = readability >= 4.5;\n        break;\n      case 'AAlarge':\n        out = readability >= 3;\n        break;\n      case 'AAAsmall':\n        out = readability >= 7;\n        break;\n    }\n    return out;\n  };\n\n  // `mostReadable`\n  // Given a base color and a list of possible foreground or background\n  // colors for that base, returns the most readable color.\n  // Optionally returns Black or White if the most readable color is unreadable.\n  // *Example*\n  //    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:false}).toHexString(); // \"#112255\"\n  //    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:true}).toHexString();  // \"#ffffff\"\n  //    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"large\"}).toHexString(); // \"#faf3f3\"\n  //    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"small\"}).toHexString(); // \"#ffffff\"\n  tinycolor.mostReadable = function (baseColor, colorList, args) {\n    var bestColor = null;\n    var bestScore = 0;\n    var readability;\n    var includeFallbackColors, level, size;\n    args = args || {};\n    includeFallbackColors = args.includeFallbackColors;\n    level = args.level;\n    size = args.size;\n\n    for (var i = 0; i < colorList.length; i++) {\n      readability = tinycolor.readability(baseColor, colorList[i]);\n      if (readability > bestScore) {\n        bestScore = readability;\n        bestColor = tinycolor(colorList[i]);\n      }\n    }\n\n    if (\n      tinycolor.isReadable(baseColor, bestColor, { level: level, size: size }) ||\n      !includeFallbackColors\n    ) {\n      return bestColor;\n    } else {\n      args.includeFallbackColors = false;\n      return tinycolor.mostReadable(baseColor, ['#fff', '#000'], args);\n    }\n  };\n\n  // Big List of Colors\n  // ------------------\n  // <http://www.w3.org/TR/css3-color/#svg-color>\n  var names = (tinycolor.names = {\n    aliceblue: 'f0f8ff',\n    antiquewhite: 'faebd7',\n    aqua: '0ff',\n    aquamarine: '7fffd4',\n    azure: 'f0ffff',\n    beige: 'f5f5dc',\n    bisque: 'ffe4c4',\n    black: '000',\n    blanchedalmond: 'ffebcd',\n    blue: '00f',\n    blueviolet: '8a2be2',\n    brown: 'a52a2a',\n    burlywood: 'deb887',\n    burntsienna: 'ea7e5d',\n    cadetblue: '5f9ea0',\n    chartreuse: '7fff00',\n    chocolate: 'd2691e',\n    coral: 'ff7f50',\n    cornflowerblue: '6495ed',\n    cornsilk: 'fff8dc',\n    crimson: 'dc143c',\n    cyan: '0ff',\n    darkblue: '00008b',\n    darkcyan: '008b8b',\n    darkgoldenrod: 'b8860b',\n    darkgray: 'a9a9a9',\n    darkgreen: '006400',\n    darkgrey: 'a9a9a9',\n    darkkhaki: 'bdb76b',\n    darkmagenta: '8b008b',\n    darkolivegreen: '556b2f',\n    darkorange: 'ff8c00',\n    darkorchid: '9932cc',\n    darkred: '8b0000',\n    darksalmon: 'e9967a',\n    darkseagreen: '8fbc8f',\n    darkslateblue: '483d8b',\n    darkslategray: '2f4f4f',\n    darkslategrey: '2f4f4f',\n    darkturquoise: '00ced1',\n    darkviolet: '9400d3',\n    deeppink: 'ff1493',\n    deepskyblue: '00bfff',\n    dimgray: '696969',\n    dimgrey: '696969',\n    dodgerblue: '1e90ff',\n    firebrick: 'b22222',\n    floralwhite: 'fffaf0',\n    forestgreen: '228b22',\n    fuchsia: 'f0f',\n    gainsboro: 'dcdcdc',\n    ghostwhite: 'f8f8ff',\n    gold: 'ffd700',\n    goldenrod: 'daa520',\n    gray: '808080',\n    green: '008000',\n    greenyellow: 'adff2f',\n    grey: '808080',\n    honeydew: 'f0fff0',\n    hotpink: 'ff69b4',\n    indianred: 'cd5c5c',\n    indigo: '4b0082',\n    ivory: 'fffff0',\n    khaki: 'f0e68c',\n    lavender: 'e6e6fa',\n    lavenderblush: 'fff0f5',\n    lawngreen: '7cfc00',\n    lemonchiffon: 'fffacd',\n    lightblue: 'add8e6',\n    lightcoral: 'f08080',\n    lightcyan: 'e0ffff',\n    lightgoldenrodyellow: 'fafad2',\n    lightgray: 'd3d3d3',\n    lightgreen: '90ee90',\n    lightgrey: 'd3d3d3',\n    lightpink: 'ffb6c1',\n    lightsalmon: 'ffa07a',\n    lightseagreen: '20b2aa',\n    lightskyblue: '87cefa',\n    lightslategray: '789',\n    lightslategrey: '789',\n    lightsteelblue: 'b0c4de',\n    lightyellow: 'ffffe0',\n    lime: '0f0',\n    limegreen: '32cd32',\n    linen: 'faf0e6',\n    magenta: 'f0f',\n    maroon: '800000',\n    mediumaquamarine: '66cdaa',\n    mediumblue: '0000cd',\n    mediumorchid: 'ba55d3',\n    mediumpurple: '9370db',\n    mediumseagreen: '3cb371',\n    mediumslateblue: '7b68ee',\n    mediumspringgreen: '00fa9a',\n    mediumturquoise: '48d1cc',\n    mediumvioletred: 'c71585',\n    midnightblue: '191970',\n    mintcream: 'f5fffa',\n    mistyrose: 'ffe4e1',\n    moccasin: 'ffe4b5',\n    navajowhite: 'ffdead',\n    navy: '000080',\n    oldlace: 'fdf5e6',\n    olive: '808000',\n    olivedrab: '6b8e23',\n    orange: 'ffa500',\n    orangered: 'ff4500',\n    orchid: 'da70d6',\n    palegoldenrod: 'eee8aa',\n    palegreen: '98fb98',\n    paleturquoise: 'afeeee',\n    palevioletred: 'db7093',\n    papayawhip: 'ffefd5',\n    peachpuff: 'ffdab9',\n    peru: 'cd853f',\n    pink: 'ffc0cb',\n    plum: 'dda0dd',\n    powderblue: 'b0e0e6',\n    purple: '800080',\n    rebeccapurple: '663399',\n    red: 'f00',\n    rosybrown: 'bc8f8f',\n    royalblue: '4169e1',\n    saddlebrown: '8b4513',\n    salmon: 'fa8072',\n    sandybrown: 'f4a460',\n    seagreen: '2e8b57',\n    seashell: 'fff5ee',\n    sienna: 'a0522d',\n    silver: 'c0c0c0',\n    skyblue: '87ceeb',\n    slateblue: '6a5acd',\n    slategray: '708090',\n    slategrey: '708090',\n    snow: 'fffafa',\n    springgreen: '00ff7f',\n    steelblue: '4682b4',\n    tan: 'd2b48c',\n    teal: '008080',\n    thistle: 'd8bfd8',\n    tomato: 'ff6347',\n    turquoise: '40e0d0',\n    violet: 'ee82ee',\n    wheat: 'f5deb3',\n    white: 'fff',\n    whitesmoke: 'f5f5f5',\n    yellow: 'ff0',\n    yellowgreen: '9acd32'\n  });\n\n  // Make it easy to access colors via `hexNames[hex]`\n  var hexNames = (tinycolor.hexNames = flip(names));\n\n  // Utilities\n  // ---------\n\n  // `{ 'name1': 'val1' }` becomes `{ 'val1': 'name1' }`\n  function flip(o) {\n    var flipped = {};\n    for (var i in o) {\n      if (o.hasOwnProperty(i)) {\n        flipped[o[i]] = i;\n      }\n    }\n    return flipped;\n  }\n\n  // Return a valid alpha value [0,1] with all invalid values being set to 1\n  function boundAlpha(a) {\n    a = parseFloat(a);\n\n    if (isNaN(a) || a < 0 || a > 1) {\n      a = 1;\n    }\n\n    return a;\n  }\n\n  // Take input from [0, n] and return it as [0, 1]\n  function bound01(n, max) {\n    if (isOnePointZero(n)) {\n      n = '100%';\n    }\n\n    var processPercent = isPercentage(n);\n    n = mathMin(max, mathMax(0, parseFloat(n)));\n\n    // Automatically convert percentage into number\n    if (processPercent) {\n      n = parseInt(n * max, 10) / 100;\n    }\n\n    // Handle floating point rounding errors\n    if (Math.abs(n - max) < 0.000001) {\n      return 1;\n    }\n\n    // Convert into [0, 1] range if it isn't already\n    return (n % max) / parseFloat(max);\n  }\n\n  // Force a number between 0 and 1\n  function clamp01(val) {\n    return mathMin(1, mathMax(0, val));\n  }\n\n  // Parse a base-16 hex value into a base-10 integer\n  function parseIntFromHex(val) {\n    return parseInt(val, 16);\n  }\n\n  // Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1\n  // <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>\n  function isOnePointZero(n) {\n    return typeof n == 'string' && n.indexOf('.') != -1 && parseFloat(n) === 1;\n  }\n\n  // Check to see if string passed in is a percentage\n  function isPercentage(n) {\n    return typeof n === 'string' && n.indexOf('%') != -1;\n  }\n\n  // Force a hex value to have 2 characters\n  function pad2(c) {\n    return c.length == 1 ? '0' + c : '' + c;\n  }\n\n  // Replace a decimal with it's percentage value\n  function convertToPercentage(n) {\n    if (n <= 1) {\n      n = n * 100 + '%';\n    }\n\n    return n;\n  }\n\n  // Converts a decimal to a hex value\n  function convertDecimalToHex(d) {\n    return Math.round(parseFloat(d) * 255).toString(16);\n  }\n  // Converts a hex value to a decimal\n  function convertHexToDecimal(h) {\n    return parseIntFromHex(h) / 255;\n  }\n\n  var matchers = (function () {\n    // <http://www.w3.org/TR/css3-values/#integers>\n    var CSS_INTEGER = '[-\\\\+]?\\\\d+%?';\n\n    // <http://www.w3.org/TR/css3-values/#number-value>\n    var CSS_NUMBER = '[-\\\\+]?\\\\d*\\\\.\\\\d+%?';\n\n    // Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.\n    var CSS_UNIT = '(?:' + CSS_NUMBER + ')|(?:' + CSS_INTEGER + ')';\n\n    // Actual matching.\n    // Parentheses and commas are optional, but not required.\n    // Whitespace can take the place of commas or opening paren\n    var PERMISSIVE_MATCH3 =\n      '[\\\\s|\\\\(]+(' + CSS_UNIT + ')[,|\\\\s]+(' + CSS_UNIT + ')[,|\\\\s]+(' + CSS_UNIT + ')\\\\s*\\\\)?';\n    var PERMISSIVE_MATCH4 =\n      '[\\\\s|\\\\(]+(' +\n      CSS_UNIT +\n      ')[,|\\\\s]+(' +\n      CSS_UNIT +\n      ')[,|\\\\s]+(' +\n      CSS_UNIT +\n      ')[,|\\\\s]+(' +\n      CSS_UNIT +\n      ')\\\\s*\\\\)?';\n\n    return {\n      CSS_UNIT: new RegExp(CSS_UNIT),\n      rgb: new RegExp('rgb' + PERMISSIVE_MATCH3),\n      rgba: new RegExp('rgba' + PERMISSIVE_MATCH4),\n      hsl: new RegExp('hsl' + PERMISSIVE_MATCH3),\n      hsla: new RegExp('hsla' + PERMISSIVE_MATCH4),\n      hsv: new RegExp('hsv' + PERMISSIVE_MATCH3),\n      hsva: new RegExp('hsva' + PERMISSIVE_MATCH4),\n      hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n      hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n      hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n      hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/\n    };\n  })();\n\n  // `isValidCSSUnit`\n  // Take in a single string / number and check to see if it looks like a CSS unit\n  // (see `matchers` above for definition).\n  function isValidCSSUnit(color) {\n    return !!matchers.CSS_UNIT.exec(color);\n  }\n\n  // `stringInputToObject`\n  // Permissive string parsing.  Take in a number of formats, and output an object\n  // based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`\n  function stringInputToObject(color) {\n    color = color.replace(trimLeft, '').replace(trimRight, '').toLowerCase();\n    var named = false;\n    if (names[color]) {\n      color = names[color];\n      named = true;\n    } else if (color == 'transparent') {\n      return { r: 0, g: 0, b: 0, a: 0, format: 'name' };\n    }\n\n    // Try to match string input using regular expressions.\n    // Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]\n    // Just return an object and let the conversion functions handle that.\n    // This way the result will be the same whether the tinycolor is initialized with string or object.\n    var match;\n    if ((match = matchers.rgb.exec(color))) {\n      return { r: match[1], g: match[2], b: match[3] };\n    }\n    if ((match = matchers.rgba.exec(color))) {\n      return { r: match[1], g: match[2], b: match[3], a: match[4] };\n    }\n    if ((match = matchers.hsl.exec(color))) {\n      return { h: match[1], s: match[2], l: match[3] };\n    }\n    if ((match = matchers.hsla.exec(color))) {\n      return { h: match[1], s: match[2], l: match[3], a: match[4] };\n    }\n    if ((match = matchers.hsv.exec(color))) {\n      return { h: match[1], s: match[2], v: match[3] };\n    }\n    if ((match = matchers.hsva.exec(color))) {\n      return { h: match[1], s: match[2], v: match[3], a: match[4] };\n    }\n    if ((match = matchers.hex8.exec(color))) {\n      return {\n        r: parseIntFromHex(match[1]),\n        g: parseIntFromHex(match[2]),\n        b: parseIntFromHex(match[3]),\n        a: convertHexToDecimal(match[4]),\n        format: named ? 'name' : 'hex8'\n      };\n    }\n    if ((match = matchers.hex6.exec(color))) {\n      return {\n        r: parseIntFromHex(match[1]),\n        g: parseIntFromHex(match[2]),\n        b: parseIntFromHex(match[3]),\n        format: named ? 'name' : 'hex'\n      };\n    }\n    if ((match = matchers.hex4.exec(color))) {\n      return {\n        r: parseIntFromHex(match[1] + '' + match[1]),\n        g: parseIntFromHex(match[2] + '' + match[2]),\n        b: parseIntFromHex(match[3] + '' + match[3]),\n        a: convertHexToDecimal(match[4] + '' + match[4]),\n        format: named ? 'name' : 'hex8'\n      };\n    }\n    if ((match = matchers.hex3.exec(color))) {\n      return {\n        r: parseIntFromHex(match[1] + '' + match[1]),\n        g: parseIntFromHex(match[2] + '' + match[2]),\n        b: parseIntFromHex(match[3] + '' + match[3]),\n        format: named ? 'name' : 'hex'\n      };\n    }\n\n    return false;\n  }\n\n  function validateWCAG2Parms(parms) {\n    // return valid WCAG2 parms for isReadable.\n    // If input parms are invalid, return {\"level\":\"AA\", \"size\":\"small\"}\n    var level, size;\n    parms = parms || { level: 'AA', size: 'small' };\n    level = (parms.level || 'AA').toUpperCase();\n    size = (parms.size || 'small').toLowerCase();\n    if (level !== 'AA' && level !== 'AAA') {\n      level = 'AA';\n    }\n    if (size !== 'small' && size !== 'large') {\n      size = 'small';\n    }\n    return { level: level, size: size };\n  }\n\n  return tinycolor;\n})(Math);\n\n// Primary color number.\nvar PRIMARY_INDEX = 5;\nvar HUE_MAX = 360;\nvar SATURATION_MIN = 5;\nvar SATURATION_MAX = 100;\nvar BRIGHTNESS_MIN = 20;\nvar BRIGHTNESS_MAX = 100;\n\nvar COLOR_NUMBER_SET = ['50', '100', '200', '300', '400', '500', '600', '700', '800', '900'];\n\nfunction calculateHue(originalHue, index) {\n  originalHue = Math.round(originalHue) || 360;\n  // Dark color increase , light color reduction\n  const step = index - PRIMARY_INDEX;\n  const gap = 1;\n  const hue = originalHue + step * gap;\n\n  // The value of hue is [0,360).\n  // If it is greater than 360, the absolute value of the difference is taken.\n  return hue >= HUE_MAX ? Math.abs(hue - HUE_MAX) : hue;\n}\n\nfunction calculateSaturation(originalSaturation, index) {\n  originalSaturation = Math.round(originalSaturation * 100);\n  //  Dark color increase , light color reduction\n  const step = index - PRIMARY_INDEX;\n  const gap = Math.round(\n    (step > 0 && (100 - originalSaturation) / 4) ||\n      (originalSaturation > SATURATION_MIN && (originalSaturation - 5) / 5) ||\n      1\n  );\n  const saturation = originalSaturation + step * gap;\n  return (\n    // The value range of saturation is [5,100]\n    ((saturation < SATURATION_MIN && SATURATION_MIN) ||\n      (saturation > SATURATION_MAX && SATURATION_MAX) ||\n      saturation) / 100\n  );\n}\n\nfunction calculateBrightnessAdjustValue(brightness, step) {\n  if (step < 0) {\n    if (brightness > 40) {\n      // BasicGap rounded up to avoid a situation of 0.\n      let basicGap = Math.ceil((brightness - 40) / 4 / 4);\n      const levels = Math.abs(step);\n      // Less than 40, the brightness is smaller.\n      // n is a multiple of the reduction base (increased by the arithmetic progression)\n      const n = ((1 + levels) * levels) / 2;\n      return -1 * basicGap * n;\n    }\n    return Math.round(step * ((brightness - 20) / 4));\n  }\n  return Math.round(step * ((100 - brightness) / 5));\n}\n\nfunction calculateBrightness(originalBrightness, index) {\n  originalBrightness = Math.round(originalBrightness * 100);\n  // Light color reduction , dark color increase.\n  const step = PRIMARY_INDEX - index;\n  // When originalBrightness is less than 20, no adjustment.\n  if (step < 0 && originalBrightness < BRIGHTNESS_MIN) {\n    return originalBrightness / 100;\n  }\n  const adjustValue = calculateBrightnessAdjustValue(originalBrightness, step);\n  const brightness = originalBrightness + adjustValue;\n  return (\n    // The range of brightness is [20,100]\n    ((brightness < BRIGHTNESS_MIN && BRIGHTNESS_MIN) ||\n      (brightness > BRIGHTNESS_MAX && BRIGHTNESS_MAX) ||\n      brightness) / 100\n  );\n}\n\nmodule.exports = {\n  install: function (less, pluginManager, functions) {\n    /**\n     * Calculate color\n     * @param color\n     * @param colorNumber\n     */\n    functions.add('palette', function (color, colorNumber) {\n      const {\n        rgb: [r, g, b],\n        alpha: a\n      } = color;\n      const hsv = tinycolor({\n        r,\n        g,\n        b,\n        a\n      }).toHsv();\n      const index = COLOR_NUMBER_SET.indexOf('' + colorNumber.value);\n      if (index === -1 || index === PRIMARY_INDEX) {\n        return less.color(color.rgb);\n      }\n      return less.color(\n        tinycolor({\n          h: calculateHue(hsv.h, index),\n          s: calculateSaturation(hsv.s, index),\n          v: calculateBrightness(hsv.v, index)\n        }).toHex()\n      );\n    });\n  }\n};\n"],"mappings":"AAAA;AACA;AACA;;AAEA,IAAIA,SAAS,GAAI,UAAUC,IAAI,EAAE;EAC/B,IAAIC,QAAQ,GAAG,MAAM;IACnBC,SAAS,GAAG,MAAM;IAClBC,SAAS,GAAGH,IAAI,CAACI,KAAK;IACtBC,OAAO,GAAGL,IAAI,CAACM,GAAG;IAClBC,OAAO,GAAGP,IAAI,CAACQ,GAAG;IAClBC,UAAU,GAAGT,IAAI,CAACU,MAAM;EAE1B,SAASX,SAAS,CAACY,KAAK,EAAEC,IAAI,EAAE;IAC9BD,KAAK,GAAGA,KAAK,GAAGA,KAAK,GAAG,EAAE;IAC1BC,IAAI,GAAGA,IAAI,IAAI,CAAC,CAAC;;IAEjB;IACA,IAAID,KAAK,YAAYZ,SAAS,EAAE;MAC9B,OAAOY,KAAK;IACd;IACA;IACA,IAAI,EAAE,IAAI,YAAYZ,SAAS,CAAC,EAAE;MAChC,OAAO,IAAIA,SAAS,CAACY,KAAK,EAAEC,IAAI,CAAC;IACnC;IAEA,IAAIC,GAAG,GAAGC,UAAU,CAACH,KAAK,CAAC;IAC1B,IAAI,CAACI,cAAc,GAAGJ,KAAK,EACzB,IAAI,CAACK,EAAE,GAAGH,GAAG,CAACI,CAAC,EACf,IAAI,CAACC,EAAE,GAAGL,GAAG,CAACM,CAAC,EACf,IAAI,CAACC,EAAE,GAAGP,GAAG,CAACQ,CAAC,EACf,IAAI,CAACC,EAAE,GAAGT,GAAG,CAACU,CAAC,EACf,IAAI,CAACC,OAAO,GAAGrB,SAAS,CAAC,GAAG,GAAG,IAAI,CAACmB,EAAE,CAAC,GAAG,GAAG,EAC7C,IAAI,CAACG,OAAO,GAAGb,IAAI,CAACc,MAAM,IAAIb,GAAG,CAACa,MAAO;IAC5C,IAAI,CAACC,aAAa,GAAGf,IAAI,CAACgB,YAAY;;IAEtC;IACA;IACA;IACA;IACA,IAAI,IAAI,CAACZ,EAAE,GAAG,CAAC,EAAE;MACf,IAAI,CAACA,EAAE,GAAGb,SAAS,CAAC,IAAI,CAACa,EAAE,CAAC;IAC9B;IACA,IAAI,IAAI,CAACE,EAAE,GAAG,CAAC,EAAE;MACf,IAAI,CAACA,EAAE,GAAGf,SAAS,CAAC,IAAI,CAACe,EAAE,CAAC;IAC9B;IACA,IAAI,IAAI,CAACE,EAAE,GAAG,CAAC,EAAE;MACf,IAAI,CAACA,EAAE,GAAGjB,SAAS,CAAC,IAAI,CAACiB,EAAE,CAAC;IAC9B;IAEA,IAAI,CAACS,GAAG,GAAGhB,GAAG,CAACiB,EAAE;EACnB;EAEA/B,SAAS,CAACgC,SAAS,GAAG;IACpBC,MAAM,EAAE,YAAY;MAClB,OAAO,IAAI,CAACC,aAAa,EAAE,GAAG,GAAG;IACnC,CAAC;IACDC,OAAO,EAAE,YAAY;MACnB,OAAO,CAAC,IAAI,CAACF,MAAM,EAAE;IACvB,CAAC;IACDG,OAAO,EAAE,YAAY;MACnB,OAAO,IAAI,CAACN,GAAG;IACjB,CAAC;IACDO,gBAAgB,EAAE,YAAY;MAC5B,OAAO,IAAI,CAACrB,cAAc;IAC5B,CAAC;IACDsB,SAAS,EAAE,YAAY;MACrB,OAAO,IAAI,CAACZ,OAAO;IACrB,CAAC;IACDa,QAAQ,EAAE,YAAY;MACpB,OAAO,IAAI,CAAChB,EAAE;IAChB,CAAC;IACDW,aAAa,EAAE,YAAY;MACzB;MACA,IAAIpB,GAAG,GAAG,IAAI,CAAC0B,KAAK,EAAE;MACtB,OAAO,CAAC1B,GAAG,CAACI,CAAC,GAAG,GAAG,GAAGJ,GAAG,CAACM,CAAC,GAAG,GAAG,GAAGN,GAAG,CAACQ,CAAC,GAAG,GAAG,IAAI,IAAI;IACzD,CAAC;IACDmB,YAAY,EAAE,YAAY;MACxB;MACA,IAAI3B,GAAG,GAAG,IAAI,CAAC0B,KAAK,EAAE;MACtB,IAAIE,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEC,CAAC,EAAEC,CAAC,EAAEC,CAAC;MAChCL,KAAK,GAAG5B,GAAG,CAACI,CAAC,GAAG,GAAG;MACnByB,KAAK,GAAG7B,GAAG,CAACM,CAAC,GAAG,GAAG;MACnBwB,KAAK,GAAG9B,GAAG,CAACQ,CAAC,GAAG,GAAG;MAEnB,IAAIoB,KAAK,IAAI,OAAO,EAAE;QACpBG,CAAC,GAAGH,KAAK,GAAG,KAAK;MACnB,CAAC,MAAM;QACLG,CAAC,GAAG5C,IAAI,CAAC+C,GAAG,CAAC,CAACN,KAAK,GAAG,KAAK,IAAI,KAAK,EAAE,GAAG,CAAC;MAC5C;MACA,IAAIC,KAAK,IAAI,OAAO,EAAE;QACpBG,CAAC,GAAGH,KAAK,GAAG,KAAK;MACnB,CAAC,MAAM;QACLG,CAAC,GAAG7C,IAAI,CAAC+C,GAAG,CAAC,CAACL,KAAK,GAAG,KAAK,IAAI,KAAK,EAAE,GAAG,CAAC;MAC5C;MACA,IAAIC,KAAK,IAAI,OAAO,EAAE;QACpBG,CAAC,GAAGH,KAAK,GAAG,KAAK;MACnB,CAAC,MAAM;QACLG,CAAC,GAAG9C,IAAI,CAAC+C,GAAG,CAAC,CAACJ,KAAK,GAAG,KAAK,IAAI,KAAK,EAAE,GAAG,CAAC;MAC5C;MACA,OAAO,MAAM,GAAGC,CAAC,GAAG,MAAM,GAAGC,CAAC,GAAG,MAAM,GAAGC,CAAC;IAC7C,CAAC;IACDE,QAAQ,EAAE,UAAUC,KAAK,EAAE;MACzB,IAAI,CAAC3B,EAAE,GAAG4B,UAAU,CAACD,KAAK,CAAC;MAC3B,IAAI,CAACzB,OAAO,GAAGrB,SAAS,CAAC,GAAG,GAAG,IAAI,CAACmB,EAAE,CAAC,GAAG,GAAG;MAC7C,OAAO,IAAI;IACb,CAAC;IACD6B,KAAK,EAAE,YAAY;MACjB,IAAIC,GAAG,GAAGC,QAAQ,CAAC,IAAI,CAACrC,EAAE,EAAE,IAAI,CAACE,EAAE,EAAE,IAAI,CAACE,EAAE,CAAC;MAC7C,OAAO;QAAEkC,CAAC,EAAEF,GAAG,CAACE,CAAC,GAAG,GAAG;QAAEC,CAAC,EAAEH,GAAG,CAACG,CAAC;QAAEC,CAAC,EAAEJ,GAAG,CAACI,CAAC;QAAEjC,CAAC,EAAE,IAAI,CAACD;MAAG,CAAC;IAC3D,CAAC;IACDmC,WAAW,EAAE,YAAY;MACvB,IAAIL,GAAG,GAAGC,QAAQ,CAAC,IAAI,CAACrC,EAAE,EAAE,IAAI,CAACE,EAAE,EAAE,IAAI,CAACE,EAAE,CAAC;MAC7C,IAAIkC,CAAC,GAAGnD,SAAS,CAACiD,GAAG,CAACE,CAAC,GAAG,GAAG,CAAC;QAC5BC,CAAC,GAAGpD,SAAS,CAACiD,GAAG,CAACG,CAAC,GAAG,GAAG,CAAC;QAC1BC,CAAC,GAAGrD,SAAS,CAACiD,GAAG,CAACI,CAAC,GAAG,GAAG,CAAC;MAC5B,OAAO,IAAI,CAAClC,EAAE,IAAI,CAAC,GACf,MAAM,GAAGgC,CAAC,GAAG,IAAI,GAAGC,CAAC,GAAG,KAAK,GAAGC,CAAC,GAAG,IAAI,GACxC,OAAO,GAAGF,CAAC,GAAG,IAAI,GAAGC,CAAC,GAAG,KAAK,GAAGC,CAAC,GAAG,KAAK,GAAG,IAAI,CAAChC,OAAO,GAAG,GAAG;IACrE,CAAC;IACDkC,KAAK,EAAE,YAAY;MACjB,IAAIC,GAAG,GAAGC,QAAQ,CAAC,IAAI,CAAC5C,EAAE,EAAE,IAAI,CAACE,EAAE,EAAE,IAAI,CAACE,EAAE,CAAC;MAC7C,OAAO;QAAEkC,CAAC,EAAEK,GAAG,CAACL,CAAC,GAAG,GAAG;QAAEC,CAAC,EAAEI,GAAG,CAACJ,CAAC;QAAEM,CAAC,EAAEF,GAAG,CAACE,CAAC;QAAEtC,CAAC,EAAE,IAAI,CAACD;MAAG,CAAC;IAC3D,CAAC;IACDwC,WAAW,EAAE,YAAY;MACvB,IAAIH,GAAG,GAAGC,QAAQ,CAAC,IAAI,CAAC5C,EAAE,EAAE,IAAI,CAACE,EAAE,EAAE,IAAI,CAACE,EAAE,CAAC;MAC7C,IAAIkC,CAAC,GAAGnD,SAAS,CAACwD,GAAG,CAACL,CAAC,GAAG,GAAG,CAAC;QAC5BC,CAAC,GAAGpD,SAAS,CAACwD,GAAG,CAACJ,CAAC,GAAG,GAAG,CAAC;QAC1BM,CAAC,GAAG1D,SAAS,CAACwD,GAAG,CAACE,CAAC,GAAG,GAAG,CAAC;MAC5B,OAAO,IAAI,CAACvC,EAAE,IAAI,CAAC,GACf,MAAM,GAAGgC,CAAC,GAAG,IAAI,GAAGC,CAAC,GAAG,KAAK,GAAGM,CAAC,GAAG,IAAI,GACxC,OAAO,GAAGP,CAAC,GAAG,IAAI,GAAGC,CAAC,GAAG,KAAK,GAAGM,CAAC,GAAG,KAAK,GAAG,IAAI,CAACrC,OAAO,GAAG,GAAG;IACrE,CAAC;IACDuC,KAAK,EAAE,UAAUC,UAAU,EAAE;MAC3B,OAAOC,QAAQ,CAAC,IAAI,CAACjD,EAAE,EAAE,IAAI,CAACE,EAAE,EAAE,IAAI,CAACE,EAAE,EAAE4C,UAAU,CAAC;IACxD,CAAC;IACDE,WAAW,EAAE,UAAUF,UAAU,EAAE;MACjC,OAAO,GAAG,GAAG,IAAI,CAACD,KAAK,CAACC,UAAU,CAAC;IACrC,CAAC;IACDG,MAAM,EAAE,UAAUC,UAAU,EAAE;MAC5B,OAAOC,SAAS,CAAC,IAAI,CAACrD,EAAE,EAAE,IAAI,CAACE,EAAE,EAAE,IAAI,CAACE,EAAE,EAAE,IAAI,CAACE,EAAE,EAAE8C,UAAU,CAAC;IAClE,CAAC;IACDE,YAAY,EAAE,UAAUF,UAAU,EAAE;MAClC,OAAO,GAAG,GAAG,IAAI,CAACD,MAAM,CAACC,UAAU,CAAC;IACtC,CAAC;IACD7B,KAAK,EAAE,YAAY;MACjB,OAAO;QAAEtB,CAAC,EAAEd,SAAS,CAAC,IAAI,CAACa,EAAE,CAAC;QAAEG,CAAC,EAAEhB,SAAS,CAAC,IAAI,CAACe,EAAE,CAAC;QAAEG,CAAC,EAAElB,SAAS,CAAC,IAAI,CAACiB,EAAE,CAAC;QAAEG,CAAC,EAAE,IAAI,CAACD;MAAG,CAAC;IAC5F,CAAC;IACDiD,WAAW,EAAE,YAAY;MACvB,OAAO,IAAI,CAACjD,EAAE,IAAI,CAAC,GACf,MAAM,GAAGnB,SAAS,CAAC,IAAI,CAACa,EAAE,CAAC,GAAG,IAAI,GAAGb,SAAS,CAAC,IAAI,CAACe,EAAE,CAAC,GAAG,IAAI,GAAGf,SAAS,CAAC,IAAI,CAACiB,EAAE,CAAC,GAAG,GAAG,GACzF,OAAO,GACLjB,SAAS,CAAC,IAAI,CAACa,EAAE,CAAC,GAClB,IAAI,GACJb,SAAS,CAAC,IAAI,CAACe,EAAE,CAAC,GAClB,IAAI,GACJf,SAAS,CAAC,IAAI,CAACiB,EAAE,CAAC,GAClB,IAAI,GACJ,IAAI,CAACI,OAAO,GACZ,GAAG;IACX,CAAC;IACDgD,eAAe,EAAE,YAAY;MAC3B,OAAO;QACLvD,CAAC,EAAEd,SAAS,CAACsE,OAAO,CAAC,IAAI,CAACzD,EAAE,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG;QAC/CG,CAAC,EAAEhB,SAAS,CAACsE,OAAO,CAAC,IAAI,CAACvD,EAAE,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG;QAC/CG,CAAC,EAAElB,SAAS,CAACsE,OAAO,CAAC,IAAI,CAACrD,EAAE,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG;QAC/CG,CAAC,EAAE,IAAI,CAACD;MACV,CAAC;IACH,CAAC;IACDoD,qBAAqB,EAAE,YAAY;MACjC,OAAO,IAAI,CAACpD,EAAE,IAAI,CAAC,GACf,MAAM,GACJnB,SAAS,CAACsE,OAAO,CAAC,IAAI,CAACzD,EAAE,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GACtC,KAAK,GACLb,SAAS,CAACsE,OAAO,CAAC,IAAI,CAACvD,EAAE,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GACtC,KAAK,GACLf,SAAS,CAACsE,OAAO,CAAC,IAAI,CAACrD,EAAE,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GACtC,IAAI,GACN,OAAO,GACLjB,SAAS,CAACsE,OAAO,CAAC,IAAI,CAACzD,EAAE,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GACtC,KAAK,GACLb,SAAS,CAACsE,OAAO,CAAC,IAAI,CAACvD,EAAE,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GACtC,KAAK,GACLf,SAAS,CAACsE,OAAO,CAAC,IAAI,CAACrD,EAAE,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GACtC,KAAK,GACL,IAAI,CAACI,OAAO,GACZ,GAAG;IACX,CAAC;IACDmD,MAAM,EAAE,YAAY;MAClB,IAAI,IAAI,CAACrD,EAAE,KAAK,CAAC,EAAE;QACjB,OAAO,aAAa;MACtB;MAEA,IAAI,IAAI,CAACA,EAAE,GAAG,CAAC,EAAE;QACf,OAAO,KAAK;MACd;MAEA,OAAOsD,QAAQ,CAACX,QAAQ,CAAC,IAAI,CAACjD,EAAE,EAAE,IAAI,CAACE,EAAE,EAAE,IAAI,CAACE,EAAE,EAAE,IAAI,CAAC,CAAC,IAAI,KAAK;IACrE,CAAC;IACDyD,QAAQ,EAAE,UAAUC,WAAW,EAAE;MAC/B,IAAIC,UAAU,GAAG,GAAG,GAAGC,aAAa,CAAC,IAAI,CAAChE,EAAE,EAAE,IAAI,CAACE,EAAE,EAAE,IAAI,CAACE,EAAE,EAAE,IAAI,CAACE,EAAE,CAAC;MACxE,IAAI2D,gBAAgB,GAAGF,UAAU;MACjC,IAAInD,YAAY,GAAG,IAAI,CAACD,aAAa,GAAG,oBAAoB,GAAG,EAAE;MAEjE,IAAImD,WAAW,EAAE;QACf,IAAIvB,CAAC,GAAGxD,SAAS,CAAC+E,WAAW,CAAC;QAC9BG,gBAAgB,GAAG,GAAG,GAAGD,aAAa,CAACzB,CAAC,CAACvC,EAAE,EAAEuC,CAAC,CAACrC,EAAE,EAAEqC,CAAC,CAACnC,EAAE,EAAEmC,CAAC,CAACjC,EAAE,CAAC;MAChE;MAEA,OACE,6CAA6C,GAC7CM,YAAY,GACZ,gBAAgB,GAChBmD,UAAU,GACV,eAAe,GACfE,gBAAgB,GAChB,GAAG;IAEP,CAAC;IACDC,QAAQ,EAAE,UAAUxD,MAAM,EAAE;MAC1B,IAAIyD,SAAS,GAAG,CAAC,CAACzD,MAAM;MACxBA,MAAM,GAAGA,MAAM,IAAI,IAAI,CAACD,OAAO;MAE/B,IAAI2D,eAAe,GAAG,KAAK;MAC3B,IAAIC,QAAQ,GAAG,IAAI,CAAC/D,EAAE,GAAG,CAAC,IAAI,IAAI,CAACA,EAAE,IAAI,CAAC;MAC1C,IAAIgE,gBAAgB,GAClB,CAACH,SAAS,IACVE,QAAQ,KACP3D,MAAM,KAAK,KAAK,IACfA,MAAM,KAAK,MAAM,IACjBA,MAAM,KAAK,MAAM,IACjBA,MAAM,KAAK,MAAM,IACjBA,MAAM,KAAK,MAAM,IACjBA,MAAM,KAAK,MAAM,CAAC;MAEtB,IAAI4D,gBAAgB,EAAE;QACpB;QACA;QACA,IAAI5D,MAAM,KAAK,MAAM,IAAI,IAAI,CAACJ,EAAE,KAAK,CAAC,EAAE;UACtC,OAAO,IAAI,CAACqD,MAAM,EAAE;QACtB;QACA,OAAO,IAAI,CAACJ,WAAW,EAAE;MAC3B;MACA,IAAI7C,MAAM,KAAK,KAAK,EAAE;QACpB0D,eAAe,GAAG,IAAI,CAACb,WAAW,EAAE;MACtC;MACA,IAAI7C,MAAM,KAAK,MAAM,EAAE;QACrB0D,eAAe,GAAG,IAAI,CAACV,qBAAqB,EAAE;MAChD;MACA,IAAIhD,MAAM,KAAK,KAAK,IAAIA,MAAM,KAAK,MAAM,EAAE;QACzC0D,eAAe,GAAG,IAAI,CAAClB,WAAW,EAAE;MACtC;MACA,IAAIxC,MAAM,KAAK,MAAM,EAAE;QACrB0D,eAAe,GAAG,IAAI,CAAClB,WAAW,CAAC,IAAI,CAAC;MAC1C;MACA,IAAIxC,MAAM,KAAK,MAAM,EAAE;QACrB0D,eAAe,GAAG,IAAI,CAACd,YAAY,CAAC,IAAI,CAAC;MAC3C;MACA,IAAI5C,MAAM,KAAK,MAAM,EAAE;QACrB0D,eAAe,GAAG,IAAI,CAACd,YAAY,EAAE;MACvC;MACA,IAAI5C,MAAM,KAAK,MAAM,EAAE;QACrB0D,eAAe,GAAG,IAAI,CAACT,MAAM,EAAE;MACjC;MACA,IAAIjD,MAAM,KAAK,KAAK,EAAE;QACpB0D,eAAe,GAAG,IAAI,CAACtB,WAAW,EAAE;MACtC;MACA,IAAIpC,MAAM,KAAK,KAAK,EAAE;QACpB0D,eAAe,GAAG,IAAI,CAAC3B,WAAW,EAAE;MACtC;MAEA,OAAO2B,eAAe,IAAI,IAAI,CAAClB,WAAW,EAAE;IAC9C,CAAC;IACDqB,KAAK,EAAE,YAAY;MACjB,OAAOxF,SAAS,CAAC,IAAI,CAACmF,QAAQ,EAAE,CAAC;IACnC,CAAC;IAEDM,kBAAkB,EAAE,UAAUC,EAAE,EAAEC,IAAI,EAAE;MACtC,IAAI/E,KAAK,GAAG8E,EAAE,CAACE,KAAK,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAACC,MAAM,CAAC,EAAE,CAACC,KAAK,CAACC,IAAI,CAACJ,IAAI,CAAC,CAAC,CAAC;MAC9D,IAAI,CAAC1E,EAAE,GAAGL,KAAK,CAACK,EAAE;MAClB,IAAI,CAACE,EAAE,GAAGP,KAAK,CAACO,EAAE;MAClB,IAAI,CAACE,EAAE,GAAGT,KAAK,CAACS,EAAE;MAClB,IAAI,CAAC4B,QAAQ,CAACrC,KAAK,CAACW,EAAE,CAAC;MACvB,OAAO,IAAI;IACb,CAAC;IACDyE,OAAO,EAAE,YAAY;MACnB,OAAO,IAAI,CAACP,kBAAkB,CAACO,OAAO,EAAEC,SAAS,CAAC;IACpD,CAAC;IACDC,QAAQ,EAAE,YAAY;MACpB,OAAO,IAAI,CAACT,kBAAkB,CAACS,QAAQ,EAAED,SAAS,CAAC;IACrD,CAAC;IACDE,MAAM,EAAE,YAAY;MAClB,OAAO,IAAI,CAACV,kBAAkB,CAACU,MAAM,EAAEF,SAAS,CAAC;IACnD,CAAC;IACDG,UAAU,EAAE,YAAY;MACtB,OAAO,IAAI,CAACX,kBAAkB,CAACW,UAAU,EAAEH,SAAS,CAAC;IACvD,CAAC;IACDI,QAAQ,EAAE,YAAY;MACpB,OAAO,IAAI,CAACZ,kBAAkB,CAACY,QAAQ,EAAEJ,SAAS,CAAC;IACrD,CAAC;IACDK,SAAS,EAAE,YAAY;MACrB,OAAO,IAAI,CAACb,kBAAkB,CAACa,SAAS,EAAEL,SAAS,CAAC;IACtD,CAAC;IACDM,IAAI,EAAE,YAAY;MAChB,OAAO,IAAI,CAACd,kBAAkB,CAACc,IAAI,EAAEN,SAAS,CAAC;IACjD,CAAC;IAEDO,iBAAiB,EAAE,UAAUd,EAAE,EAAEC,IAAI,EAAE;MACrC,OAAOD,EAAE,CAACE,KAAK,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAACC,MAAM,CAAC,EAAE,CAACC,KAAK,CAACC,IAAI,CAACJ,IAAI,CAAC,CAAC,CAAC;IAC3D,CAAC;IACDc,SAAS,EAAE,YAAY;MACrB,OAAO,IAAI,CAACD,iBAAiB,CAACC,SAAS,EAAER,SAAS,CAAC;IACrD,CAAC;IACDS,UAAU,EAAE,YAAY;MACtB,OAAO,IAAI,CAACF,iBAAiB,CAACE,UAAU,EAAET,SAAS,CAAC;IACtD,CAAC;IACDU,aAAa,EAAE,YAAY;MACzB,OAAO,IAAI,CAACH,iBAAiB,CAACG,aAAa,EAAEV,SAAS,CAAC;IACzD,CAAC;IACDW,eAAe,EAAE,YAAY;MAC3B,OAAO,IAAI,CAACJ,iBAAiB,CAACI,eAAe,EAAEX,SAAS,CAAC;IAC3D,CAAC;IACDY,KAAK,EAAE,YAAY;MACjB,OAAO,IAAI,CAACL,iBAAiB,CAACK,KAAK,EAAEZ,SAAS,CAAC;IACjD,CAAC;IACDa,MAAM,EAAE,YAAY;MAClB,OAAO,IAAI,CAACN,iBAAiB,CAACM,MAAM,EAAEb,SAAS,CAAC;IAClD;EACF,CAAC;;EAED;EACA;EACAjG,SAAS,CAAC+G,SAAS,GAAG,UAAUnG,KAAK,EAAEC,IAAI,EAAE;IAC3C,IAAI,OAAOD,KAAK,IAAI,QAAQ,EAAE;MAC5B,IAAIoG,QAAQ,GAAG,CAAC,CAAC;MACjB,KAAK,IAAIC,CAAC,IAAIrG,KAAK,EAAE;QACnB,IAAIA,KAAK,CAACsG,cAAc,CAACD,CAAC,CAAC,EAAE;UAC3B,IAAIA,CAAC,KAAK,GAAG,EAAE;YACbD,QAAQ,CAACC,CAAC,CAAC,GAAGrG,KAAK,CAACqG,CAAC,CAAC;UACxB,CAAC,MAAM;YACLD,QAAQ,CAACC,CAAC,CAAC,GAAGE,mBAAmB,CAACvG,KAAK,CAACqG,CAAC,CAAC,CAAC;UAC7C;QACF;MACF;MACArG,KAAK,GAAGoG,QAAQ;IAClB;IAEA,OAAOhH,SAAS,CAACY,KAAK,EAAEC,IAAI,CAAC;EAC/B,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,SAASE,UAAU,CAACH,KAAK,EAAE;IACzB,IAAIE,GAAG,GAAG;MAAEI,CAAC,EAAE,CAAC;MAAEE,CAAC,EAAE,CAAC;MAAEE,CAAC,EAAE;IAAE,CAAC;IAC9B,IAAIE,CAAC,GAAG,CAAC;IACT,IAAIgC,CAAC,GAAG,IAAI;IACZ,IAAIC,CAAC,GAAG,IAAI;IACZ,IAAIK,CAAC,GAAG,IAAI;IACZ,IAAI/B,EAAE,GAAG,KAAK;IACd,IAAIJ,MAAM,GAAG,KAAK;IAElB,IAAI,OAAOf,KAAK,IAAI,QAAQ,EAAE;MAC5BA,KAAK,GAAGwG,mBAAmB,CAACxG,KAAK,CAAC;IACpC;IAEA,IAAI,OAAOA,KAAK,IAAI,QAAQ,EAAE;MAC5B,IAAIyG,cAAc,CAACzG,KAAK,CAACM,CAAC,CAAC,IAAImG,cAAc,CAACzG,KAAK,CAACQ,CAAC,CAAC,IAAIiG,cAAc,CAACzG,KAAK,CAACU,CAAC,CAAC,EAAE;QACjFR,GAAG,GAAGwG,QAAQ,CAAC1G,KAAK,CAACM,CAAC,EAAEN,KAAK,CAACQ,CAAC,EAAER,KAAK,CAACU,CAAC,CAAC;QACzCS,EAAE,GAAG,IAAI;QACTJ,MAAM,GAAG4F,MAAM,CAAC3G,KAAK,CAACM,CAAC,CAAC,CAACsG,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,GAAG,MAAM,GAAG,KAAK;MAC9D,CAAC,MAAM,IAAIH,cAAc,CAACzG,KAAK,CAAC2C,CAAC,CAAC,IAAI8D,cAAc,CAACzG,KAAK,CAAC4C,CAAC,CAAC,IAAI6D,cAAc,CAACzG,KAAK,CAAC6C,CAAC,CAAC,EAAE;QACxFD,CAAC,GAAG2D,mBAAmB,CAACvG,KAAK,CAAC4C,CAAC,CAAC;QAChCC,CAAC,GAAG0D,mBAAmB,CAACvG,KAAK,CAAC6C,CAAC,CAAC;QAChC3C,GAAG,GAAG2G,QAAQ,CAAC7G,KAAK,CAAC2C,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAC;QAC7B1B,EAAE,GAAG,IAAI;QACTJ,MAAM,GAAG,KAAK;MAChB,CAAC,MAAM,IAAI0F,cAAc,CAACzG,KAAK,CAAC2C,CAAC,CAAC,IAAI8D,cAAc,CAACzG,KAAK,CAAC4C,CAAC,CAAC,IAAI6D,cAAc,CAACzG,KAAK,CAACkD,CAAC,CAAC,EAAE;QACxFN,CAAC,GAAG2D,mBAAmB,CAACvG,KAAK,CAAC4C,CAAC,CAAC;QAChCM,CAAC,GAAGqD,mBAAmB,CAACvG,KAAK,CAACkD,CAAC,CAAC;QAChChD,GAAG,GAAG4G,QAAQ,CAAC9G,KAAK,CAAC2C,CAAC,EAAEC,CAAC,EAAEM,CAAC,CAAC;QAC7B/B,EAAE,GAAG,IAAI;QACTJ,MAAM,GAAG,KAAK;MAChB;MAEA,IAAIf,KAAK,CAACsG,cAAc,CAAC,GAAG,CAAC,EAAE;QAC7B1F,CAAC,GAAGZ,KAAK,CAACY,CAAC;MACb;IACF;IAEAA,CAAC,GAAG2B,UAAU,CAAC3B,CAAC,CAAC;IAEjB,OAAO;MACLO,EAAE,EAAEA,EAAE;MACNJ,MAAM,EAAEf,KAAK,CAACe,MAAM,IAAIA,MAAM;MAC9BT,CAAC,EAAEZ,OAAO,CAAC,GAAG,EAAEE,OAAO,CAACM,GAAG,CAACI,CAAC,EAAE,CAAC,CAAC,CAAC;MAClCE,CAAC,EAAEd,OAAO,CAAC,GAAG,EAAEE,OAAO,CAACM,GAAG,CAACM,CAAC,EAAE,CAAC,CAAC,CAAC;MAClCE,CAAC,EAAEhB,OAAO,CAAC,GAAG,EAAEE,OAAO,CAACM,GAAG,CAACQ,CAAC,EAAE,CAAC,CAAC,CAAC;MAClCE,CAAC,EAAEA;IACL,CAAC;EACH;;EAEA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA,SAAS8F,QAAQ,CAACpG,CAAC,EAAEE,CAAC,EAAEE,CAAC,EAAE;IACzB,OAAO;MACLJ,CAAC,EAAEwD,OAAO,CAACxD,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG;MACxBE,CAAC,EAAEsD,OAAO,CAACtD,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG;MACxBE,CAAC,EAAEoD,OAAO,CAACpD,CAAC,EAAE,GAAG,CAAC,GAAG;IACvB,CAAC;EACH;;EAEA;EACA;EACA;EACA;EACA,SAASuC,QAAQ,CAAC3C,CAAC,EAAEE,CAAC,EAAEE,CAAC,EAAE;IACzBJ,CAAC,GAAGwD,OAAO,CAACxD,CAAC,EAAE,GAAG,CAAC;IACnBE,CAAC,GAAGsD,OAAO,CAACtD,CAAC,EAAE,GAAG,CAAC;IACnBE,CAAC,GAAGoD,OAAO,CAACpD,CAAC,EAAE,GAAG,CAAC;IAEnB,IAAIb,GAAG,GAAGD,OAAO,CAACU,CAAC,EAAEE,CAAC,EAAEE,CAAC,CAAC;MACxBf,GAAG,GAAGD,OAAO,CAACY,CAAC,EAAEE,CAAC,EAAEE,CAAC,CAAC;IACxB,IAAIiC,CAAC;MACHC,CAAC;MACDM,CAAC,GAAG,CAACrD,GAAG,GAAGF,GAAG,IAAI,CAAC;IAErB,IAAIE,GAAG,IAAIF,GAAG,EAAE;MACdgD,CAAC,GAAGC,CAAC,GAAG,CAAC,CAAC,CAAC;IACb,CAAC,MAAM;MACL,IAAImE,CAAC,GAAGlH,GAAG,GAAGF,GAAG;MACjBiD,CAAC,GAAGM,CAAC,GAAG,GAAG,GAAG6D,CAAC,IAAI,CAAC,GAAGlH,GAAG,GAAGF,GAAG,CAAC,GAAGoH,CAAC,IAAIlH,GAAG,GAAGF,GAAG,CAAC;MACnD,QAAQE,GAAG;QACT,KAAKS,CAAC;UACJqC,CAAC,GAAG,CAACnC,CAAC,GAAGE,CAAC,IAAIqG,CAAC,IAAIvG,CAAC,GAAGE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;UACjC;QACF,KAAKF,CAAC;UACJmC,CAAC,GAAG,CAACjC,CAAC,GAAGJ,CAAC,IAAIyG,CAAC,GAAG,CAAC;UACnB;QACF,KAAKrG,CAAC;UACJiC,CAAC,GAAG,CAACrC,CAAC,GAAGE,CAAC,IAAIuG,CAAC,GAAG,CAAC;UACnB;MAAM;MAGVpE,CAAC,IAAI,CAAC;IACR;IAEA,OAAO;MAAEA,CAAC,EAAEA,CAAC;MAAEC,CAAC,EAAEA,CAAC;MAAEM,CAAC,EAAEA;IAAE,CAAC;EAC7B;;EAEA;EACA;EACA;EACA;EACA,SAAS4D,QAAQ,CAACnE,CAAC,EAAEC,CAAC,EAAEM,CAAC,EAAE;IACzB,IAAI5C,CAAC,EAAEE,CAAC,EAAEE,CAAC;IAEXiC,CAAC,GAAGmB,OAAO,CAACnB,CAAC,EAAE,GAAG,CAAC;IACnBC,CAAC,GAAGkB,OAAO,CAAClB,CAAC,EAAE,GAAG,CAAC;IACnBM,CAAC,GAAGY,OAAO,CAACZ,CAAC,EAAE,GAAG,CAAC;IAEnB,SAAS8D,OAAO,CAACC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAE;MACxB,IAAIA,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,CAAC;MACjB,IAAIA,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,CAAC;MACjB,IAAIA,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,OAAOF,CAAC,GAAG,CAACC,CAAC,GAAGD,CAAC,IAAI,CAAC,GAAGE,CAAC;MACzC,IAAIA,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,OAAOD,CAAC;MACvB,IAAIC,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,OAAOF,CAAC,GAAG,CAACC,CAAC,GAAGD,CAAC,KAAK,CAAC,GAAG,CAAC,GAAGE,CAAC,CAAC,GAAG,CAAC;MACnD,OAAOF,CAAC;IACV;IAEA,IAAIrE,CAAC,KAAK,CAAC,EAAE;MACXtC,CAAC,GAAGE,CAAC,GAAGE,CAAC,GAAGwC,CAAC,CAAC,CAAC;IACjB,CAAC,MAAM;MACL,IAAIgE,CAAC,GAAGhE,CAAC,GAAG,GAAG,GAAGA,CAAC,IAAI,CAAC,GAAGN,CAAC,CAAC,GAAGM,CAAC,GAAGN,CAAC,GAAGM,CAAC,GAAGN,CAAC;MAC7C,IAAIqE,CAAC,GAAG,CAAC,GAAG/D,CAAC,GAAGgE,CAAC;MACjB5G,CAAC,GAAG0G,OAAO,CAACC,CAAC,EAAEC,CAAC,EAAEvE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;MAC5BnC,CAAC,GAAGwG,OAAO,CAACC,CAAC,EAAEC,CAAC,EAAEvE,CAAC,CAAC;MACpBjC,CAAC,GAAGsG,OAAO,CAACC,CAAC,EAAEC,CAAC,EAAEvE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAC9B;IAEA,OAAO;MAAErC,CAAC,EAAEA,CAAC,GAAG,GAAG;MAAEE,CAAC,EAAEA,CAAC,GAAG,GAAG;MAAEE,CAAC,EAAEA,CAAC,GAAG;IAAI,CAAC;EAC/C;;EAEA;EACA;EACA;EACA;EACA,SAASgC,QAAQ,CAACpC,CAAC,EAAEE,CAAC,EAAEE,CAAC,EAAE;IACzBJ,CAAC,GAAGwD,OAAO,CAACxD,CAAC,EAAE,GAAG,CAAC;IACnBE,CAAC,GAAGsD,OAAO,CAACtD,CAAC,EAAE,GAAG,CAAC;IACnBE,CAAC,GAAGoD,OAAO,CAACpD,CAAC,EAAE,GAAG,CAAC;IAEnB,IAAIb,GAAG,GAAGD,OAAO,CAACU,CAAC,EAAEE,CAAC,EAAEE,CAAC,CAAC;MACxBf,GAAG,GAAGD,OAAO,CAACY,CAAC,EAAEE,CAAC,EAAEE,CAAC,CAAC;IACxB,IAAIiC,CAAC;MACHC,CAAC;MACDC,CAAC,GAAGhD,GAAG;IAET,IAAIkH,CAAC,GAAGlH,GAAG,GAAGF,GAAG;IACjBiD,CAAC,GAAG/C,GAAG,KAAK,CAAC,GAAG,CAAC,GAAGkH,CAAC,GAAGlH,GAAG;IAE3B,IAAIA,GAAG,IAAIF,GAAG,EAAE;MACdgD,CAAC,GAAG,CAAC,CAAC,CAAC;IACT,CAAC,MAAM;MACL,QAAQ9C,GAAG;QACT,KAAKS,CAAC;UACJqC,CAAC,GAAG,CAACnC,CAAC,GAAGE,CAAC,IAAIqG,CAAC,IAAIvG,CAAC,GAAGE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;UACjC;QACF,KAAKF,CAAC;UACJmC,CAAC,GAAG,CAACjC,CAAC,GAAGJ,CAAC,IAAIyG,CAAC,GAAG,CAAC;UACnB;QACF,KAAKrG,CAAC;UACJiC,CAAC,GAAG,CAACrC,CAAC,GAAGE,CAAC,IAAIuG,CAAC,GAAG,CAAC;UACnB;MAAM;MAEVpE,CAAC,IAAI,CAAC;IACR;IACA,OAAO;MAAEA,CAAC,EAAEA,CAAC;MAAEC,CAAC,EAAEA,CAAC;MAAEC,CAAC,EAAEA;IAAE,CAAC;EAC7B;;EAEA;EACA;EACA;EACA;EACA,SAASgE,QAAQ,CAAClE,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAE;IACzBF,CAAC,GAAGmB,OAAO,CAACnB,CAAC,EAAE,GAAG,CAAC,GAAG,CAAC;IACvBC,CAAC,GAAGkB,OAAO,CAAClB,CAAC,EAAE,GAAG,CAAC;IACnBC,CAAC,GAAGiB,OAAO,CAACjB,CAAC,EAAE,GAAG,CAAC;IAEnB,IAAIwD,CAAC,GAAGhH,IAAI,CAAC+H,KAAK,CAACzE,CAAC,CAAC;MACnB0E,CAAC,GAAG1E,CAAC,GAAG0D,CAAC;MACTY,CAAC,GAAGpE,CAAC,IAAI,CAAC,GAAGD,CAAC,CAAC;MACfsE,CAAC,GAAGrE,CAAC,IAAI,CAAC,GAAGwE,CAAC,GAAGzE,CAAC,CAAC;MACnBuE,CAAC,GAAGtE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAGwE,CAAC,IAAIzE,CAAC,CAAC;MACzB0E,GAAG,GAAGjB,CAAC,GAAG,CAAC;MACX/F,CAAC,GAAG,CAACuC,CAAC,EAAEqE,CAAC,EAAED,CAAC,EAAEA,CAAC,EAAEE,CAAC,EAAEtE,CAAC,CAAC,CAACyE,GAAG,CAAC;MAC3B9G,CAAC,GAAG,CAAC2G,CAAC,EAAEtE,CAAC,EAAEA,CAAC,EAAEqE,CAAC,EAAED,CAAC,EAAEA,CAAC,CAAC,CAACK,GAAG,CAAC;MAC3B5G,CAAC,GAAG,CAACuG,CAAC,EAAEA,CAAC,EAAEE,CAAC,EAAEtE,CAAC,EAAEA,CAAC,EAAEqE,CAAC,CAAC,CAACI,GAAG,CAAC;IAE7B,OAAO;MAAEhH,CAAC,EAAEA,CAAC,GAAG,GAAG;MAAEE,CAAC,EAAEA,CAAC,GAAG,GAAG;MAAEE,CAAC,EAAEA,CAAC,GAAG;IAAI,CAAC;EAC/C;;EAEA;EACA;EACA;EACA;EACA,SAAS4C,QAAQ,CAAChD,CAAC,EAAEE,CAAC,EAAEE,CAAC,EAAE2C,UAAU,EAAE;IACrC,IAAIkE,GAAG,GAAG,CACRC,IAAI,CAAChI,SAAS,CAACc,CAAC,CAAC,CAACiE,QAAQ,CAAC,EAAE,CAAC,CAAC,EAC/BiD,IAAI,CAAChI,SAAS,CAACgB,CAAC,CAAC,CAAC+D,QAAQ,CAAC,EAAE,CAAC,CAAC,EAC/BiD,IAAI,CAAChI,SAAS,CAACkB,CAAC,CAAC,CAAC6D,QAAQ,CAAC,EAAE,CAAC,CAAC,CAChC;;IAED;IACA,IACElB,UAAU,IACVkE,GAAG,CAAC,CAAC,CAAC,CAACE,MAAM,CAAC,CAAC,CAAC,IAAIF,GAAG,CAAC,CAAC,CAAC,CAACE,MAAM,CAAC,CAAC,CAAC,IACpCF,GAAG,CAAC,CAAC,CAAC,CAACE,MAAM,CAAC,CAAC,CAAC,IAAIF,GAAG,CAAC,CAAC,CAAC,CAACE,MAAM,CAAC,CAAC,CAAC,IACpCF,GAAG,CAAC,CAAC,CAAC,CAACE,MAAM,CAAC,CAAC,CAAC,IAAIF,GAAG,CAAC,CAAC,CAAC,CAACE,MAAM,CAAC,CAAC,CAAC,EACpC;MACA,OAAOF,GAAG,CAAC,CAAC,CAAC,CAACE,MAAM,CAAC,CAAC,CAAC,GAAGF,GAAG,CAAC,CAAC,CAAC,CAACE,MAAM,CAAC,CAAC,CAAC,GAAGF,GAAG,CAAC,CAAC,CAAC,CAACE,MAAM,CAAC,CAAC,CAAC;IAC/D;IAEA,OAAOF,GAAG,CAACG,IAAI,CAAC,EAAE,CAAC;EACrB;;EAEA;EACA;EACA;EACA;EACA,SAAShE,SAAS,CAACpD,CAAC,EAAEE,CAAC,EAAEE,CAAC,EAAEE,CAAC,EAAE6C,UAAU,EAAE;IACzC,IAAI8D,GAAG,GAAG,CACRC,IAAI,CAAChI,SAAS,CAACc,CAAC,CAAC,CAACiE,QAAQ,CAAC,EAAE,CAAC,CAAC,EAC/BiD,IAAI,CAAChI,SAAS,CAACgB,CAAC,CAAC,CAAC+D,QAAQ,CAAC,EAAE,CAAC,CAAC,EAC/BiD,IAAI,CAAChI,SAAS,CAACkB,CAAC,CAAC,CAAC6D,QAAQ,CAAC,EAAE,CAAC,CAAC,EAC/BiD,IAAI,CAACG,mBAAmB,CAAC/G,CAAC,CAAC,CAAC,CAC7B;;IAED;IACA,IACE6C,UAAU,IACV8D,GAAG,CAAC,CAAC,CAAC,CAACE,MAAM,CAAC,CAAC,CAAC,IAAIF,GAAG,CAAC,CAAC,CAAC,CAACE,MAAM,CAAC,CAAC,CAAC,IACpCF,GAAG,CAAC,CAAC,CAAC,CAACE,MAAM,CAAC,CAAC,CAAC,IAAIF,GAAG,CAAC,CAAC,CAAC,CAACE,MAAM,CAAC,CAAC,CAAC,IACpCF,GAAG,CAAC,CAAC,CAAC,CAACE,MAAM,CAAC,CAAC,CAAC,IAAIF,GAAG,CAAC,CAAC,CAAC,CAACE,MAAM,CAAC,CAAC,CAAC,IACpCF,GAAG,CAAC,CAAC,CAAC,CAACE,MAAM,CAAC,CAAC,CAAC,IAAIF,GAAG,CAAC,CAAC,CAAC,CAACE,MAAM,CAAC,CAAC,CAAC,EACpC;MACA,OAAOF,GAAG,CAAC,CAAC,CAAC,CAACE,MAAM,CAAC,CAAC,CAAC,GAAGF,GAAG,CAAC,CAAC,CAAC,CAACE,MAAM,CAAC,CAAC,CAAC,GAAGF,GAAG,CAAC,CAAC,CAAC,CAACE,MAAM,CAAC,CAAC,CAAC,GAAGF,GAAG,CAAC,CAAC,CAAC,CAACE,MAAM,CAAC,CAAC,CAAC;IAClF;IAEA,OAAOF,GAAG,CAACG,IAAI,CAAC,EAAE,CAAC;EACrB;;EAEA;EACA;EACA;EACA,SAASrD,aAAa,CAAC/D,CAAC,EAAEE,CAAC,EAAEE,CAAC,EAAEE,CAAC,EAAE;IACjC,IAAI2G,GAAG,GAAG,CACRC,IAAI,CAACG,mBAAmB,CAAC/G,CAAC,CAAC,CAAC,EAC5B4G,IAAI,CAAChI,SAAS,CAACc,CAAC,CAAC,CAACiE,QAAQ,CAAC,EAAE,CAAC,CAAC,EAC/BiD,IAAI,CAAChI,SAAS,CAACgB,CAAC,CAAC,CAAC+D,QAAQ,CAAC,EAAE,CAAC,CAAC,EAC/BiD,IAAI,CAAChI,SAAS,CAACkB,CAAC,CAAC,CAAC6D,QAAQ,CAAC,EAAE,CAAC,CAAC,CAChC;IAED,OAAOgD,GAAG,CAACG,IAAI,CAAC,EAAE,CAAC;EACrB;;EAEA;EACA;EACAtI,SAAS,CAACwI,MAAM,GAAG,UAAUC,MAAM,EAAEC,MAAM,EAAE;IAC3C,IAAI,CAACD,MAAM,IAAI,CAACC,MAAM,EAAE;MACtB,OAAO,KAAK;IACd;IACA,OAAO1I,SAAS,CAACyI,MAAM,CAAC,CAACjE,WAAW,EAAE,IAAIxE,SAAS,CAAC0I,MAAM,CAAC,CAAClE,WAAW,EAAE;EAC3E,CAAC;EAEDxE,SAAS,CAACW,MAAM,GAAG,YAAY;IAC7B,OAAOX,SAAS,CAAC+G,SAAS,CAAC;MACzB7F,CAAC,EAAER,UAAU,EAAE;MACfU,CAAC,EAAEV,UAAU,EAAE;MACfY,CAAC,EAAEZ,UAAU;IACf,CAAC,CAAC;EACJ,CAAC;;EAED;EACA;EACA;EACA;;EAEA,SAAS0F,UAAU,CAACxF,KAAK,EAAE+H,MAAM,EAAE;IACjCA,MAAM,GAAGA,MAAM,KAAK,CAAC,GAAG,CAAC,GAAGA,MAAM,IAAI,EAAE;IACxC,IAAI/E,GAAG,GAAG5D,SAAS,CAACY,KAAK,CAAC,CAAC+C,KAAK,EAAE;IAClCC,GAAG,CAACJ,CAAC,IAAImF,MAAM,GAAG,GAAG;IACrB/E,GAAG,CAACJ,CAAC,GAAGoF,OAAO,CAAChF,GAAG,CAACJ,CAAC,CAAC;IACtB,OAAOxD,SAAS,CAAC4D,GAAG,CAAC;EACvB;EAEA,SAASyC,QAAQ,CAACzF,KAAK,EAAE+H,MAAM,EAAE;IAC/BA,MAAM,GAAGA,MAAM,KAAK,CAAC,GAAG,CAAC,GAAGA,MAAM,IAAI,EAAE;IACxC,IAAI/E,GAAG,GAAG5D,SAAS,CAACY,KAAK,CAAC,CAAC+C,KAAK,EAAE;IAClCC,GAAG,CAACJ,CAAC,IAAImF,MAAM,GAAG,GAAG;IACrB/E,GAAG,CAACJ,CAAC,GAAGoF,OAAO,CAAChF,GAAG,CAACJ,CAAC,CAAC;IACtB,OAAOxD,SAAS,CAAC4D,GAAG,CAAC;EACvB;EAEA,SAAS0C,SAAS,CAAC1F,KAAK,EAAE;IACxB,OAAOZ,SAAS,CAACY,KAAK,CAAC,CAACwF,UAAU,CAAC,GAAG,CAAC;EACzC;EAEA,SAASJ,OAAO,CAACpF,KAAK,EAAE+H,MAAM,EAAE;IAC9BA,MAAM,GAAGA,MAAM,KAAK,CAAC,GAAG,CAAC,GAAGA,MAAM,IAAI,EAAE;IACxC,IAAI/E,GAAG,GAAG5D,SAAS,CAACY,KAAK,CAAC,CAAC+C,KAAK,EAAE;IAClCC,GAAG,CAACE,CAAC,IAAI6E,MAAM,GAAG,GAAG;IACrB/E,GAAG,CAACE,CAAC,GAAG8E,OAAO,CAAChF,GAAG,CAACE,CAAC,CAAC;IACtB,OAAO9D,SAAS,CAAC4D,GAAG,CAAC;EACvB;EAEA,SAASsC,QAAQ,CAACtF,KAAK,EAAE+H,MAAM,EAAE;IAC/BA,MAAM,GAAGA,MAAM,KAAK,CAAC,GAAG,CAAC,GAAGA,MAAM,IAAI,EAAE;IACxC,IAAI7H,GAAG,GAAGd,SAAS,CAACY,KAAK,CAAC,CAAC4B,KAAK,EAAE;IAClC1B,GAAG,CAACI,CAAC,GAAGV,OAAO,CAAC,CAAC,EAAEF,OAAO,CAAC,GAAG,EAAEQ,GAAG,CAACI,CAAC,GAAGd,SAAS,CAAC,GAAG,GAAG,EAAEuI,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1E7H,GAAG,CAACM,CAAC,GAAGZ,OAAO,CAAC,CAAC,EAAEF,OAAO,CAAC,GAAG,EAAEQ,GAAG,CAACM,CAAC,GAAGhB,SAAS,CAAC,GAAG,GAAG,EAAEuI,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1E7H,GAAG,CAACQ,CAAC,GAAGd,OAAO,CAAC,CAAC,EAAEF,OAAO,CAAC,GAAG,EAAEQ,GAAG,CAACQ,CAAC,GAAGlB,SAAS,CAAC,GAAG,GAAG,EAAEuI,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1E,OAAO3I,SAAS,CAACc,GAAG,CAAC;EACvB;EAEA,SAASqF,MAAM,CAACvF,KAAK,EAAE+H,MAAM,EAAE;IAC7BA,MAAM,GAAGA,MAAM,KAAK,CAAC,GAAG,CAAC,GAAGA,MAAM,IAAI,EAAE;IACxC,IAAI/E,GAAG,GAAG5D,SAAS,CAACY,KAAK,CAAC,CAAC+C,KAAK,EAAE;IAClCC,GAAG,CAACE,CAAC,IAAI6E,MAAM,GAAG,GAAG;IACrB/E,GAAG,CAACE,CAAC,GAAG8E,OAAO,CAAChF,GAAG,CAACE,CAAC,CAAC;IACtB,OAAO9D,SAAS,CAAC4D,GAAG,CAAC;EACvB;;EAEA;EACA;EACA,SAAS2C,IAAI,CAAC3F,KAAK,EAAE+H,MAAM,EAAE;IAC3B,IAAI/E,GAAG,GAAG5D,SAAS,CAACY,KAAK,CAAC,CAAC+C,KAAK,EAAE;IAClC,IAAIkF,GAAG,GAAG,CAACjF,GAAG,CAACL,CAAC,GAAGoF,MAAM,IAAI,GAAG;IAChC/E,GAAG,CAACL,CAAC,GAAGsF,GAAG,GAAG,CAAC,GAAG,GAAG,GAAGA,GAAG,GAAGA,GAAG;IACjC,OAAO7I,SAAS,CAAC4D,GAAG,CAAC;EACvB;;EAEA;EACA;EACA;EACA;;EAEA,SAAS8C,UAAU,CAAC9F,KAAK,EAAE;IACzB,IAAIgD,GAAG,GAAG5D,SAAS,CAACY,KAAK,CAAC,CAAC+C,KAAK,EAAE;IAClCC,GAAG,CAACL,CAAC,GAAG,CAACK,GAAG,CAACL,CAAC,GAAG,GAAG,IAAI,GAAG;IAC3B,OAAOvD,SAAS,CAAC4D,GAAG,CAAC;EACvB;EAEA,SAASiD,KAAK,CAACjG,KAAK,EAAE;IACpB,IAAIgD,GAAG,GAAG5D,SAAS,CAACY,KAAK,CAAC,CAAC+C,KAAK,EAAE;IAClC,IAAIJ,CAAC,GAAGK,GAAG,CAACL,CAAC;IACb,OAAO,CACLvD,SAAS,CAACY,KAAK,CAAC,EAChBZ,SAAS,CAAC;MAAEuD,CAAC,EAAE,CAACA,CAAC,GAAG,GAAG,IAAI,GAAG;MAAEC,CAAC,EAAEI,GAAG,CAACJ,CAAC;MAAEM,CAAC,EAAEF,GAAG,CAACE;IAAE,CAAC,CAAC,EACrD9D,SAAS,CAAC;MAAEuD,CAAC,EAAE,CAACA,CAAC,GAAG,GAAG,IAAI,GAAG;MAAEC,CAAC,EAAEI,GAAG,CAACJ,CAAC;MAAEM,CAAC,EAAEF,GAAG,CAACE;IAAE,CAAC,CAAC,CACtD;EACH;EAEA,SAASgD,MAAM,CAAClG,KAAK,EAAE;IACrB,IAAIgD,GAAG,GAAG5D,SAAS,CAACY,KAAK,CAAC,CAAC+C,KAAK,EAAE;IAClC,IAAIJ,CAAC,GAAGK,GAAG,CAACL,CAAC;IACb,OAAO,CACLvD,SAAS,CAACY,KAAK,CAAC,EAChBZ,SAAS,CAAC;MAAEuD,CAAC,EAAE,CAACA,CAAC,GAAG,EAAE,IAAI,GAAG;MAAEC,CAAC,EAAEI,GAAG,CAACJ,CAAC;MAAEM,CAAC,EAAEF,GAAG,CAACE;IAAE,CAAC,CAAC,EACpD9D,SAAS,CAAC;MAAEuD,CAAC,EAAE,CAACA,CAAC,GAAG,GAAG,IAAI,GAAG;MAAEC,CAAC,EAAEI,GAAG,CAACJ,CAAC;MAAEM,CAAC,EAAEF,GAAG,CAACE;IAAE,CAAC,CAAC,EACrD9D,SAAS,CAAC;MAAEuD,CAAC,EAAE,CAACA,CAAC,GAAG,GAAG,IAAI,GAAG;MAAEC,CAAC,EAAEI,GAAG,CAACJ,CAAC;MAAEM,CAAC,EAAEF,GAAG,CAACE;IAAE,CAAC,CAAC,CACtD;EACH;EAEA,SAAS8C,eAAe,CAAChG,KAAK,EAAE;IAC9B,IAAIgD,GAAG,GAAG5D,SAAS,CAACY,KAAK,CAAC,CAAC+C,KAAK,EAAE;IAClC,IAAIJ,CAAC,GAAGK,GAAG,CAACL,CAAC;IACb,OAAO,CACLvD,SAAS,CAACY,KAAK,CAAC,EAChBZ,SAAS,CAAC;MAAEuD,CAAC,EAAE,CAACA,CAAC,GAAG,EAAE,IAAI,GAAG;MAAEC,CAAC,EAAEI,GAAG,CAACJ,CAAC;MAAEM,CAAC,EAAEF,GAAG,CAACE;IAAE,CAAC,CAAC,EACpD9D,SAAS,CAAC;MAAEuD,CAAC,EAAE,CAACA,CAAC,GAAG,GAAG,IAAI,GAAG;MAAEC,CAAC,EAAEI,GAAG,CAACJ,CAAC;MAAEM,CAAC,EAAEF,GAAG,CAACE;IAAE,CAAC,CAAC,CACtD;EACH;EAEA,SAAS2C,SAAS,CAAC7F,KAAK,EAAEkI,OAAO,EAAEC,MAAM,EAAE;IACzCD,OAAO,GAAGA,OAAO,IAAI,CAAC;IACtBC,MAAM,GAAGA,MAAM,IAAI,EAAE;IAErB,IAAInF,GAAG,GAAG5D,SAAS,CAACY,KAAK,CAAC,CAAC+C,KAAK,EAAE;IAClC,IAAIqF,IAAI,GAAG,GAAG,GAAGD,MAAM;IACvB,IAAIE,GAAG,GAAG,CAACjJ,SAAS,CAACY,KAAK,CAAC,CAAC;IAE5B,KAAKgD,GAAG,CAACL,CAAC,GAAG,CAACK,GAAG,CAACL,CAAC,IAAKyF,IAAI,GAAGF,OAAO,IAAK,CAAC,CAAC,GAAG,GAAG,IAAI,GAAG,EAAE,EAAEA,OAAO,GAAI;MACvElF,GAAG,CAACL,CAAC,GAAG,CAACK,GAAG,CAACL,CAAC,GAAGyF,IAAI,IAAI,GAAG;MAC5BC,GAAG,CAACC,IAAI,CAAClJ,SAAS,CAAC4D,GAAG,CAAC,CAAC;IAC1B;IACA,OAAOqF,GAAG;EACZ;EAEA,SAAStC,aAAa,CAAC/F,KAAK,EAAEkI,OAAO,EAAE;IACrCA,OAAO,GAAGA,OAAO,IAAI,CAAC;IACtB,IAAIzF,GAAG,GAAGrD,SAAS,CAACY,KAAK,CAAC,CAACwC,KAAK,EAAE;IAClC,IAAIG,CAAC,GAAGF,GAAG,CAACE,CAAC;MACXC,CAAC,GAAGH,GAAG,CAACG,CAAC;MACTC,CAAC,GAAGJ,GAAG,CAACI,CAAC;IACX,IAAIwF,GAAG,GAAG,EAAE;IACZ,IAAIE,YAAY,GAAG,CAAC,GAAGL,OAAO;IAE9B,OAAOA,OAAO,EAAE,EAAE;MAChBG,GAAG,CAACC,IAAI,CAAClJ,SAAS,CAAC;QAAEuD,CAAC,EAAEA,CAAC;QAAEC,CAAC,EAAEA,CAAC;QAAEC,CAAC,EAAEA;MAAE,CAAC,CAAC,CAAC;MACzCA,CAAC,GAAG,CAACA,CAAC,GAAG0F,YAAY,IAAI,CAAC;IAC5B;IAEA,OAAOF,GAAG;EACZ;;EAEA;EACA;;EAEAjJ,SAAS,CAACoJ,GAAG,GAAG,UAAUX,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAE;IAChDA,MAAM,GAAGA,MAAM,KAAK,CAAC,GAAG,CAAC,GAAGA,MAAM,IAAI,EAAE;IAExC,IAAIU,IAAI,GAAGrJ,SAAS,CAACyI,MAAM,CAAC,CAACjG,KAAK,EAAE;IACpC,IAAI8G,IAAI,GAAGtJ,SAAS,CAAC0I,MAAM,CAAC,CAAClG,KAAK,EAAE;IAEpC,IAAIqF,CAAC,GAAGc,MAAM,GAAG,GAAG;IAEpB,IAAIY,IAAI,GAAG;MACTrI,CAAC,EAAE,CAACoI,IAAI,CAACpI,CAAC,GAAGmI,IAAI,CAACnI,CAAC,IAAI2G,CAAC,GAAGwB,IAAI,CAACnI,CAAC;MACjCE,CAAC,EAAE,CAACkI,IAAI,CAAClI,CAAC,GAAGiI,IAAI,CAACjI,CAAC,IAAIyG,CAAC,GAAGwB,IAAI,CAACjI,CAAC;MACjCE,CAAC,EAAE,CAACgI,IAAI,CAAChI,CAAC,GAAG+H,IAAI,CAAC/H,CAAC,IAAIuG,CAAC,GAAGwB,IAAI,CAAC/H,CAAC;MACjCE,CAAC,EAAE,CAAC8H,IAAI,CAAC9H,CAAC,GAAG6H,IAAI,CAAC7H,CAAC,IAAIqG,CAAC,GAAGwB,IAAI,CAAC7H;IAClC,CAAC;IAED,OAAOxB,SAAS,CAACuJ,IAAI,CAAC;EACxB,CAAC;;EAED;EACA;EACA;;EAEA;EACA;EACAvJ,SAAS,CAACwJ,WAAW,GAAG,UAAUf,MAAM,EAAEC,MAAM,EAAE;IAChD,IAAIe,EAAE,GAAGzJ,SAAS,CAACyI,MAAM,CAAC;IAC1B,IAAIiB,EAAE,GAAG1J,SAAS,CAAC0I,MAAM,CAAC;IAC1B,OACE,CAACzI,IAAI,CAACQ,GAAG,CAACgJ,EAAE,CAAChH,YAAY,EAAE,EAAEiH,EAAE,CAACjH,YAAY,EAAE,CAAC,GAAG,IAAI,KACrDxC,IAAI,CAACM,GAAG,CAACkJ,EAAE,CAAChH,YAAY,EAAE,EAAEiH,EAAE,CAACjH,YAAY,EAAE,CAAC,GAAG,IAAI,CAAC;EAE3D,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACAzC,SAAS,CAAC2J,UAAU,GAAG,UAAUlB,MAAM,EAAEC,MAAM,EAAEkB,KAAK,EAAE;IACtD,IAAIJ,WAAW,GAAGxJ,SAAS,CAACwJ,WAAW,CAACf,MAAM,EAAEC,MAAM,CAAC;IACvD,IAAImB,UAAU,EAAEC,GAAG;IAEnBA,GAAG,GAAG,KAAK;IAEXD,UAAU,GAAGE,kBAAkB,CAACH,KAAK,CAAC;IACtC,QAAQC,UAAU,CAACG,KAAK,GAAGH,UAAU,CAACI,IAAI;MACxC,KAAK,SAAS;MACd,KAAK,UAAU;QACbH,GAAG,GAAGN,WAAW,IAAI,GAAG;QACxB;MACF,KAAK,SAAS;QACZM,GAAG,GAAGN,WAAW,IAAI,CAAC;QACtB;MACF,KAAK,UAAU;QACbM,GAAG,GAAGN,WAAW,IAAI,CAAC;QACtB;IAAM;IAEV,OAAOM,GAAG;EACZ,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA9J,SAAS,CAACkK,YAAY,GAAG,UAAUC,SAAS,EAAEC,SAAS,EAAEzE,IAAI,EAAE;IAC7D,IAAI0E,SAAS,GAAG,IAAI;IACpB,IAAIC,SAAS,GAAG,CAAC;IACjB,IAAId,WAAW;IACf,IAAIe,qBAAqB,EAAEP,KAAK,EAAEC,IAAI;IACtCtE,IAAI,GAAGA,IAAI,IAAI,CAAC,CAAC;IACjB4E,qBAAqB,GAAG5E,IAAI,CAAC4E,qBAAqB;IAClDP,KAAK,GAAGrE,IAAI,CAACqE,KAAK;IAClBC,IAAI,GAAGtE,IAAI,CAACsE,IAAI;IAEhB,KAAK,IAAIhD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGmD,SAAS,CAACI,MAAM,EAAEvD,CAAC,EAAE,EAAE;MACzCuC,WAAW,GAAGxJ,SAAS,CAACwJ,WAAW,CAACW,SAAS,EAAEC,SAAS,CAACnD,CAAC,CAAC,CAAC;MAC5D,IAAIuC,WAAW,GAAGc,SAAS,EAAE;QAC3BA,SAAS,GAAGd,WAAW;QACvBa,SAAS,GAAGrK,SAAS,CAACoK,SAAS,CAACnD,CAAC,CAAC,CAAC;MACrC;IACF;IAEA,IACEjH,SAAS,CAAC2J,UAAU,CAACQ,SAAS,EAAEE,SAAS,EAAE;MAAEL,KAAK,EAAEA,KAAK;MAAEC,IAAI,EAAEA;IAAK,CAAC,CAAC,IACxE,CAACM,qBAAqB,EACtB;MACA,OAAOF,SAAS;IAClB,CAAC,MAAM;MACL1E,IAAI,CAAC4E,qBAAqB,GAAG,KAAK;MAClC,OAAOvK,SAAS,CAACkK,YAAY,CAACC,SAAS,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC,EAAExE,IAAI,CAAC;IAClE;EACF,CAAC;;EAED;EACA;EACA;EACA,IAAI8E,KAAK,GAAIzK,SAAS,CAACyK,KAAK,GAAG;IAC7BC,SAAS,EAAE,QAAQ;IACnBC,YAAY,EAAE,QAAQ;IACtBC,IAAI,EAAE,KAAK;IACXC,UAAU,EAAE,QAAQ;IACpBC,KAAK,EAAE,QAAQ;IACfC,KAAK,EAAE,QAAQ;IACfC,MAAM,EAAE,QAAQ;IAChBC,KAAK,EAAE,KAAK;IACZC,cAAc,EAAE,QAAQ;IACxBC,IAAI,EAAE,KAAK;IACXC,UAAU,EAAE,QAAQ;IACpBC,KAAK,EAAE,QAAQ;IACfC,SAAS,EAAE,QAAQ;IACnBC,WAAW,EAAE,QAAQ;IACrBC,SAAS,EAAE,QAAQ;IACnBC,UAAU,EAAE,QAAQ;IACpBC,SAAS,EAAE,QAAQ;IACnBC,KAAK,EAAE,QAAQ;IACfC,cAAc,EAAE,QAAQ;IACxBC,QAAQ,EAAE,QAAQ;IAClBC,OAAO,EAAE,QAAQ;IACjBC,IAAI,EAAE,KAAK;IACXC,QAAQ,EAAE,QAAQ;IAClBC,QAAQ,EAAE,QAAQ;IAClBC,aAAa,EAAE,QAAQ;IACvBC,QAAQ,EAAE,QAAQ;IAClBC,SAAS,EAAE,QAAQ;IACnBC,QAAQ,EAAE,QAAQ;IAClBC,SAAS,EAAE,QAAQ;IACnBC,WAAW,EAAE,QAAQ;IACrBC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBC,UAAU,EAAE,QAAQ;IACpBC,OAAO,EAAE,QAAQ;IACjBC,UAAU,EAAE,QAAQ;IACpBC,YAAY,EAAE,QAAQ;IACtBC,aAAa,EAAE,QAAQ;IACvBC,aAAa,EAAE,QAAQ;IACvBC,aAAa,EAAE,QAAQ;IACvBC,aAAa,EAAE,QAAQ;IACvBC,UAAU,EAAE,QAAQ;IACpBC,QAAQ,EAAE,QAAQ;IAClBC,WAAW,EAAE,QAAQ;IACrBC,OAAO,EAAE,QAAQ;IACjBC,OAAO,EAAE,QAAQ;IACjBC,UAAU,EAAE,QAAQ;IACpBC,SAAS,EAAE,QAAQ;IACnBC,WAAW,EAAE,QAAQ;IACrBC,WAAW,EAAE,QAAQ;IACrBC,OAAO,EAAE,KAAK;IACdC,SAAS,EAAE,QAAQ;IACnBC,UAAU,EAAE,QAAQ;IACpBC,IAAI,EAAE,QAAQ;IACdC,SAAS,EAAE,QAAQ;IACnBC,IAAI,EAAE,QAAQ;IACdC,KAAK,EAAE,QAAQ;IACfC,WAAW,EAAE,QAAQ;IACrBC,IAAI,EAAE,QAAQ;IACdC,QAAQ,EAAE,QAAQ;IAClBC,OAAO,EAAE,QAAQ;IACjBC,SAAS,EAAE,QAAQ;IACnBC,MAAM,EAAE,QAAQ;IAChBC,KAAK,EAAE,QAAQ;IACfC,KAAK,EAAE,QAAQ;IACfC,QAAQ,EAAE,QAAQ;IAClBC,aAAa,EAAE,QAAQ;IACvBC,SAAS,EAAE,QAAQ;IACnBC,YAAY,EAAE,QAAQ;IACtBC,SAAS,EAAE,QAAQ;IACnBC,UAAU,EAAE,QAAQ;IACpBC,SAAS,EAAE,QAAQ;IACnBC,oBAAoB,EAAE,QAAQ;IAC9BC,SAAS,EAAE,QAAQ;IACnBC,UAAU,EAAE,QAAQ;IACpBC,SAAS,EAAE,QAAQ;IACnBC,SAAS,EAAE,QAAQ;IACnBC,WAAW,EAAE,QAAQ;IACrBC,aAAa,EAAE,QAAQ;IACvBC,YAAY,EAAE,QAAQ;IACtBC,cAAc,EAAE,KAAK;IACrBC,cAAc,EAAE,KAAK;IACrBC,cAAc,EAAE,QAAQ;IACxBC,WAAW,EAAE,QAAQ;IACrBC,IAAI,EAAE,KAAK;IACXC,SAAS,EAAE,QAAQ;IACnBC,KAAK,EAAE,QAAQ;IACfC,OAAO,EAAE,KAAK;IACdC,MAAM,EAAE,QAAQ;IAChBC,gBAAgB,EAAE,QAAQ;IAC1BC,UAAU,EAAE,QAAQ;IACpBC,YAAY,EAAE,QAAQ;IACtBC,YAAY,EAAE,QAAQ;IACtBC,cAAc,EAAE,QAAQ;IACxBC,eAAe,EAAE,QAAQ;IACzBC,iBAAiB,EAAE,QAAQ;IAC3BC,eAAe,EAAE,QAAQ;IACzBC,eAAe,EAAE,QAAQ;IACzBC,YAAY,EAAE,QAAQ;IACtBC,SAAS,EAAE,QAAQ;IACnBC,SAAS,EAAE,QAAQ;IACnBC,QAAQ,EAAE,QAAQ;IAClBC,WAAW,EAAE,QAAQ;IACrBC,IAAI,EAAE,QAAQ;IACdC,OAAO,EAAE,QAAQ;IACjBC,KAAK,EAAE,QAAQ;IACfC,SAAS,EAAE,QAAQ;IACnBC,MAAM,EAAE,QAAQ;IAChBC,SAAS,EAAE,QAAQ;IACnBC,MAAM,EAAE,QAAQ;IAChBC,aAAa,EAAE,QAAQ;IACvBC,SAAS,EAAE,QAAQ;IACnBC,aAAa,EAAE,QAAQ;IACvBC,aAAa,EAAE,QAAQ;IACvBC,UAAU,EAAE,QAAQ;IACpBC,SAAS,EAAE,QAAQ;IACnBC,IAAI,EAAE,QAAQ;IACdC,IAAI,EAAE,QAAQ;IACdC,IAAI,EAAE,QAAQ;IACdC,UAAU,EAAE,QAAQ;IACpBC,MAAM,EAAE,QAAQ;IAChBC,aAAa,EAAE,QAAQ;IACvBC,GAAG,EAAE,KAAK;IACVC,SAAS,EAAE,QAAQ;IACnBC,SAAS,EAAE,QAAQ;IACnBC,WAAW,EAAE,QAAQ;IACrBC,MAAM,EAAE,QAAQ;IAChBC,UAAU,EAAE,QAAQ;IACpBC,QAAQ,EAAE,QAAQ;IAClBC,QAAQ,EAAE,QAAQ;IAClBC,MAAM,EAAE,QAAQ;IAChBC,MAAM,EAAE,QAAQ;IAChBC,OAAO,EAAE,QAAQ;IACjBC,SAAS,EAAE,QAAQ;IACnBC,SAAS,EAAE,QAAQ;IACnBC,SAAS,EAAE,QAAQ;IACnBC,IAAI,EAAE,QAAQ;IACdC,WAAW,EAAE,QAAQ;IACrBC,SAAS,EAAE,QAAQ;IACnBC,GAAG,EAAE,QAAQ;IACbC,IAAI,EAAE,QAAQ;IACdC,OAAO,EAAE,QAAQ;IACjBC,MAAM,EAAE,QAAQ;IAChBC,SAAS,EAAE,QAAQ;IACnBC,MAAM,EAAE,QAAQ;IAChBC,KAAK,EAAE,QAAQ;IACfC,KAAK,EAAE,KAAK;IACZC,UAAU,EAAE,QAAQ;IACpBC,MAAM,EAAE,KAAK;IACbC,WAAW,EAAE;EACf,CAAE;;EAEF;EACA,IAAIjP,QAAQ,GAAI7E,SAAS,CAAC6E,QAAQ,GAAGkP,IAAI,CAACtJ,KAAK,CAAE;;EAEjD;EACA;;EAEA;EACA,SAASsJ,IAAI,CAACC,CAAC,EAAE;IACf,IAAIC,OAAO,GAAG,CAAC,CAAC;IAChB,KAAK,IAAIhN,CAAC,IAAI+M,CAAC,EAAE;MACf,IAAIA,CAAC,CAAC9M,cAAc,CAACD,CAAC,CAAC,EAAE;QACvBgN,OAAO,CAACD,CAAC,CAAC/M,CAAC,CAAC,CAAC,GAAGA,CAAC;MACnB;IACF;IACA,OAAOgN,OAAO;EAChB;;EAEA;EACA,SAAS9Q,UAAU,CAAC3B,CAAC,EAAE;IACrBA,CAAC,GAAG0S,UAAU,CAAC1S,CAAC,CAAC;IAEjB,IAAI2S,KAAK,CAAC3S,CAAC,CAAC,IAAIA,CAAC,GAAG,CAAC,IAAIA,CAAC,GAAG,CAAC,EAAE;MAC9BA,CAAC,GAAG,CAAC;IACP;IAEA,OAAOA,CAAC;EACV;;EAEA;EACA,SAASkD,OAAO,CAAC0P,CAAC,EAAE3T,GAAG,EAAE;IACvB,IAAI4T,cAAc,CAACD,CAAC,CAAC,EAAE;MACrBA,CAAC,GAAG,MAAM;IACZ;IAEA,IAAIE,cAAc,GAAGC,YAAY,CAACH,CAAC,CAAC;IACpCA,CAAC,GAAG9T,OAAO,CAACG,GAAG,EAAED,OAAO,CAAC,CAAC,EAAE0T,UAAU,CAACE,CAAC,CAAC,CAAC,CAAC;;IAE3C;IACA,IAAIE,cAAc,EAAE;MAClBF,CAAC,GAAGI,QAAQ,CAACJ,CAAC,GAAG3T,GAAG,EAAE,EAAE,CAAC,GAAG,GAAG;IACjC;;IAEA;IACA,IAAIR,IAAI,CAACwU,GAAG,CAACL,CAAC,GAAG3T,GAAG,CAAC,GAAG,QAAQ,EAAE;MAChC,OAAO,CAAC;IACV;;IAEA;IACA,OAAQ2T,CAAC,GAAG3T,GAAG,GAAIyT,UAAU,CAACzT,GAAG,CAAC;EACpC;;EAEA;EACA,SAASmI,OAAO,CAAC8L,GAAG,EAAE;IACpB,OAAOpU,OAAO,CAAC,CAAC,EAAEE,OAAO,CAAC,CAAC,EAAEkU,GAAG,CAAC,CAAC;EACpC;;EAEA;EACA,SAASC,eAAe,CAACD,GAAG,EAAE;IAC5B,OAAOF,QAAQ,CAACE,GAAG,EAAE,EAAE,CAAC;EAC1B;;EAEA;EACA;EACA,SAASL,cAAc,CAACD,CAAC,EAAE;IACzB,OAAO,OAAOA,CAAC,IAAI,QAAQ,IAAIA,CAAC,CAACQ,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAIV,UAAU,CAACE,CAAC,CAAC,KAAK,CAAC;EAC5E;;EAEA;EACA,SAASG,YAAY,CAACH,CAAC,EAAE;IACvB,OAAO,OAAOA,CAAC,KAAK,QAAQ,IAAIA,CAAC,CAACQ,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;EACtD;;EAEA;EACA,SAASxM,IAAI,CAACyM,CAAC,EAAE;IACf,OAAOA,CAAC,CAACrK,MAAM,IAAI,CAAC,GAAG,GAAG,GAAGqK,CAAC,GAAG,EAAE,GAAGA,CAAC;EACzC;;EAEA;EACA,SAAS1N,mBAAmB,CAACiN,CAAC,EAAE;IAC9B,IAAIA,CAAC,IAAI,CAAC,EAAE;MACVA,CAAC,GAAGA,CAAC,GAAG,GAAG,GAAG,GAAG;IACnB;IAEA,OAAOA,CAAC;EACV;;EAEA;EACA,SAAS7L,mBAAmB,CAACZ,CAAC,EAAE;IAC9B,OAAO1H,IAAI,CAACI,KAAK,CAAC6T,UAAU,CAACvM,CAAC,CAAC,GAAG,GAAG,CAAC,CAACxC,QAAQ,CAAC,EAAE,CAAC;EACrD;EACA;EACA,SAAS2P,mBAAmB,CAACvR,CAAC,EAAE;IAC9B,OAAOoR,eAAe,CAACpR,CAAC,CAAC,GAAG,GAAG;EACjC;EAEA,IAAIwR,QAAQ,GAAI,YAAY;IAC1B;IACA,IAAIC,WAAW,GAAG,eAAe;;IAEjC;IACA,IAAIC,UAAU,GAAG,sBAAsB;;IAEvC;IACA,IAAIC,QAAQ,GAAG,KAAK,GAAGD,UAAU,GAAG,OAAO,GAAGD,WAAW,GAAG,GAAG;;IAE/D;IACA;IACA;IACA,IAAIG,iBAAiB,GACnB,aAAa,GAAGD,QAAQ,GAAG,YAAY,GAAGA,QAAQ,GAAG,YAAY,GAAGA,QAAQ,GAAG,WAAW;IAC5F,IAAIE,iBAAiB,GACnB,aAAa,GACbF,QAAQ,GACR,YAAY,GACZA,QAAQ,GACR,YAAY,GACZA,QAAQ,GACR,YAAY,GACZA,QAAQ,GACR,WAAW;IAEb,OAAO;MACLA,QAAQ,EAAE,IAAIG,MAAM,CAACH,QAAQ,CAAC;MAC9BpU,GAAG,EAAE,IAAIuU,MAAM,CAAC,KAAK,GAAGF,iBAAiB,CAAC;MAC1C5L,IAAI,EAAE,IAAI8L,MAAM,CAAC,MAAM,GAAGD,iBAAiB,CAAC;MAC5CxR,GAAG,EAAE,IAAIyR,MAAM,CAAC,KAAK,GAAGF,iBAAiB,CAAC;MAC1CG,IAAI,EAAE,IAAID,MAAM,CAAC,MAAM,GAAGD,iBAAiB,CAAC;MAC5C/R,GAAG,EAAE,IAAIgS,MAAM,CAAC,KAAK,GAAGF,iBAAiB,CAAC;MAC1CI,IAAI,EAAE,IAAIF,MAAM,CAAC,MAAM,GAAGD,iBAAiB,CAAC;MAC5CI,IAAI,EAAE,sDAAsD;MAC5DC,IAAI,EAAE,sDAAsD;MAC5DC,IAAI,EAAE,sEAAsE;MAC5EC,IAAI,EAAE;IACR,CAAC;EACH,CAAC,EAAG;;EAEJ;EACA;EACA;EACA,SAAStO,cAAc,CAACzG,KAAK,EAAE;IAC7B,OAAO,CAAC,CAACmU,QAAQ,CAACG,QAAQ,CAACU,IAAI,CAAChV,KAAK,CAAC;EACxC;;EAEA;EACA;EACA;EACA,SAASwG,mBAAmB,CAACxG,KAAK,EAAE;IAClCA,KAAK,GAAGA,KAAK,CAACiV,OAAO,CAAC3V,QAAQ,EAAE,EAAE,CAAC,CAAC2V,OAAO,CAAC1V,SAAS,EAAE,EAAE,CAAC,CAAC2V,WAAW,EAAE;IACxE,IAAIC,KAAK,GAAG,KAAK;IACjB,IAAItL,KAAK,CAAC7J,KAAK,CAAC,EAAE;MAChBA,KAAK,GAAG6J,KAAK,CAAC7J,KAAK,CAAC;MACpBmV,KAAK,GAAG,IAAI;IACd,CAAC,MAAM,IAAInV,KAAK,IAAI,aAAa,EAAE;MACjC,OAAO;QAAEM,CAAC,EAAE,CAAC;QAAEE,CAAC,EAAE,CAAC;QAAEE,CAAC,EAAE,CAAC;QAAEE,CAAC,EAAE,CAAC;QAAEG,MAAM,EAAE;MAAO,CAAC;IACnD;;IAEA;IACA;IACA;IACA;IACA,IAAIqU,KAAK;IACT,IAAKA,KAAK,GAAGjB,QAAQ,CAACjU,GAAG,CAAC8U,IAAI,CAAChV,KAAK,CAAC,EAAG;MACtC,OAAO;QAAEM,CAAC,EAAE8U,KAAK,CAAC,CAAC,CAAC;QAAE5U,CAAC,EAAE4U,KAAK,CAAC,CAAC,CAAC;QAAE1U,CAAC,EAAE0U,KAAK,CAAC,CAAC;MAAE,CAAC;IAClD;IACA,IAAKA,KAAK,GAAGjB,QAAQ,CAACxL,IAAI,CAACqM,IAAI,CAAChV,KAAK,CAAC,EAAG;MACvC,OAAO;QAAEM,CAAC,EAAE8U,KAAK,CAAC,CAAC,CAAC;QAAE5U,CAAC,EAAE4U,KAAK,CAAC,CAAC,CAAC;QAAE1U,CAAC,EAAE0U,KAAK,CAAC,CAAC,CAAC;QAAExU,CAAC,EAAEwU,KAAK,CAAC,CAAC;MAAE,CAAC;IAC/D;IACA,IAAKA,KAAK,GAAGjB,QAAQ,CAACnR,GAAG,CAACgS,IAAI,CAAChV,KAAK,CAAC,EAAG;MACtC,OAAO;QAAE2C,CAAC,EAAEyS,KAAK,CAAC,CAAC,CAAC;QAAExS,CAAC,EAAEwS,KAAK,CAAC,CAAC,CAAC;QAAElS,CAAC,EAAEkS,KAAK,CAAC,CAAC;MAAE,CAAC;IAClD;IACA,IAAKA,KAAK,GAAGjB,QAAQ,CAACO,IAAI,CAACM,IAAI,CAAChV,KAAK,CAAC,EAAG;MACvC,OAAO;QAAE2C,CAAC,EAAEyS,KAAK,CAAC,CAAC,CAAC;QAAExS,CAAC,EAAEwS,KAAK,CAAC,CAAC,CAAC;QAAElS,CAAC,EAAEkS,KAAK,CAAC,CAAC,CAAC;QAAExU,CAAC,EAAEwU,KAAK,CAAC,CAAC;MAAE,CAAC;IAC/D;IACA,IAAKA,KAAK,GAAGjB,QAAQ,CAAC1R,GAAG,CAACuS,IAAI,CAAChV,KAAK,CAAC,EAAG;MACtC,OAAO;QAAE2C,CAAC,EAAEyS,KAAK,CAAC,CAAC,CAAC;QAAExS,CAAC,EAAEwS,KAAK,CAAC,CAAC,CAAC;QAAEvS,CAAC,EAAEuS,KAAK,CAAC,CAAC;MAAE,CAAC;IAClD;IACA,IAAKA,KAAK,GAAGjB,QAAQ,CAACQ,IAAI,CAACK,IAAI,CAAChV,KAAK,CAAC,EAAG;MACvC,OAAO;QAAE2C,CAAC,EAAEyS,KAAK,CAAC,CAAC,CAAC;QAAExS,CAAC,EAAEwS,KAAK,CAAC,CAAC,CAAC;QAAEvS,CAAC,EAAEuS,KAAK,CAAC,CAAC,CAAC;QAAExU,CAAC,EAAEwU,KAAK,CAAC,CAAC;MAAE,CAAC;IAC/D;IACA,IAAKA,KAAK,GAAGjB,QAAQ,CAACY,IAAI,CAACC,IAAI,CAAChV,KAAK,CAAC,EAAG;MACvC,OAAO;QACLM,CAAC,EAAEyT,eAAe,CAACqB,KAAK,CAAC,CAAC,CAAC,CAAC;QAC5B5U,CAAC,EAAEuT,eAAe,CAACqB,KAAK,CAAC,CAAC,CAAC,CAAC;QAC5B1U,CAAC,EAAEqT,eAAe,CAACqB,KAAK,CAAC,CAAC,CAAC,CAAC;QAC5BxU,CAAC,EAAEsT,mBAAmB,CAACkB,KAAK,CAAC,CAAC,CAAC,CAAC;QAChCrU,MAAM,EAAEoU,KAAK,GAAG,MAAM,GAAG;MAC3B,CAAC;IACH;IACA,IAAKC,KAAK,GAAGjB,QAAQ,CAACU,IAAI,CAACG,IAAI,CAAChV,KAAK,CAAC,EAAG;MACvC,OAAO;QACLM,CAAC,EAAEyT,eAAe,CAACqB,KAAK,CAAC,CAAC,CAAC,CAAC;QAC5B5U,CAAC,EAAEuT,eAAe,CAACqB,KAAK,CAAC,CAAC,CAAC,CAAC;QAC5B1U,CAAC,EAAEqT,eAAe,CAACqB,KAAK,CAAC,CAAC,CAAC,CAAC;QAC5BrU,MAAM,EAAEoU,KAAK,GAAG,MAAM,GAAG;MAC3B,CAAC;IACH;IACA,IAAKC,KAAK,GAAGjB,QAAQ,CAACW,IAAI,CAACE,IAAI,CAAChV,KAAK,CAAC,EAAG;MACvC,OAAO;QACLM,CAAC,EAAEyT,eAAe,CAACqB,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE,GAAGA,KAAK,CAAC,CAAC,CAAC,CAAC;QAC5C5U,CAAC,EAAEuT,eAAe,CAACqB,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE,GAAGA,KAAK,CAAC,CAAC,CAAC,CAAC;QAC5C1U,CAAC,EAAEqT,eAAe,CAACqB,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE,GAAGA,KAAK,CAAC,CAAC,CAAC,CAAC;QAC5CxU,CAAC,EAAEsT,mBAAmB,CAACkB,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE,GAAGA,KAAK,CAAC,CAAC,CAAC,CAAC;QAChDrU,MAAM,EAAEoU,KAAK,GAAG,MAAM,GAAG;MAC3B,CAAC;IACH;IACA,IAAKC,KAAK,GAAGjB,QAAQ,CAACS,IAAI,CAACI,IAAI,CAAChV,KAAK,CAAC,EAAG;MACvC,OAAO;QACLM,CAAC,EAAEyT,eAAe,CAACqB,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE,GAAGA,KAAK,CAAC,CAAC,CAAC,CAAC;QAC5C5U,CAAC,EAAEuT,eAAe,CAACqB,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE,GAAGA,KAAK,CAAC,CAAC,CAAC,CAAC;QAC5C1U,CAAC,EAAEqT,eAAe,CAACqB,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE,GAAGA,KAAK,CAAC,CAAC,CAAC,CAAC;QAC5CrU,MAAM,EAAEoU,KAAK,GAAG,MAAM,GAAG;MAC3B,CAAC;IACH;IAEA,OAAO,KAAK;EACd;EAEA,SAAShM,kBAAkB,CAACkM,KAAK,EAAE;IACjC;IACA;IACA,IAAIjM,KAAK,EAAEC,IAAI;IACfgM,KAAK,GAAGA,KAAK,IAAI;MAAEjM,KAAK,EAAE,IAAI;MAAEC,IAAI,EAAE;IAAQ,CAAC;IAC/CD,KAAK,GAAG,CAACiM,KAAK,CAACjM,KAAK,IAAI,IAAI,EAAEkM,WAAW,EAAE;IAC3CjM,IAAI,GAAG,CAACgM,KAAK,CAAChM,IAAI,IAAI,OAAO,EAAE6L,WAAW,EAAE;IAC5C,IAAI9L,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAK,KAAK,EAAE;MACrCA,KAAK,GAAG,IAAI;IACd;IACA,IAAIC,IAAI,KAAK,OAAO,IAAIA,IAAI,KAAK,OAAO,EAAE;MACxCA,IAAI,GAAG,OAAO;IAChB;IACA,OAAO;MAAED,KAAK,EAAEA,KAAK;MAAEC,IAAI,EAAEA;IAAK,CAAC;EACrC;EAEA,OAAOjK,SAAS;AAClB,CAAC,CAAEC,IAAI,CAAC;;AAER;AACA,IAAIkW,aAAa,GAAG,CAAC;AACrB,IAAIC,OAAO,GAAG,GAAG;AACjB,IAAIC,cAAc,GAAG,CAAC;AACtB,IAAIC,cAAc,GAAG,GAAG;AACxB,IAAIC,cAAc,GAAG,EAAE;AACvB,IAAIC,cAAc,GAAG,GAAG;AAExB,IAAIC,gBAAgB,GAAG,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;AAE5F,SAASC,YAAY,CAACC,WAAW,EAAEC,KAAK,EAAE;EACxCD,WAAW,GAAG1W,IAAI,CAACI,KAAK,CAACsW,WAAW,CAAC,IAAI,GAAG;EAC5C;EACA,MAAME,IAAI,GAAGD,KAAK,GAAGT,aAAa;EAClC,MAAMW,GAAG,GAAG,CAAC;EACb,MAAMjO,GAAG,GAAG8N,WAAW,GAAGE,IAAI,GAAGC,GAAG;;EAEpC;EACA;EACA,OAAOjO,GAAG,IAAIuN,OAAO,GAAGnW,IAAI,CAACwU,GAAG,CAAC5L,GAAG,GAAGuN,OAAO,CAAC,GAAGvN,GAAG;AACvD;AAEA,SAASkO,mBAAmB,CAACC,kBAAkB,EAAEJ,KAAK,EAAE;EACtDI,kBAAkB,GAAG/W,IAAI,CAACI,KAAK,CAAC2W,kBAAkB,GAAG,GAAG,CAAC;EACzD;EACA,MAAMH,IAAI,GAAGD,KAAK,GAAGT,aAAa;EAClC,MAAMW,GAAG,GAAG7W,IAAI,CAACI,KAAK,CACnBwW,IAAI,GAAG,CAAC,IAAI,CAAC,GAAG,GAAGG,kBAAkB,IAAI,CAAC,IACxCA,kBAAkB,GAAGX,cAAc,IAAI,CAACW,kBAAkB,GAAG,CAAC,IAAI,CAAE,IACrE,CAAC,CACJ;EACD,MAAMC,UAAU,GAAGD,kBAAkB,GAAGH,IAAI,GAAGC,GAAG;EAClD;IACE;IACA,CAAEG,UAAU,GAAGZ,cAAc,IAAIA,cAAc,IAC5CY,UAAU,GAAGX,cAAc,IAAIA,cAAe,IAC/CW,UAAU,IAAI;EAAG;AAEvB;AAEA,SAASC,8BAA8B,CAACC,UAAU,EAAEN,IAAI,EAAE;EACxD,IAAIA,IAAI,GAAG,CAAC,EAAE;IACZ,IAAIM,UAAU,GAAG,EAAE,EAAE;MACnB;MACA,IAAIC,QAAQ,GAAGnX,IAAI,CAACoX,IAAI,CAAC,CAACF,UAAU,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;MACnD,MAAMG,MAAM,GAAGrX,IAAI,CAACwU,GAAG,CAACoC,IAAI,CAAC;MAC7B;MACA;MACA,MAAMzC,CAAC,GAAI,CAAC,CAAC,GAAGkD,MAAM,IAAIA,MAAM,GAAI,CAAC;MACrC,OAAO,CAAC,CAAC,GAAGF,QAAQ,GAAGhD,CAAC;IAC1B;IACA,OAAOnU,IAAI,CAACI,KAAK,CAACwW,IAAI,IAAI,CAACM,UAAU,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC;EACnD;EACA,OAAOlX,IAAI,CAACI,KAAK,CAACwW,IAAI,IAAI,CAAC,GAAG,GAAGM,UAAU,IAAI,CAAC,CAAC,CAAC;AACpD;AAEA,SAASI,mBAAmB,CAACC,kBAAkB,EAAEZ,KAAK,EAAE;EACtDY,kBAAkB,GAAGvX,IAAI,CAACI,KAAK,CAACmX,kBAAkB,GAAG,GAAG,CAAC;EACzD;EACA,MAAMX,IAAI,GAAGV,aAAa,GAAGS,KAAK;EAClC;EACA,IAAIC,IAAI,GAAG,CAAC,IAAIW,kBAAkB,GAAGjB,cAAc,EAAE;IACnD,OAAOiB,kBAAkB,GAAG,GAAG;EACjC;EACA,MAAMC,WAAW,GAAGP,8BAA8B,CAACM,kBAAkB,EAAEX,IAAI,CAAC;EAC5E,MAAMM,UAAU,GAAGK,kBAAkB,GAAGC,WAAW;EACnD;IACE;IACA,CAAEN,UAAU,GAAGZ,cAAc,IAAIA,cAAc,IAC5CY,UAAU,GAAGX,cAAc,IAAIA,cAAe,IAC/CW,UAAU,IAAI;EAAG;AAEvB;AAEAO,MAAM,CAACC,OAAO,GAAG;EACfC,OAAO,EAAE,UAAUC,IAAI,EAAEC,aAAa,EAAEC,SAAS,EAAE;IACjD;AACJ;AACA;AACA;AACA;IACIA,SAAS,CAACC,GAAG,CAAC,SAAS,EAAE,UAAUpX,KAAK,EAAEqX,WAAW,EAAE;MACrD,MAAM;QACJnX,GAAG,EAAE,CAACI,CAAC,EAAEE,CAAC,EAAEE,CAAC,CAAC;QACd4W,KAAK,EAAE1W;MACT,CAAC,GAAGZ,KAAK;MACT,MAAMyC,GAAG,GAAGrD,SAAS,CAAC;QACpBkB,CAAC;QACDE,CAAC;QACDE,CAAC;QACDE;MACF,CAAC,CAAC,CAAC4B,KAAK,EAAE;MACV,MAAMwT,KAAK,GAAGH,gBAAgB,CAAC7B,OAAO,CAAC,EAAE,GAAGqD,WAAW,CAAC/U,KAAK,CAAC;MAC9D,IAAI0T,KAAK,KAAK,CAAC,CAAC,IAAIA,KAAK,KAAKT,aAAa,EAAE;QAC3C,OAAO0B,IAAI,CAACjX,KAAK,CAACA,KAAK,CAACE,GAAG,CAAC;MAC9B;MACA,OAAO+W,IAAI,CAACjX,KAAK,CACfZ,SAAS,CAAC;QACRuD,CAAC,EAAEmT,YAAY,CAACrT,GAAG,CAACE,CAAC,EAAEqT,KAAK,CAAC;QAC7BpT,CAAC,EAAEuT,mBAAmB,CAAC1T,GAAG,CAACG,CAAC,EAAEoT,KAAK,CAAC;QACpCnT,CAAC,EAAE8T,mBAAmB,CAAClU,GAAG,CAACI,CAAC,EAAEmT,KAAK;MACrC,CAAC,CAAC,CAAC5S,KAAK,EAAE,CACX;IACH,CAAC,CAAC;EACJ;AACF,CAAC"},"metadata":{},"sourceType":"script"}