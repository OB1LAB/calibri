{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\OB1CHAM\\\\Desktop\\\\OB1LAB\\\\React\\\\calibri\\\\client\\\\src\\\\components\\\\admin\\\\Logs.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport Loader from \"../Loader/Loader\";\nimport LogsService from \"../../services/LogsService\";\n// import classes from \"./Admin.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Logs(_ref) {\n  _s();\n  let {\n    user\n  } = _ref;\n  const [logs, setLogs] = useState([]);\n  useEffect(() => {\n    const getLogs = async () => {\n      const response = await LogsService.fetchLogs();\n      response && setLogs(response.data);\n    };\n    getLogs();\n  }, []);\n  if (logs.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: logs.map((log, index) => {\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: log\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 16\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(Logs, \"6h9FKNtuyCQaVwwdLqmS9omOzEQ=\");\n_c = Logs;\nvar _c;\n$RefreshReg$(_c, \"Logs\");","map":{"version":3,"names":["useState","useEffect","Loader","LogsService","Logs","user","logs","setLogs","getLogs","response","fetchLogs","data","length","map","log","index"],"sources":["C:/Users/OB1CHAM/Desktop/OB1LAB/React/calibri/client/src/components/admin/Logs.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport Loader from \"../Loader/Loader\";\r\nimport LogsService from \"../../services/LogsService\";\r\n// import classes from \"./Admin.module.css\";\r\n\r\nexport default function Logs({ user }) {\r\n  const [logs, setLogs] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getLogs = async () => {\r\n      const response = await LogsService.fetchLogs();\r\n      response && setLogs(response.data);\r\n    };\r\n    getLogs();\r\n  }, []);\r\n\r\n  if (logs.length === 0) {\r\n    return <Loader />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {logs.map((log, index) => {\r\n        return <h1 key={index}>{log}</h1>;\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,MAAM,MAAM,kBAAkB;AACrC,OAAOC,WAAW,MAAM,4BAA4B;AACpD;AAAA;AAEA,eAAe,SAASC,IAAI,OAAW;EAAA;EAAA,IAAV;IAAEC;EAAK,CAAC;EACnC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEpCC,SAAS,CAAC,MAAM;IACd,MAAMO,OAAO,GAAG,YAAY;MAC1B,MAAMC,QAAQ,GAAG,MAAMN,WAAW,CAACO,SAAS,EAAE;MAC9CD,QAAQ,IAAIF,OAAO,CAACE,QAAQ,CAACE,IAAI,CAAC;IACpC,CAAC;IACDH,OAAO,EAAE;EACX,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIF,IAAI,CAACM,MAAM,KAAK,CAAC,EAAE;IACrB,oBAAO,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAG;EACnB;EAEA,oBACE;IAAA,UACGN,IAAI,CAACO,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAK;MACxB,oBAAO;QAAA,UAAiBD;MAAG,GAAXC,KAAK;QAAA;QAAA;QAAA;MAAA,QAAY;IACnC,CAAC;EAAC;IAAA;IAAA;IAAA;EAAA,QACE;AAEV;AAAC,GAtBuBX,IAAI;AAAA,KAAJA,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module"}